{"version":3,"sources":["components/generate/components/Controller/components/ModelsComponents/cat.svg","redux/actions.js","redux/actionTypes.js","components/generate/components/Controller/components/AddModelBtn.js","components/generate/components/Controller/components/ModelsComponents/ConfirmDel.js","colors.js","components/generate/components/Controller/components/ModelsComponents/AddProp.js","components/generate/components/Controller/components/ModelsComponents/Prop.js","components/generate/components/Controller/components/ModelsComponents/PropsDisplay.js","components/generate/components/Controller/components/ModelsComponents/CreateRel.js","zipFileContent/package.json.js","zipFileContent/readme.md.js","components/generate/components/Controller/util.js","components/generate/components/Controller/components/ModelsComponents/Model.js","components/generate/components/Controller/components/Models.js","components/generate/components/Controller/components/SaveModel.js","components/generate/components/Controller/components/LoadModel.js","components/generate/components/Controller/Controller.js","components/generate/Generate.js","components/Builder/maps.js","components/Builder/builderComponents/CommonProps/components/DraggableCommonProp.js","components/Builder/builderComponents/CommonProps/CommonProps.js","components/Builder/BuilderBody/BuilderBody.js","components/Header.js","components/Content.js","components/Footer.js","App.js","redux/reducers/models.reducer.js","redux/reducers/faker.reducer.js","redux/reducers/prop.reducer.js","redux/reducers/relation.reducer.js","redux/reducers/index.js","redux/reducers/auth.reducer.js","redux/store.js","index.js","components/generate/components/Controller/components/empty.svg","components/generate/components/Controller/components/emptySave.svg","components/generate/components/Controller/components/loadModels.svg","components/Builder/builderComponents/CommonProps/components/DraggableCommonProp.module.css","components/prototype.svg","components/prototype2.svg","components/features.svg","components/box.svg"],"names":["module","exports","addModel","model","type","payload","justAddProp","props","editProp","Header","Modal","Body","Footer","Title","connect","dispatch","useState","showNameModal","modelName","state","setState","close","create","id","v4","name","createdAt","Date","inputChange","str","trim","IconButton","color","onClick","appearance","style","width","icon","Icon","show","onHide","maxWidth","className","Input","onPressEnter","onChange","autoFocus","placeholder","size","value","Button","ConfirmDel","showConfirmModal","closeConfirmModal","del","backdrop","fontSize","ownProps","prop","propNamesForThisModel","showPropNameModal","addProp","mode","propNameProp","propId","propName","valid","strOrArrayOfStrings","display","marginBottom","Message","showIcon","description","TagPicker","creatable","menuStyle","find","forEach","disabled","length","Wrapper","styled","div","dangerClass","checkIfMobile","test","navigator","userAgent","ownProp","inputData","faker","i","regex","modelId","func","regexError","setRegexErrors","debouncedOnRegexUpdate","useDebouncedCallback","RegExp","List","Item","key","index","Grid","fluid","Row","colSpan","textAlign","Col","xs","sm","md","defaultValue","dangerClas","InputPicker","findRes","val","groupName","data","groupBy","margin","circle","propsEl","hover","map","uuid","others","src","cat","alt","height","models","relations","eligibleModels","filter","mainModel","checkedModels","Set","showCreateRel","toggleRel","checked","distId","Alert","success","info","removeRelation","toUpperCase","marginTop","Toggle","marginLeft","has","auth","scripts","dev","author","license","dependencies","generate","amount","relationsProps","justReturn","atLeastOneWithoutFunc","len","warning","join","res","generateFakeData","resWithRelations","obj","reduce","prev","downloadData","Array","from","regexStr","arrayElement","randexp","RandExp","gen","saveAs","Blob","toJSONPritty","JSON","stringify","relationsPropsGetter","relationsGetter","generateAPI","a","zip","JSZip","file","npmCongif","apiReadme","generateAsync","zipContent","error","console","group","log","groupEnd","propsCount","isTourOpen","useDrop","accept","canDrop","collect","monitor","hovered","isOver","drop","delToolTip","Tooltip","addKeyTip","generateTip","dynamicHeder","Tag","Whisper","placement","trigger","speaker","ref","Panel","shaded","backgroundColor","Badge","background","PanelGroup","bordered","header","values","Object","list","entries","comma","isNaN","push","sqlValues","sql","formattedSQL","format","clipboard","writeText","then","catch","position","paddingLeft","InputNumber","max","min","updateAmount","float","deleteModel","addPropName","modelsEls","empty","with","showModalSave","toSave","modelsKey","modelsEl","Checkbox","emptySave","rest","toSaveSet","saved","parse","localStorage","getItem","realToSave","setItem","showTheModalOfModels","loadModelsEmpty","m","load","Divider","steps","selector","content","setIsTourOpen","isOpen","onRequestClose","marginRight","generateAPIForAll","checkedChildren","unCheckedChildren","Generate","Map","DraggableCommonProp","label","children","useDrag","item","get","isDragging","dragRef","styles","cursor","boxShadow","CommonProps","fakerObj","useMemo","keyword","setKeyword","toLowerCase","includes","Navbar","Nav","HeaderComp","toggleDrawer","useCallback","to","activeClassName","exact","renderItem","pullRight","Drawer","ContentComp","bodyFill","prototype","href","target","rel","prototype2","box","features","title","FooterComp","App","DndProvider","backend","HTML5Backend","options","enableMouseEvents","path","Content","initialState","randomCpy","random","dateCpy","date","objectElement","between","names","fullName","findName","objects","address","commerce","company","database","finance","hacker","image","internet","lorem","phone","keys","funName","replace","charAt","slice","prevArr","currArr","combineReducers","action","modelUuid","propData","idx","findIndex","findProp","without","_","createStore","rootReducer","composeWithDevTools","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.74582689.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.4333af26.svg\";","import {\r\n  ADD_MODEL,\r\n  DELETE_MODEL,\r\n  ADD_RPOP_NAME,\r\n  REMOVE_ALL_RPOPS,\r\n  EDIT_PROP,\r\n  DELETE_PROP,\r\n  JUST_ADD_PROP,\r\n  ADD_RELATION,\r\n  REMOVE_RELATION,\r\n  UPDATE_AMOUNT,\r\n  ENABLE_AUTH,\r\n  DISABLE_AUTH,\r\n} from './actionTypes'\r\n\r\n/**\r\n *\r\n * @param {Object} model - the model object\r\n * @param {string} model.name - the model name\r\n * @param {string} model.id - the model uuid\r\n * @param {Date} model.createdAt - the mode timestamp\r\n */\r\nexport const addModel = (model) => ({\r\n  type: ADD_MODEL,\r\n  payload: model,\r\n})\r\n\r\n/**\r\n *\r\n * @param {string} uuid - the prop uuid\r\n *\r\n */\r\nexport const deleteModel = (uuid) => ({\r\n  type: DELETE_MODEL,\r\n  payload: uuid,\r\n})\r\n\r\n/**\r\n *\r\n * @param {Object} props - the props object\r\n * @param {string} props.uuid - the model uuid\r\n * @param {string} props.propName - the props name\r\n */\r\nexport const addPropName = (props) => ({\r\n  type: ADD_RPOP_NAME,\r\n  payload: props,\r\n})\r\n\r\n/**\r\n *\r\n * @param {Array<Object>} props - object\r\n * @param {Object} props.id - the props id\r\n * @param {string} props.uuid - the model uuid\r\n * @param {string} props.propName - the props name\r\n * @param {string} props.func - the props random func\r\n * @param {string} props.groupName - the props groupName for the random func\r\n */\r\nexport const justAddProp = (props) => ({\r\n  type: JUST_ADD_PROP,\r\n  payload: props,\r\n})\r\n\r\n/**\r\n *\r\n * @param {string} uuid - the prop uuid\r\n *\r\n */\r\nexport const removeAllProps = (uuid) => ({\r\n  type: REMOVE_ALL_RPOPS,\r\n  payload: uuid,\r\n})\r\n\r\n/**\r\n * @param {Object} props - the prop object\r\n * @param {string} props.propId - the prop uuid\r\n * @param {string} props.id - the model uuid\r\n * @param {string} props.newName - the new prop name\r\n * @param {string} props.groupName - the top lvl obj name for faker\r\n * @param {string} props.func - the faker function\r\n */\r\nexport const editProp = (props) => ({\r\n  type: EDIT_PROP,\r\n  payload: props,\r\n})\r\n\r\n/**\r\n *\r\n * @param {Object} props - the prop object\r\n * @param {string} props.propId - the prop uuid\r\n * @param {string} props.modelId - the model uuid\r\n */\r\nexport const delProp = (props) => ({\r\n  type: DELETE_PROP,\r\n  payload: props,\r\n})\r\n\r\n/**\r\n *\r\n * @param {Object} props - the prop object\r\n * @param {string} props.distId - the model uuid to create relation with\r\n * @param {string} props.modelId - the model uuid\r\n */\r\nexport const addRelation = (props) => ({\r\n  type: ADD_RELATION,\r\n  payload: props,\r\n})\r\n\r\n/**\r\n *\r\n * @param {Object} props - the prop object\r\n * @param {string} props.distId - the model uuid to remove from the relation\r\n * @param {string} props.modelId - the model uuid\r\n */\r\nexport const removeRelation = (props) => ({\r\n  type: REMOVE_RELATION,\r\n  payload: props,\r\n})\r\n\r\n/**\r\n *\r\n * @param {Object} props - the prop object\r\n * @param {string} props.amount - the amount of data to generate\r\n * @param {string} props.modelId - the model uuid\r\n */\r\nexport const updateAmount = (props) => ({\r\n  type: UPDATE_AMOUNT,\r\n  payload: props,\r\n})\r\n\r\nexport const enableAuth = () => ({ type: ENABLE_AUTH })\r\n\r\nexport const disableAuth = () => ({ type: DISABLE_AUTH })\r\n","export const ADD_MODEL = 'ADD_MODEL'\r\nexport const DELETE_MODEL = 'DELETE_MODEL'\r\nexport const ADD_RPOP_NAME = 'ADD_RPOP_NAME'\r\nexport const JUST_ADD_PROP = 'JUST_ADD_PROP'\r\nexport const REMOVE_ALL_RPOPS = 'REMOVE_ALL_RPOPS'\r\nexport const EDIT_PROP = 'EDIT_PROP'\r\nexport const DELETE_PROP = 'DELETE_PROP'\r\nexport const ADD_RELATION = 'ADD_RELATION'\r\nexport const REMOVE_RELATION = 'REMOVE_RELATION'\r\nexport const UPDATE_AMOUNT = 'UPDATE_AMOUNT'\r\nexport const ENABLE_AUTH = 'ENABLE_AUTH'\r\nexport const DISABLE_AUTH = 'DISABLE_AUTH'","import React, { useState } from 'react'\r\nimport { IconButton, Icon, Modal, Button, Input } from 'rsuite'\r\nimport { connect } from 'react-redux'\r\nimport { addModel } from 'redux/actions'\r\nimport { v4 } from 'uuid'\r\n\r\nconst { Header, Body, Footer, Title } = Modal\r\n\r\nconst AddModelBtn = ({ dispatch }) => {\r\n  const [state, setState] = useState({ showNameModal: false, modelName: '' })\r\n  const showNameModal = () => setState({ ...state, showNameModal: true })\r\n  const close = () => setState({ ...state, showNameModal: false })\r\n  const create = () => {\r\n    dispatch(\r\n      addModel({\r\n        id: v4(),\r\n        name: state.modelName,\r\n        createdAt: +new Date(),\r\n      })\r\n    )\r\n    setState({ ...state, modelName: '', showNameModal: false })\r\n  }\r\n  /**\r\n   * @param {string} str\r\n   */\r\n  const inputChange = (str) => setState({ ...state, modelName: str.trim('') })\r\n\r\n  const onEnter = () => {\r\n    inputChange(state.modelName)\r\n    create()\r\n  }\r\n  return (\r\n    <section>\r\n      <IconButton\r\n        id=\"add-prototype-btn\"\r\n        color=\"cyan\"\r\n        onClick={showNameModal}\r\n        appearance=\"ghost\"\r\n        style={{ width: '100%' }}\r\n        icon={<Icon icon=\"plus\" />}\r\n      >\r\n        Add a model prototype\r\n      </IconButton>\r\n      <Modal\r\n        show={state.showNameModal}\r\n        onHide={close}\r\n        style={{ maxWidth: '100%' }}\r\n      >\r\n        <Header>\r\n          <Title>Choose the model name</Title>\r\n        </Header>\r\n        <Body>\r\n          <p>Click <span className=\"note\">`Enter`</span> to create the model or \r\n          <span className=\"note\">`esc`</span> to close this model</p>\r\n          <Input\r\n            onPressEnter={onEnter}\r\n            onChange={inputChange}\r\n            autoFocus={true}\r\n            style={{ width: '100%' }}\r\n            placeholder=\"Your model name\"\r\n            size=\"lg\"\r\n            value={state.modelName}\r\n          />\r\n        </Body>\r\n        <Footer>\r\n          <Button onClick={create} appearance=\"primary\">\r\n            Create\r\n          </Button>\r\n          <Button onClick={close} appearance=\"subtle\">\r\n            Cancel\r\n          </Button>\r\n        </Footer>\r\n      </Modal>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default connect()(AddModelBtn)\r\n","import React from 'react'\r\nimport { Icon, Button, Modal } from 'rsuite'\r\nimport { danger } from 'colors'\r\nconst { Body, Footer, Header, Title } = Modal\r\n\r\nconst ConfirmDel = ({ showConfirmModal, closeConfirmModal, name, del, id }) => {\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      onHide={closeConfirmModal}\r\n      size=\"xs\"\r\n      show={showConfirmModal}\r\n      style={{ maxWidth: '100%' }}\r\n    >\r\n      <Header>\r\n        <Title>Confirm</Title>\r\n      </Header>\r\n      <Body>\r\n        <Icon\r\n          icon=\"remind\"\r\n          style={{\r\n            color: '#ffb300',\r\n            fontSize: 24,\r\n          }}\r\n        />\r\n        <b>\r\n          {' '}\r\n          Are you sure you want to delete this model {'`'}\r\n          <span style={{ color: danger }}>{name}</span>\r\n          {'`'}?\r\n        </b>\r\n      </Body>\r\n      <Footer>\r\n        <Button onClick={() => del(id)} appearance=\"primary\" color=\"red\">\r\n          Ok\r\n        </Button>\r\n        <Button onClick={closeConfirmModal} appearance=\"subtle\">\r\n          Cancel\r\n        </Button>\r\n      </Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmDel\r\n","export const danger = '#E30712'\r\nexport const normal = '#00a0bd'\r\n","import React, { useState } from 'react'\r\nimport { Input, TagPicker, Button, Modal, Message } from 'rsuite'\r\nimport { connect } from 'react-redux'\r\nimport { editProp } from 'redux/actions'\r\n\r\nconst { Body, Footer, Header, Title } = Modal\r\n\r\nconst AddProp = ({\r\n  showPropNameModal,\r\n  closeConfirmModal,\r\n  name,\r\n  addProp,\r\n  propNamesForThisModel,\r\n  id,\r\n  mode,\r\n  propNameProp,\r\n  dispatch,\r\n  propId,\r\n}) => {\r\n  const [state, setState] = useState({\r\n    propName: mode === 'edit' ? propNameProp : '',\r\n    valid: true,\r\n  })\r\n  const inputChange = (strOrArrayOfStrings) => {\r\n    if (mode === 'edit') {\r\n      setState({ propName: strOrArrayOfStrings.trim(''), valid: true })\r\n    } else {\r\n      setState({ propName: strOrArrayOfStrings, valid: true })\r\n    }\r\n  }\r\n  const addButtonClick = () => {\r\n    if (propNamesForThisModel) {\r\n      const exists = propNamesForThisModel.find(\r\n        ({ propName }) => propName === state.propName\r\n      )\r\n      if (exists) {\r\n        setState({ ...state, valid: false })\r\n        return\r\n      }\r\n    }\r\n    if (mode === 'edit')\r\n      dispatch(editProp({ propName: state.propName, id, propId }))\r\n    else {\r\n      state.propName.forEach((name) => addProp(name))\r\n      setState({ ...state, propName: '' })\r\n    }\r\n    closeConfirmModal()\r\n  }\r\n  const close = () => {\r\n    setState({ ...state, valid: true })\r\n    closeConfirmModal()\r\n  }\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      show={showPropNameModal}\r\n      onHide={close}\r\n      style={{ maxWidth: '100%' }}\r\n      size=\"lg\"\r\n    >\r\n      <Header>\r\n        <Title>\r\n          {mode === 'edit'\r\n            ? `Edit ${propNameProp} property`\r\n            : 'Enter the properties names'}\r\n        </Title>\r\n      </Header>\r\n      <Body>\r\n        <div\r\n          style={{\r\n            display: state.valid ? 'none' : 'block',\r\n            marginBottom: '10px',\r\n          }}\r\n        >\r\n          <Message\r\n            type=\"error\"\r\n            showIcon\r\n            description={`The Property \"${state.propName}\" is already exists in this model (${name})`}\r\n          />\r\n        </div>\r\n        <p>\r\n          <b>Type the prop name then press enter to add them</b>\r\n        </p>\r\n        {mode === 'edit' ? (\r\n          <Input\r\n            style={{ width: '100%' }}\r\n            placeholder=\"Change prop name\"\r\n            onChange={inputChange}\r\n          />\r\n        ) : (\r\n          <TagPicker\r\n            creatable\r\n            placeholder=\"add as many properties you want here\"\r\n            style={{ width: '100%' }}\r\n            onChange={inputChange}\r\n            menuStyle={{ width: 300, display: 'none' }}\r\n          />\r\n        )}\r\n      </Body>\r\n      <Footer>\r\n        <Button\r\n          onClick={addButtonClick}\r\n          appearance=\"primary\"\r\n          color=\"cyan\"\r\n          disabled={!state.propName.length}\r\n        >\r\n          Ok\r\n        </Button>\r\n        <Button onClick={close} appearance=\"subtle\">\r\n          Cancel\r\n        </Button>\r\n      </Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default connect((state, ownProps) => {\r\n  const { prop } = state\r\n  return { ...ownProps, propNamesForThisModel: prop[ownProps.id] }\r\n})(AddProp)\r\n","import React, { useState } from 'react'\r\nimport {\r\n  InputPicker,\r\n  List,\r\n  Grid,\r\n  Col,\r\n  Row,\r\n  Icon,\r\n  IconButton,\r\n  Input,\r\n} from 'rsuite'\r\nimport AddProp from './AddProp'\r\nimport { connect } from 'react-redux'\r\nimport { delProp, editProp } from 'redux/actions'\r\nimport styled from 'styled-components'\r\nimport { danger, normal } from 'colors'\r\nimport { useDebouncedCallback } from 'use-debounce'\r\n\r\nconst dangerClass = 'danger'\r\n\r\nconst Wrapper = styled.div`\r\n  & .${dangerClass} {\r\n    border-color: ${danger};\r\n    color: ${danger};\r\n  }\r\n`\r\nWrapper.dangerClass = dangerClass\r\n\r\nconst checkIfMobile = () =>\r\n  /Mobi/.test(navigator.userAgent) || /Mobi|Android/i.test(navigator.userAgent)\r\n\r\nconst Prop = ({\r\n  i,\r\n  name,\r\n  id,\r\n  regex,\r\n  modelName,\r\n  modelId,\r\n  dispatch,\r\n  inputData,\r\n  func,\r\n}) => {\r\n  const [state, setState] = useState({ showPropNameModal: false, func })\r\n  const [regexError, setRegexErrors] = useState(false)\r\n  const closeModal = () => setState({ ...state, showPropNameModal: false })\r\n  const openModal = () => setState({ ...state, showPropNameModal: true })\r\n  const del = () => dispatch(delProp({ propId: id, modelId }))\r\n  const onFuncSelect = (value) => {\r\n    const findRes = inputData.find(({ value: val }) => value === val)\r\n    if (!findRes) return\r\n    const { groupName } = findRes\r\n    setState({ ...state, func: value })\r\n    dispatch(editProp({ id: modelId, propId: id, func: value, groupName }))\r\n  }\r\n\r\n  const debouncedOnRegexUpdate = useDebouncedCallback((value) => {\r\n    try {\r\n      new RegExp(value)\r\n    } catch {\r\n      setRegexErrors(true)\r\n    } finally {\r\n      setRegexErrors(value === '')\r\n      dispatch(editProp({ id: modelId, regex: value, propId: id }))\r\n    }\r\n  }, 200)\r\n\r\n  const icon =\r\n    func !== 'regex' ? (\r\n      <Icon icon=\"circle\" />\r\n    ) : (\r\n      <Icon icon=\"creative\" style={{ color: normal }} />\r\n    )\r\n\r\n  return (\r\n    <List.Item key={i} index={i}>\r\n      <Grid fluid>\r\n        <Row\r\n          colSpan={6}\r\n          style={{ textAlign: checkIfMobile() ? 'center' : 'left' }}\r\n        >\r\n          <Col xs={24} sm={24} md={8}>\r\n            <h4>\r\n              {icon} {name} {checkIfMobile() ? <Icon icon=\"circle\" /> : ''}\r\n            </h4>\r\n          </Col>\r\n\r\n          <Col xs={24} sm={24} md={10} style={{ textAlign: 'left' }}>\r\n            {state.func === 'regex' ? (\r\n              <Wrapper>\r\n                <Input\r\n                  className={regexError ? Wrapper.dangerClass : ''}\r\n                  placeholder=\"Type your regex here\"\r\n                  onChange={debouncedOnRegexUpdate}\r\n                  defaultValue={regex}\r\n                />\r\n                {regexError ? (\r\n                  <p className={Wrapper.dangerClass}>\r\n                    The regex is not 🍋 JS 🍋 regex\r\n                  </p>\r\n                ) : (\r\n                  <p className={Wrapper.dangerClas}>\r\n                    Write a 🍋 JS 🍋 regex here!\r\n                  </p>\r\n                )}\r\n              </Wrapper>\r\n            ) : (\r\n              <InputPicker\r\n                onChange={onFuncSelect}\r\n                data={inputData}\r\n                defaultValue={state.func}\r\n                groupBy=\"groupName\"\r\n                placeholder=\"Select a function\"\r\n                style={{ width: '100%' }}\r\n              />\r\n            )}\r\n          </Col>\r\n          <AddProp\r\n            id={modelId}\r\n            showPropNameModal={state.showPropNameModal}\r\n            closeConfirmModal={closeModal}\r\n            propNameProp={name}\r\n            name={modelName}\r\n            propId={id}\r\n            mode={'edit'}\r\n          />\r\n          <Col\r\n            xs={12}\r\n            sm={12}\r\n            md={3}\r\n            style={{ textAlign: checkIfMobile() ? 'left' : 'right' }}\r\n          >\r\n            <IconButton\r\n              style={{ margin: '5px' }}\r\n              icon={<Icon icon=\"edit\" />}\r\n              color=\"cyan\"\r\n              circle\r\n              onClick={openModal}\r\n            />\r\n          </Col>\r\n\r\n          <Col xs={12} sm={12} md={1} style={{ textAlign: 'right' }}>\r\n            <IconButton\r\n              style={{ margin: '5px' }}\r\n              icon={<Icon icon=\"minus\" />}\r\n              color=\"red\"\r\n              circle\r\n              onClick={del}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </List.Item>\r\n  )\r\n}\r\n\r\nexport default connect((state, ownProp) => ({\r\n  ...ownProp,\r\n  inputData: state.faker,\r\n}))(Prop)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cat from './cat.svg'\r\nimport { List } from 'rsuite'\r\nimport Prop from './Prop'\r\n\r\nconst PropsDisplay = ({ id, props, modelName }) => {\r\n  const propsEl =\r\n    props && props?.length > 0 ? (\r\n      <List hover>\r\n        {props.map(({ propName, id: uuid, func, ...others }, i) => (\r\n          <Prop\r\n            i={i}\r\n            key={i}\r\n            func={func}\r\n            name={propName}\r\n            id={uuid}\r\n            modelId={id}\r\n            modelName={modelName}\r\n            {...others}\r\n          />\r\n        ))}\r\n      </List>\r\n    ) : (\r\n      <section style={{ width: '100%', textAlign: 'center' }}>\r\n        <h5>Add Properties to this model using the + button</h5>\r\n        <img src={cat} alt=\"cat waiting\" width={'100px'} height={'100px'} />\r\n      </section>\r\n    )\r\n  return <section>{propsEl}</section>\r\n}\r\n\r\nexport default connect((state, ownProps) => ({\r\n  ...ownProps,\r\n  props: state.prop[ownProps.id],\r\n}))(PropsDisplay)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Modal } from 'rsuite'\r\nimport { Grid, Row, Col } from 'rsuite'\r\nimport { Toggle } from 'rsuite'\r\nimport { addRelation, removeRelation } from 'redux/actions'\r\nimport { Alert } from 'rsuite'\r\nimport cat from './cat.svg'\r\nconst { Body, Footer, Header, Title } = Modal\r\n\r\nconst CreateRel = ({\r\n  showCreateRel,\r\n  mainModel,\r\n  close,\r\n  id,\r\n  eligibleModels,\r\n  dispatch,\r\n  checkedModels,\r\n}) => {\r\n  const toggleRel = (checked, distId) => {\r\n    if (checked) {\r\n      Alert.success(`created the link with ${mainModel.name} (1:m)`)\r\n      dispatch(addRelation({ distId, modelId: id }))\r\n    } else {\r\n      Alert.info(`removed the link with ${mainModel.name}`)\r\n      dispatch(removeRelation({ distId, modelId: id }))\r\n    }\r\n  }\r\n  \r\n  if (!mainModel) return ''\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      onHide={close}\r\n      show={showCreateRel}\r\n      style={{ maxWidth: '100%' }}\r\n      size=\"lg\"\r\n    >\r\n      <Header>\r\n        <Title>\r\n          Create Relation for{' '}\r\n          <span style={{ color: '#1b9cb0' }}>\r\n            {mainModel.name.toUpperCase()}\r\n          </span>{' '}\r\n          model\r\n        </Title>\r\n      </Header>\r\n      <Body>\r\n        <h4>Eligible Models:</h4>\r\n        <Grid fluid style={{ marginTop: 20 }}>\r\n          <Row>\r\n            {eligibleModels.length === 0 ? (\r\n              <section style={{ width: '100%', textAlign: 'center' }}>\r\n                <h5>\r\n                  There is no eligible models, create models to link them!\r\n                </h5>\r\n                <img\r\n                  src={cat}\r\n                  alt=\"cat waiting\"\r\n                  width={'100px'}\r\n                  height={'100px'}\r\n                />\r\n              </section>\r\n            ) : (\r\n              (eligibleModels || []).map(({ name, id }) => (\r\n                <Col xs={24} sm={24} md={6} key={id}>\r\n                  <span style={{ color: '#1b9cb0' }}>{name.toUpperCase()}</span>{' '}\r\n                  <Toggle\r\n                    style={{ marginLeft: 5 }}\r\n                    onChange={(checked) => toggleRel(checked, id)}\r\n                    checked={checkedModels.has(id)}\r\n                  />\r\n                </Col>\r\n              ))\r\n            )}\r\n          </Row>\r\n        </Grid>\r\n      </Body>\r\n      <Footer>\r\n        <Button appearance=\"primary\" color=\"cyan\" onClick={close}>\r\n          Ok\r\n        </Button>\r\n        <Button appearance=\"subtle\" onClick={close}>\r\n          Cancel\r\n        </Button>\r\n      </Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default connect((state, ownProps) => {\r\n  const { models, relations } = state\r\n\r\n  return {\r\n    ...ownProps,\r\n    eligibleModels: (models || []).filter(({ id }) => id !== ownProps.id),\r\n    mainModel: (models || []).filter(({ id }) => id === ownProps.id)[0],\r\n    checkedModels: new Set(relations[ownProps.id] || []),\r\n  }\r\n})(CreateRel)\r\n","export default (auth=false) => ({\r\n  description:\r\n    'The file is generated using https://mohammedal-rowad.github.io/pollux/',\r\n  scripts: {\r\n    dev: `${auth ? 'json-server-auth' : 'json-server'} --watch db.json -r routes.json`,\r\n  },\r\n  author: 'Rowadz',\r\n  license: 'MIT',\r\n  dependencies: {\r\n    'json-server': '^0.16.2',\r\n    'json-server-auth': '^2.0.2'\r\n  },\r\n})\r\n","export default name => `# Generated json-server API for ${name} model\r\nThis json-server api was generated via [pollux](https://mohammedal-rowad.github.io/pollux/)\r\nand it runs using [json-server](https://github.com/typicode/json-server), please read json-server docs for more info.\r\n\r\n> the authtication is made with [json-server-auth](https://www.npmjs.com/package/json-server-auth) read the docs there to customize the auth behavior \r\n\r\n\r\n\r\n# How to run\r\n\r\n\\`\\`\\`bash\r\n$ cd into this folder\r\n$ npm install or npm i\r\n$ npm run dev\r\n$ now look at the terminal\r\n\\`\\`\\`\r\n`","import { Alert } from 'rsuite'\r\nimport * as faker from 'faker'\r\nimport { saveAs } from 'file-saver'\r\nimport RandExp from 'randexp'\r\nimport JSZip from 'jszip'\r\nimport npmCongif from '../../../../zipFileContent/package.json'\r\nimport apiReadme from '../../../../zipFileContent/readme.md'\r\n\r\n/**\r\n *\r\n * @param {Array<any>} props\r\n * @param {string} name\r\n * @param {number} amount\r\n * @param {Array<any>} relations\r\n * @param {object} relationsProps\r\n * @param {boolean} justReturn\r\n */\r\nexport const generate = (\r\n  props,\r\n  name,\r\n  amount,\r\n  relations,\r\n  relationsProps,\r\n  justReturn\r\n) => {\r\n  if (!props) {\r\n    Alert.warning(`plz add some properties to this model (${name})`)\r\n    return\r\n  }\r\n  const atLeastOneWithoutFunc = props\r\n    .filter(({ func }) => !func)\r\n    .map(({ propName }) => propName)\r\n  const len = atLeastOneWithoutFunc.length\r\n  if (len > 0) {\r\n    Alert.warning(\r\n      `There is ${len} ${\r\n        len === 1 ? 'property' : 'properties'\r\n      } without function ${atLeastOneWithoutFunc.join(' || ')}`\r\n    )\r\n    return\r\n  }\r\n  const res = generateFakeData(props, amount)\r\n  if (relations) {\r\n    // const relData = relations.reduce(\r\n    //   (prevObj, { id, name, amount }) => ({\r\n    //     ...prevObj,\r\n    //     [name]: generateFakeData(relationsProps[id], amount),\r\n    //   }),\r\n    //   {}\r\n    // )\r\n\r\n    // const resWithRelations = res.map((obj) => ({ ...obj, ...relData }))\r\n\r\n    const resWithRelations = res.map((obj) => ({\r\n      ...obj,\r\n      ...relations.reduce(\r\n        (prev, { name, id }) => ({\r\n          ...prev,\r\n          [name]: generateFakeData(relationsProps[id], 10),\r\n        }),\r\n        {}\r\n      ),\r\n    }))\r\n    if (justReturn) {\r\n      return resWithRelations\r\n    }\r\n    downloadData(resWithRelations, name)\r\n  } else {\r\n    if (justReturn) {\r\n      return res\r\n    }\r\n    downloadData(res, name)\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Array<any>} props\r\n * @param {number} amount\r\n */\r\nconst generateFakeData = (props, amount) =>\r\n  Array.from({ length: amount }).map(() => {\r\n    return props.reduce(\r\n      (prev, { propName, groupName, func, regex: regexStr }) => {\r\n        if (\r\n          groupName === 'image' ||\r\n          (groupName === 'random' && func === 'image')\r\n        ) {\r\n          return {\r\n            ...prev,\r\n            [propName]: faker.random.arrayElement([\r\n              'http://placekitten.com/500/600',\r\n              'http://placekitten.com/1200/600',\r\n              'http://placekitten.com/1200/1200',\r\n            ]),\r\n          }\r\n        }\r\n        const key = func === 'fullName' ? 'findName' : func\r\n        if (key === 'regex') {\r\n          const randexp = new RandExp(regexStr)\r\n          return {\r\n            ...prev,\r\n            [propName]: randexp.gen(),\r\n          }\r\n        }\r\n\r\n        return {\r\n          ...prev,\r\n          [propName]: faker[groupName][key](),\r\n        }\r\n      },\r\n      {}\r\n    )\r\n  })\r\n\r\n/**\r\n *\r\n * @param {Array<any>} data\r\n * @param {string} name\r\n */\r\nconst downloadData = (data, name) => {\r\n  saveAs(new Blob([toJSONPritty(data)], { type: 'application/json' }), name)\r\n  Alert.success(`Downloaded ${name}.json 👍`)\r\n}\r\n\r\n/**\r\n *\r\n * @param {Array<any>} data\r\n */\r\nconst toJSONPritty = (data) => JSON.stringify(data, null, 2)\r\n\r\n/**\r\n *\r\n * @param {objcet} state - redux-state\r\n * @param {string} modelId - the uuid for the model in redux\r\n */\r\nexport const relationsPropsGetter = (state, modelId) =>\r\n  (state.relations[modelId] || []).reduce(\r\n    (prev, id) => ({ ...prev, [id]: state.prop[id] }),\r\n    {}\r\n  )\r\n\r\n/**\r\n *\r\n * @param {objcet} state - redux-state\r\n * @param {string} modelId - the uuid for the model in redux\r\n */\r\nexport const relationsGetter = (state, modelId) =>\r\n  (state.relations[modelId] || []).map((uuid) =>\r\n    state.models.find(({ id }) => uuid === id)\r\n  )\r\n\r\n/**\r\n *\r\n * @param {string} name - the model name\r\n * @param {Array<any>} props\r\n * @param {number} amount\r\n * @param {Array<any>} relations\r\n * @param {object} relationsProps\r\n * @param {Array<any> | undefined} data\r\n * @param {boolean} auth\r\n */\r\nexport const generateAPI = async (\r\n  name,\r\n  props,\r\n  amount,\r\n  relations,\r\n  relationsProps,\r\n  data,\r\n  auth\r\n) => {\r\n  try {\r\n    if (!props && !data) {\r\n      Alert.warning(`plz add some properties to this model (${name})`)\r\n      return\r\n    }\r\n    const zip = new JSZip()\r\n    zip.file('package.json', toJSONPritty(npmCongif(auth)))\r\n    zip.file(\r\n      'db.json',\r\n      toJSONPritty(\r\n        data\r\n          ? data\r\n          : {\r\n              [name]: generate(\r\n                props,\r\n                name,\r\n                amount,\r\n                relations,\r\n                relationsProps,\r\n                true\r\n              ),\r\n            }\r\n      )\r\n    )\r\n    zip.file('README.md', apiReadme(name))\r\n    zip.file('routes.json', toJSONPritty({ [name]: 660 }))\r\n    const zipContent = await zip.generateAsync({ type: 'blob' })\r\n    saveAs(zipContent, 'pollux-api.zip')\r\n    Alert.success(`Downloaded pollux-api.zip 👍`)\r\n  } catch (error) {\r\n    Alert.error(\r\n      'Something went wrong while generating your API, please checkout the console'\r\n    )\r\n    console.group('Error generating the API')\r\n    console.log('the error object')\r\n    console.error(error)\r\n    console.log('you can open an issue with this error in the link below')\r\n    console.log('https://github.com/MohammedAl-Rowad/pollux')\r\n    console.groupEnd()\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  Panel,\r\n  PanelGroup,\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Whisper,\r\n  Tooltip,\r\n  Tag,\r\n  Badge,\r\n  InputNumber,\r\n  Alert,\r\n} from 'rsuite'\r\nimport { format } from 'sql-formatter'\r\nimport ConfirmDel from './ConfirmDel'\r\nimport PropsDisplay from './PropsDisplay'\r\nimport AddProp from './AddProp'\r\nimport CreateRel from './CreateRel'\r\nimport { v4 } from 'uuid'\r\nimport {\r\n  generate,\r\n  relationsPropsGetter,\r\n  relationsGetter,\r\n  generateAPI,\r\n} from '../../util'\r\n\r\nimport {\r\n  deleteModel,\r\n  addPropName,\r\n  removeAllProps,\r\n  updateAmount,\r\n  justAddProp,\r\n} from 'redux/actions'\r\nimport { useDrop } from 'react-dnd'\r\n\r\nconst Model = ({\r\n  dispatch,\r\n  model: { id, name, amount },\r\n  propsCount,\r\n  props,\r\n  relations,\r\n  relationsProps,\r\n  isTourOpen,\r\n  faker,\r\n  auth,\r\n}) => {\r\n  const [state, setState] = useState({\r\n    showConfirmModal: false,\r\n    showPropNameModal: false,\r\n    showCreateRel: false,\r\n    amount: 10,\r\n  })\r\n\r\n  const [{ canDrop, hovered }, drop] = useDrop({\r\n    accept: [\r\n      'UUID',\r\n      'Email',\r\n      'Password',\r\n      'Full Name',\r\n      'Paragraphs',\r\n      'REGEX',\r\n      'Paragraph',\r\n      'IP',\r\n      'Image',\r\n      ...faker.map(({ groupName }) => groupName),\r\n    ], // TODO:: why hardcoded\r\n    canDrop() {\r\n      return true\r\n    },\r\n    collect(monitor) {\r\n      return {\r\n        canDrop: monitor && monitor.canDrop(),\r\n        hovered: monitor && monitor.isOver(),\r\n      }\r\n    },\r\n    drop({ data }) {\r\n      dispatch(justAddProp({ uuid: id, props: [{ ...data, id: v4() }] }))\r\n      Alert.success(`Added the ${data.propName} props`)\r\n    },\r\n  })\r\n\r\n  const delToolTip = (\r\n    <Tooltip>\r\n      Click here to <b>Delete</b> this model {'`'}\r\n      {name}\r\n      {'`'}.\r\n    </Tooltip>\r\n  )\r\n  const addKeyTip = <Tooltip>Click here to add an attribute.</Tooltip>\r\n  const generateTip = (\r\n    <Tooltip>\r\n      Click here to <b>generate</b> a json for this model.\r\n    </Tooltip>\r\n  )\r\n  const closeConfirmModal = () =>\r\n    setState({\r\n      ...state,\r\n      showConfirmModal: false,\r\n      showPropNameModal: false,\r\n      showCreateRel: false,\r\n    })\r\n  const openConfirmModal = () =>\r\n    setState({ ...state, showConfirmModal: true, showCreateRel: false })\r\n  const openPropNameModal = () =>\r\n    setState({\r\n      ...state,\r\n      showConfirmModal: false,\r\n      showCreateRel: false,\r\n      showPropNameModal: true,\r\n    })\r\n\r\n  const openCreateRelModal = () =>\r\n    setState({\r\n      ...state,\r\n      showConfirmModal: false,\r\n      showPropNameModal: false,\r\n      showCreateRel: true,\r\n    })\r\n\r\n  const del = (id) => {\r\n    closeConfirmModal()\r\n    dispatch(removeAllProps(id))\r\n    dispatch(deleteModel(id))\r\n  }\r\n\r\n  const changeAmount = (val) => {\r\n    setState({ ...state, amount: +val })\r\n    dispatch(updateAmount({ modelId: id, amount: +val }))\r\n  }\r\n\r\n  const addProp = (name) => dispatch(addPropName({ propName: name, uuid: id }))\r\n\r\n  const dynamicHeder = (\r\n    <div>\r\n      Model name {name}\r\n      {\r\n        <Tag\r\n          color=\"cyan\"\r\n          style={{ marginLeft: '5px' }}\r\n          id={isTourOpen ? 'prop-tag-count' : null}\r\n        >\r\n          {propsCount}\r\n        </Tag>\r\n      }\r\n      <Whisper\r\n        placement=\"right\"\r\n        trigger=\"hover\"\r\n        speaker={\r\n          <Tooltip>\r\n            Click here to create a relationship with other models\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <IconButton\r\n          id={isTourOpen ? 'create-a-relationship-btn' : null}\r\n          icon={<Icon icon=\"link\" />}\r\n          style={{ marginLeft: '5px' }}\r\n          color=\"violet\"\r\n          onClick={openCreateRelModal}\r\n          circle\r\n        />\r\n      </Whisper>\r\n      <Whisper\r\n        placement=\"right\"\r\n        trigger=\"hover\"\r\n        speaker={\r\n          <Tooltip>\r\n            Click here to generate a json-server API from this model\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <IconButton\r\n          id={isTourOpen ? 'create-a-api-btn' : null}\r\n          icon={<Icon icon=\"twinkle-star\" />}\r\n          style={{ marginLeft: '5px' }}\r\n          color=\"blue\"\r\n          circle\r\n          onClick={() =>\r\n            generateAPI(\r\n              name,\r\n              props,\r\n              amount,\r\n              relations,\r\n              relationsProps,\r\n              null,\r\n              auth\r\n            )\r\n          }\r\n        />\r\n      </Whisper>\r\n      <div ref={drop}>\r\n        <Panel\r\n          shaded\r\n          style={{\r\n            backgroundColor: hovered ? '#8BCAD9' : canDrop ? '#5E6D8C' : '',\r\n            height: 50,\r\n            marginTop: 10,\r\n            // color: hovered ? '#000' : '#fff',\r\n          }}\r\n        >\r\n          <Badge style={{ background: '#1b9cb0' }} /> Drop Props Here{' '}\r\n          <Badge style={{ background: '#1b9cb0' }} />\r\n        </Panel>\r\n      </div>\r\n    </div>\r\n  )\r\n  return (\r\n    <section style={{ marginTop: 20 }}>\r\n      <PanelGroup bordered>\r\n        <Panel shaded header={dynamicHeder}>\r\n          <Grid fluid>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24}>\r\n                <Whisper placement=\"right\" trigger=\"hover\" speaker={addKeyTip}>\r\n                  <IconButton\r\n                    icon={<Icon icon=\"plus\" />}\r\n                    id={isTourOpen ? 'add-attribute-btn' : null}\r\n                    color=\"cyan\"\r\n                    circle\r\n                    onClick={openPropNameModal}\r\n                  />\r\n                </Whisper>\r\n                <Whisper\r\n                  placement=\"right\"\r\n                  trigger=\"hover\"\r\n                  speaker={generateTip}\r\n                >\r\n                  <IconButton\r\n                    id={isTourOpen ? 'generate-data-btn' : null}\r\n                    style={{ marginLeft: '5px' }}\r\n                    icon={<Icon icon=\"magic2\" />}\r\n                    color=\"orange\"\r\n                    circle\r\n                    onClick={() =>\r\n                      generate(props, name, amount, relations, relationsProps)\r\n                    }\r\n                  />\r\n                </Whisper>\r\n\r\n                <Whisper\r\n                  placement=\"right\"\r\n                  trigger=\"hover\"\r\n                  speaker={\r\n                    <Tooltip>\r\n                      Click here to <b>generate</b> an SQL insert statement.\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <IconButton\r\n                    id={isTourOpen ? 'generate-ddl-btn' : null}\r\n                    style={{ marginLeft: '5px' }}\r\n                    icon={<Icon icon=\"database\" />}\r\n                    color=\"yellow\"\r\n                    circle\r\n                    onClick={() => {\r\n                      const data = generate(\r\n                        props,\r\n                        name,\r\n                        amount,\r\n                        relations,\r\n                        relationsProps,\r\n                        true\r\n                      )\r\n                      const values = data.map(Object.values)\r\n                      const res = []\r\n                      for (const list of values) {\r\n                        let str = '( '\r\n                        for (const [index, value] of list.entries()) {\r\n                          const comma = index === list.length - 1 ? ' ' : ', '\r\n                          if (isNaN(value)) {\r\n                            str += `\"${value}\"${comma}`\r\n                          } else {\r\n                            str += `${value}${comma}`\r\n                          }\r\n                        }\r\n                        str += ')'\r\n                        res.push(str)\r\n                      }\r\n                      const sqlValues = res.join(', ')\r\n                      const sql = `\r\n                          INSERT INTO ${name} \r\n                          VALUES ${sqlValues}\r\n                        `\r\n                      const formattedSQL = format(sql)\r\n                      navigator.clipboard\r\n                        .writeText(formattedSQL)\r\n                        .then(() => {\r\n                          Alert.success('Copied, you can check the console too.')\r\n                          console.log(`%c${formattedSQL}`, 'color: #00a0bd')\r\n                        })\r\n                        .catch(() => {\r\n                          console.log(formattedSQL)\r\n                          Alert.error(\r\n                            'Error, please cehck the console to copy the SQL'\r\n                          )\r\n                        })\r\n                    }}\r\n                  />\r\n                </Whisper>\r\n\r\n                <div\r\n                  style={{\r\n                    width: 100,\r\n                    display: 'inline',\r\n                    position: 'absolute',\r\n                    paddingLeft: 10,\r\n                  }}\r\n                >\r\n                  <InputNumber\r\n                    defaultValue={amount}\r\n                    max={100000}\r\n                    min={1}\r\n                    onChange={changeAmount}\r\n                  />\r\n                </div>\r\n                <Whisper placement=\"left\" trigger=\"hover\" speaker={delToolTip}>\r\n                  <IconButton\r\n                    icon={<Icon icon=\"minus\" />}\r\n                    style={{ float: 'right' }}\r\n                    color=\"red\"\r\n                    circle\r\n                    onClick={openConfirmModal}\r\n                  />\r\n                </Whisper>\r\n                <ConfirmDel\r\n                  id={id}\r\n                  del={del}\r\n                  closeConfirmModal={closeConfirmModal}\r\n                  name={name}\r\n                  showConfirmModal={state.showConfirmModal}\r\n                />\r\n                <AddProp\r\n                  id={id}\r\n                  showPropNameModal={state.showPropNameModal}\r\n                  closeConfirmModal={closeConfirmModal}\r\n                  name={name}\r\n                  addProp={addProp}\r\n                />\r\n                {isTourOpen ? (\r\n                  ''\r\n                ) : (\r\n                  <CreateRel\r\n                    showCreateRel={state.showCreateRel}\r\n                    id={id}\r\n                    close={closeConfirmModal}\r\n                  />\r\n                )}\r\n              </Col>\r\n              <Col\r\n                xs={24}\r\n                sm={24}\r\n                md={24}\r\n                style={{ textAlign: 'right', marginTop: '10px' }}\r\n              >\r\n                <PropsDisplay id={id} modelName={name} />\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n        </Panel>\r\n      </PanelGroup>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default connect((state, ownProps) => ({\r\n  ...ownProps,\r\n  propsCount: (state.prop[ownProps.model.id] || []).length,\r\n  props: state.prop[ownProps.model.id],\r\n  relations: relationsGetter(state, ownProps.model.id),\r\n  relationsProps: relationsPropsGetter(state, ownProps.model.id),\r\n  faker: state.faker,\r\n  auth: state.auth,\r\n}))(Model)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Panel, PanelGroup } from 'rsuite'\r\nimport empty from './empty.svg'\r\nimport Model from './ModelsComponents/Model'\r\n\r\nconst Models = ({ models, isTourOpen }) => {\r\n  const modelsEls =\r\n    models.length > 0 ? (\r\n      models.map((model, i) => <Model model={model} key={i} />)\r\n    ) : (\r\n      <Panel\r\n        bordered\r\n        header=\"Add models to start!\"\r\n        style={{ textAlign: 'center' }}\r\n      >\r\n        <img src={empty} with={'100%'} height={'200px'} alt=\"empty-img\" />\r\n      </Panel>\r\n    )\r\n  return (\r\n    <section id=\"models-section\">\r\n      {isTourOpen ? (\r\n        <Model\r\n          model={{ id: '', name: 'Demo', createdAt: +new Date() }}\r\n          isTourOpen={isTourOpen}\r\n        />\r\n      ) : (\r\n        <PanelGroup>{modelsEls}</PanelGroup>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default connect((models) => models)(Models)\r\n","import React, { useState } from 'react'\r\nimport { IconButton, Icon, Modal, Button, Checkbox } from 'rsuite'\r\nimport { connect } from 'react-redux'\r\nimport emptySave from './emptySave.svg'\r\nimport { Alert } from 'rsuite'\r\nconst { Header, Body, Footer, Title } = Modal\r\n\r\nconst SaveModel = ({ models, prop }) => {\r\n  const [state, setState] = useState({\r\n    showModalSave: false,\r\n    toSave: [],\r\n    modelsKey: 'models',\r\n  })\r\n  const showModalSave = () =>\r\n    setState({ ...state, toSave: [], showModalSave: true })\r\n  const close = () => setState({ ...state, showModalSave: false })\r\n  const save = () => {\r\n    const toSave = models.map(({ id, ...rest }) => ({\r\n      props: prop[id],\r\n      id,\r\n      ...rest,\r\n    }))\r\n    const toSaveSet = new Set(toSave.map(({ id }) => id))\r\n    // to preserve the old models and override if the user changed the same one!\r\n    const saved = (\r\n      JSON.parse(localStorage.getItem(state.modelsKey)) || []\r\n    ).filter(({ id }) => !toSaveSet.has(id))\r\n    const realToSave = [...saved, ...toSave]\r\n    localStorage.setItem(state.modelsKey, JSON.stringify(realToSave))\r\n    Alert.success(\r\n      `Saved models [ ${toSave.map(({ name }) => name).join(' || ')} ]`\r\n    )\r\n  }\r\n  const toSave = (model, checked) => {\r\n    if (checked) {\r\n      setState({ ...state, toSave: [...state.toSave, model] })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        toSave: [...state.toSave.filter(({ id }) => id !== model.id)],\r\n      })\r\n    }\r\n  }\r\n  const modelsEl = models.length ? (\r\n    models.map(({ name, id }) => (\r\n      <Checkbox name={name} onChange={toSave} key={id} value={{ name, id }}>\r\n        {name}\r\n      </Checkbox>\r\n    ))\r\n  ) : (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <img src={emptySave} height=\"100\" width={'100%'} alt=\"no models img\" />\r\n      <p>You need to create some models to save them </p>\r\n    </div>\r\n  )\r\n  return (\r\n    <section style={{ display: 'inline' }}>\r\n      <IconButton\r\n        color=\"cyan\"\r\n        id=\"save-model-btn\"\r\n        onClick={showModalSave}\r\n        circle\r\n        icon={<Icon icon=\"save\" />}\r\n      />\r\n      <Modal\r\n        show={state.showModalSave}\r\n        onHide={close}\r\n        style={{ maxWidth: '100%' }}\r\n      >\r\n        <Header>\r\n          <Title>You can save a model here, then load it</Title>\r\n        </Header>\r\n        <Body>{modelsEl}</Body>\r\n        <Footer>\r\n          <Button\r\n            onClick={save}\r\n            appearance=\"primary\"\r\n            disabled={models.length === 0}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button onClick={close} appearance=\"subtle\">\r\n            Cancel\r\n          </Button>\r\n        </Footer>\r\n      </Modal>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default connect(({ models, prop }, ownProps) => ({\r\n  ...ownProps,\r\n  models,\r\n  prop,\r\n}))(SaveModel)\r\n","import React, { useState } from 'react'\r\nimport { IconButton, Icon, Modal, Button, Divider } from 'rsuite'\r\nimport { connect } from 'react-redux'\r\nimport { Alert } from 'rsuite'\r\nimport loadModelsEmpty from './loadModels.svg'\r\nimport { addModel, justAddProp } from 'redux/actions'\r\nconst { Header, Body, Footer, Title } = Modal\r\n\r\nconst LoadModel = ({ dispatch, models }) => {\r\n  const [state, setState] = useState({\r\n    showTheModalOfModels: false,\r\n    models: [],\r\n  })\r\n  const close = () => setState({ ...state, showTheModalOfModels: false })\r\n  const open = () =>\r\n    setState({\r\n      ...state,\r\n      showTheModalOfModels: true,\r\n      models: JSON.parse(localStorage.getItem('models')) || [],\r\n    })\r\n  const load = ({ id, name, createdAt, amount, ...props }) => {\r\n    // check if we already loaded the model\r\n    if ((models.find(({ id: modelId }) => id === modelId) || []).length === 0) {\r\n      dispatch(addModel({ id, name, createdAt, amount: +amount }))\r\n      dispatch(justAddProp({ uuid: id, ...props }))\r\n      Alert.info(`Loaded ${name} model 👍`)\r\n    } else {\r\n      Alert.warning(`We already loaded ${name} - id[${id}]`)\r\n    }\r\n  }\r\n  return (\r\n    <section style={{ display: 'inline', marginLeft: 10 }}>\r\n      <IconButton\r\n        color=\"yellow\"\r\n        onClick={open}\r\n        circle\r\n        id=\"load-model-btn\"\r\n        icon={<Icon icon=\"tasks\" />}\r\n      />\r\n      <Modal\r\n        show={state.showTheModalOfModels}\r\n        onHide={close}\r\n        style={{ maxWidth: '100%' }}\r\n      >\r\n        <Header>\r\n          <Title>Load your saved models!</Title>\r\n        </Header>\r\n        <Body>\r\n          {state.models.length === 0 ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <img\r\n                src={loadModelsEmpty}\r\n                height=\"240\"\r\n                width={'100%'}\r\n                alt=\"empty models\"\r\n              />\r\n              <p>Your saved models will appear here!</p>\r\n            </div>\r\n          ) : (\r\n            state.models.map((m, i) => (\r\n              <div key={i}>\r\n                <h3>\r\n                  <strong>{m.name}</strong>\r\n                </h3>\r\n                <Button\r\n                  style={{ float: 'right' }}\r\n                  appearance=\"ghost\"\r\n                  onClick={() => load(m)}\r\n                >\r\n                  Click to Load {m.name}\r\n                </Button>\r\n                <pre>{JSON.stringify(m, null, 2)}</pre>\r\n                <Divider />\r\n              </div>\r\n            ))\r\n          )}\r\n        </Body>\r\n        <Footer>\r\n          <Button onClick={close} appearance=\"subtle\">\r\n            Close\r\n          </Button>\r\n        </Footer>\r\n      </Modal>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default connect(({ models }, ownProps) => ({\r\n  ...ownProps,\r\n  models,\r\n}))(LoadModel)\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  IconButton,\r\n  Icon,\r\n  Whisper,\r\n  Tooltip,\r\n  Alert,\r\n  Toggle,\r\n} from 'rsuite'\r\nimport Tour from 'reactour'\r\nimport { connect } from 'react-redux'\r\nimport { enableAuth, disableAuth } from 'redux/actions'\r\nimport { AddModelBtn, Models, SaveModel, LoadModel } from './components'\r\nimport {\r\n  relationsPropsGetter,\r\n  generate,\r\n  relationsGetter,\r\n  generateAPI,\r\n} from './util'\r\n\r\nconst steps = [\r\n  {\r\n    selector: '#add-prototype-btn',\r\n    content: 'Click here to create new model aka prototype',\r\n  },\r\n  {\r\n    selector: '#save-model-btn',\r\n    content: `Click here to save models after you create them ( they are saved in your localstorage - hope you don't mind :p )`,\r\n  },\r\n  {\r\n    selector: '#load-model-btn',\r\n    content: 'Click here to load your saved models after you save them',\r\n  },\r\n  {\r\n    selector: '#create-a-api-btn-for-all',\r\n    content: () => (\r\n      <>\r\n        <p>\r\n          Click here to generate an API with all the models in the model section\r\n          (this might take some time....).\r\n        </p>\r\n        <p>After generation you just need to</p>\r\n        <ul>\r\n          <li>unzip the folder</li>\r\n          <li>`cd pollux-api`</li>\r\n          <li>`npm i`</li>\r\n        </ul>\r\n        <p>then you are done</p>\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    selector: '#enable-jwt-auth',\r\n    content: () => <p>Toggle this to enable/disable JWT auth to any generated API</p>,\r\n  },\r\n  {\r\n    selector: '#models-section',\r\n    content: 'An empty model',\r\n  },\r\n  {\r\n    selector: '#add-attribute-btn',\r\n    content: 'Click here to add attributes (props) to this model',\r\n  },\r\n  {\r\n    selector: '#prop-tag-count',\r\n    content:\r\n      'This number shows the number of attributes (props) this models have',\r\n  },\r\n  {\r\n    selector: '#generate-data-btn',\r\n    content: 'Click here to generate this model data with its related models',\r\n  },\r\n  {\r\n    selector: '#create-a-relationship-btn',\r\n    content: 'Click here to create a 1:m relation with another model',\r\n  },\r\n  {\r\n    selector: '#create-a-api-btn',\r\n    content: () => (\r\n      <>\r\n        <p>\r\n          Click here to generate a json-server API from this model, after\r\n          generation you just need to\r\n        </p>\r\n        <ul>\r\n          <li>unzip the folder</li>\r\n          <li>`cd pollux-api`</li>\r\n          <li>`npm i`</li>\r\n        </ul>\r\n        <p>then you are done</p>\r\n      </>\r\n    ),\r\n  },\r\n].map((obj) => ({\r\n  ...obj,\r\n  style: {\r\n    backgroundColor: '#0f131a',\r\n  },\r\n}))\r\n\r\nconst generateAPIForAll = (models, prop, relations, auth) => {\r\n  if (models.length === 0) {\r\n    Alert.warning('Plz load/create some models first')\r\n    return\r\n  }\r\n  const data = models.reduce((prev, { name, amount, id }) => {\r\n    return {\r\n      ...prev,\r\n      [name]: generate(\r\n        prop[id],\r\n        name,\r\n        amount,\r\n        relationsGetter({ relations, models }, id),\r\n        relationsPropsGetter({ relations, prop }, id),\r\n        true\r\n      ),\r\n    }\r\n  }, {})\r\n  generateAPI(\r\n    models.map(({ name }) => name).join(' || '),\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    data,\r\n    auth\r\n  )\r\n}\r\n\r\nfunction Controller({ models, prop, relations, auth, dispatch }) {\r\n  const [isTourOpen, setIsTourOpen] = useState(false)\r\n  return (\r\n    <Grid fluid>\r\n      <Row>\r\n        <Tour\r\n          steps={steps}\r\n          isOpen={isTourOpen}\r\n          onRequestClose={() => setIsTourOpen(false)}\r\n        />\r\n        <Col xs={24} sm={24} md={6}>\r\n          <AddModelBtn />\r\n          <div style={{ marginTop: '10px' }}>\r\n            <IconButton\r\n              style={{ marginRight: 10 }}\r\n              color=\"violet\"\r\n              onClick={() => setIsTourOpen(true)}\r\n              circle\r\n              icon={<Icon icon=\"lightbulb-o\" />}\r\n            />\r\n            <SaveModel />\r\n            <LoadModel />\r\n            <Whisper\r\n              placement=\"right\"\r\n              trigger=\"hover\"\r\n              speaker={\r\n                <Tooltip>\r\n                  Click here to generate a json-server API from this model\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <IconButton\r\n                id=\"create-a-api-btn-for-all\"\r\n                icon={<Icon icon=\"twinkle-star\" />}\r\n                style={{ marginLeft: '5px' }}\r\n                color=\"blue\"\r\n                circle\r\n                onClick={() => generateAPIForAll(models, prop, relations, auth)}\r\n              />\r\n            </Whisper>\r\n          </div>\r\n          <div style={{ marginTop: 20 }} id=\"enable-jwt-auth\">\r\n            <Toggle\r\n              // checked={auth}\r\n              onChange={\r\n                auth\r\n                  ? () => dispatch(disableAuth())\r\n                  : () => dispatch(enableAuth())\r\n              }\r\n              size=\"lg\"\r\n              checkedChildren=\"Disable JWT Auth\"\r\n              unCheckedChildren=\"Enable JWT Auth\"\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Col xs={24} sm={24} md={18}>\r\n          <Models isTourOpen={isTourOpen} />\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default connect(({ models, prop, relations, auth }, ownProps) => ({\r\n  ...ownProps,\r\n  models,\r\n  prop,\r\n  relations,\r\n  auth,\r\n}))(Controller)\r\n","import React from 'react'\r\nimport { Controller } from './components'\r\nimport { Grid, Row, Col } from 'rsuite'\r\n\r\nfunction Generate() {\r\n  // const [state, setState] = useState()\r\n  return (\r\n    <Grid fluid>\r\n      <Row style={{ margin: '1rem' }}>\r\n        <Col xs={24} sm={24} md={24} style={{ marginTop: '20px' }}>\r\n          <Controller />\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Generate\r\n","// TODO:: I CAN MAP THE WHOLE FAKER LIB TO THIS!!\r\n// TODO:: AND GENERATE ALL THE FUNCTIONS AS A DRAG AND DROP\r\nexport const map = new Map([\r\n  ['UUID', { groupName: 'random', func: 'uuid', propName: 'id' }],\r\n  ['Email', { groupName: 'internet', func: 'email', propName: 'email' }],\r\n  ['REGEX', { groupName: 'regex', func: 'regex', propName: 'REGEX' }],\r\n  [\r\n    'Password',\r\n    { groupName: 'internet', func: 'password', propName: 'password' },\r\n  ],\r\n  ['Full Name', { groupName: 'name', func: 'fullName', propName: 'name' }],\r\n  [\r\n    'Paragraphs',\r\n    { groupName: 'lorem', func: 'paragraphs', propName: 'paragraphs' },\r\n  ],\r\n  [\r\n    'Paragraph',\r\n    { groupName: 'lorem', func: 'paragraph', propName: 'paragraph' },\r\n  ],\r\n  ['IP', { groupName: 'internet', func: 'ip', propName: 'ip' }],\r\n  ['Image', { groupName: 'random', func: 'image', propName: 'image' }],\r\n])\r\n","import React from 'react'\r\nimport { useDrag } from 'react-dnd'\r\nimport { List, Icon } from 'rsuite'\r\nimport styles from './DraggableCommonProp.module.css'\r\nimport { map } from 'components/Builder/maps'\r\n\r\nconst DraggableCommonProp = ({ type, icon, label, func, children }) => {\r\n  const [{ isDragging }, dragRef] = useDrag({\r\n    item: {\r\n      type,\r\n      data: map.get(type) || { propName: label, groupName: type, func },\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  })\r\n\r\n  return (\r\n    <div ref={dragRef}>\r\n      <List.Item\r\n        className={styles.item}\r\n        style={{\r\n          cursor: isDragging && 'grabbing',\r\n          backgroundColor: 'transparent',\r\n          boxShadow: 'none',\r\n        }}\r\n      >\r\n        <Icon icon={icon || 'circle-o'} /> {label || type}\r\n        {children}\r\n      </List.Item>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DraggableCommonProp\r\n","import React from 'react'\r\nimport { Badge, List } from 'rsuite'\r\nimport DraggableCommonProp from './components/DraggableCommonProp'\r\n\r\nconst CommonProps = () => {\r\n  return (\r\n    <>\r\n      <h4>Common Items</h4>\r\n      <List>\r\n        <DraggableCommonProp type=\"UUID\" icon=\"id-mapping\" />\r\n        <DraggableCommonProp type=\"Email\" icon=\"envelope\" />\r\n        <DraggableCommonProp type=\"REGEX\" icon=\"creative\">\r\n          <Badge style={{ marginLeft: '1rem' }} content=\"NEW\" />\r\n        </DraggableCommonProp>\r\n        <DraggableCommonProp type=\"Password\" icon=\"eye-slash\" />\r\n        <DraggableCommonProp type=\"Full Name\" icon=\"user\" />\r\n        <DraggableCommonProp type=\"Paragraphs\" icon=\"file-text\" />\r\n        <DraggableCommonProp type=\"Paragraph\" icon=\"file-text-o\" />\r\n        <DraggableCommonProp type=\"IP\" icon=\"circle-o\" />\r\n        <DraggableCommonProp type=\"Image\" icon=\"image\" />\r\n      </List>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CommonProps\r\n","import React, { useMemo, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CommonProps from '../builderComponents/CommonProps/CommonProps'\r\nimport DraggableCommonProp from '../builderComponents/CommonProps/components/DraggableCommonProp'\r\nimport { Divider, List, Input } from 'rsuite'\r\n\r\nconst BuilderBody = ({ faker }) => {\r\n  const fakerObj = useMemo(() => faker, [faker])\r\n  const [keyword, setKeyword] = useState('')\r\n  return (\r\n    <>\r\n      <CommonProps />\r\n      <Divider />\r\n      <h4>Other Items</h4>\r\n      <Input\r\n        style={{ marginBottom: 10 }}\r\n        placeholder=\"search in faker functions!\"\r\n        value={keyword}\r\n        onChange={setKeyword}\r\n      />\r\n      <List>\r\n        {fakerObj\r\n          .filter((obj) =>\r\n            obj.label.toLowerCase().includes(keyword.toLowerCase())\r\n          )\r\n          .map(({ groupName, label, value: func }) => (\r\n            <DraggableCommonProp type={groupName} label={label} func={func} />\r\n          ))}\r\n      </List>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { faker: state.faker }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BuilderBody)\r\n","import React, { useState, useCallback } from 'react'\r\nimport { Navbar, Nav, Icon, Drawer, Badge } from 'rsuite'\r\nimport { NavLink } from 'react-router-dom'\r\nimport BuilderBody from './Builder/BuilderBody/BuilderBody'\r\nconst { Body } = Navbar\r\nconst { Item } = Nav\r\n\r\nfunction HeaderComp() {\r\n  const [state, setState] = useState({ show: false })\r\n  const toggleDrawer = useCallback((show) => setState({ show: !show }), [\r\n    setState,\r\n  ])\r\n  return (\r\n    <Navbar>\r\n      <Body>\r\n        <Nav>\r\n          <NavLink to=\"/\" activeClassName=\"active-route\" exact={true}>\r\n            <Item\r\n              renderItem={() => (\r\n                <span className=\"rs-nav-item-content\">\r\n                  <Icon icon=\"home\" /> Pollux\r\n                </span>\r\n              )}\r\n            ></Item>\r\n          </NavLink>\r\n          <NavLink to=\"/generate\" activeClassName=\"active-route\">\r\n            <Item\r\n              renderItem={() => (\r\n                <span className=\"rs-nav-item-content\">\r\n                  <Icon icon=\"magic2\" />\r\n                  Generate\r\n                </span>\r\n              )}\r\n            >\r\n              About\r\n            </Item>\r\n          </NavLink>\r\n        </Nav>\r\n        <Nav pullRight>\r\n          <Item\r\n            onClick={() => toggleDrawer(state.show)}\r\n            icon={<Icon icon=\"creative\" />}\r\n          >\r\n            Builder <Badge content=\"NEW!\"></Badge>\r\n          </Item>\r\n\r\n          <Drawer\r\n            backdrop={false}\r\n            show={state.show}\r\n            size=\"xs\"\r\n            placement=\"left\"\r\n            onHide={() => toggleDrawer(true)}\r\n          >\r\n            <Drawer.Header>\r\n              <Drawer.Title>\r\n                <h4>Builder Items</h4>\r\n                <p>You can drag and drop them into any model</p>\r\n              </Drawer.Title>\r\n            </Drawer.Header>\r\n            <Drawer.Body>\r\n              <BuilderBody />\r\n            </Drawer.Body>\r\n          </Drawer>\r\n        </Nav>\r\n      </Body>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default HeaderComp\r\n","import React from 'react'\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Panel,\r\n  Divider,\r\n  Icon,\r\n  Message,\r\n  IconButton,\r\n} from 'rsuite'\r\nimport prototype from './prototype.svg'\r\nimport prototype2 from './prototype2.svg'\r\nimport features from './features.svg'\r\nimport box from './box.svg'\r\n\r\nconst ContentComp = () => {\r\n  return (\r\n    <section>\r\n      <Grid fluid className=\"site-layout-content\">\r\n        <Row>\r\n          <Col xs={1} sm={1} md={6}></Col>\r\n          <Col xs={24} sm={24} md={12}>\r\n            <Panel bodyFill style={{ display: 'inline-block', width: '100%' }}>\r\n              <img src={prototype} height=\"240\" width={'100%'} alt=\"taken\" />\r\n              <Panel header={<h1>POLLUX</h1>} style={{ textAlign: 'center' }}>\r\n                <h4>\r\n                  <Icon icon=\"certificate\" size=\"2x\" /> The app that generate\r\n                  fake data and{' '}\r\n                  <a\r\n                    href=\"https://github.com/typicode/json-server\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    json-server\r\n                  </a>{' '}\r\n                  APIs\r\n                </h4>\r\n              </Panel>\r\n            </Panel>\r\n          </Col>\r\n          <Col xs={1} sm={1} md={6}></Col>\r\n        </Row>\r\n        <Divider />\r\n        <Row>\r\n          <Col xs={1} sm={1} md={6}></Col>\r\n          <Col xs={24} sm={24} md={12}>\r\n            <img src={prototype2} height=\"240\" width={'100%'} alt=\"taken\" />\r\n            <Panel bodyFill style={{ display: 'inline-block', width: '100%' }}>\r\n              <Panel\r\n                header={<h1>Prototype</h1>}\r\n                style={{ textAlign: 'center' }}\r\n              >\r\n                <h4>\r\n                  <Icon icon=\"certificate\" size=\"2x\" /> Define prototypes and\r\n                  their properties\r\n                </h4>\r\n              </Panel>\r\n            </Panel>\r\n          </Col>\r\n          <Col xs={1} sm={1} md={6}></Col>\r\n        </Row>\r\n        <Divider />\r\n        <Row>\r\n          <Col xs={1} sm={1} md={6}></Col>\r\n          <Col xs={24} sm={24} md={12}>\r\n            <img src={box} height=\"240\" width={'100%'} alt=\"taken\" />\r\n            <Panel bodyFill style={{ display: 'inline-block', width: '100%' }}>\r\n              <Panel header={<h1>Generate</h1>} style={{ textAlign: 'center' }}>\r\n                <h4>\r\n                  <Icon icon=\"certificate\" size=\"2x\" /> Generate fake data and{' '}\r\n                  <a\r\n                    href=\"https://github.com/typicode/json-server\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    json-server\r\n                  </a>{' '}\r\n                  API's based on your prototypes\r\n                </h4>\r\n              </Panel>\r\n            </Panel>\r\n          </Col>\r\n          <Col xs={1} sm={1} md={6}></Col>\r\n        </Row>\r\n        <Divider />\r\n        <Row>\r\n          <Col xs={1} sm={1} md={6}></Col>\r\n          <Col xs={24} sm={24} md={12}>\r\n            <img src={features} height=\"240\" width={'100%'} alt=\"taken\" />\r\n            <Panel bodyFill style={{ display: 'inline-block', width: '100%' }}>\r\n              <Panel header={<h1 style={{ textAlign: 'center' }}>Features</h1>}>\r\n                <Message\r\n                  showIcon\r\n                  type=\"info\"\r\n                  title={\r\n                    <h6>\r\n                      Most of{' '}\r\n                      <a\r\n                        href=\"https://github.com/marak/Faker.js/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        faker\r\n                      </a>\r\n                      's functions\r\n                    </h6>\r\n                  }\r\n                />\r\n                <Message\r\n                  showIcon\r\n                  type=\"info\"\r\n                  title={\r\n                    <h6>\r\n                      <a\r\n                        href=\"https://github.com/typicode/json-server\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        json-server\r\n                      </a>{' '}\r\n                      intergration\r\n                    </h6>\r\n                  }\r\n                />\r\n                <Message\r\n                  showIcon\r\n                  type=\"info\"\r\n                  title={<h6>one to many relations between models</h6>}\r\n                />\r\n                <Message\r\n                  showIcon\r\n                  type=\"info\"\r\n                  title={\r\n                    <h6>\r\n                      Drag Drop interface for selecting{' '}\r\n                      <a\r\n                        href=\"https://github.com/marak/Faker.js/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        faker\r\n                      </a>\r\n                      's functions in an easy way\r\n                    </h6>\r\n                  }\r\n                />\r\n                <Message\r\n                  showIcon\r\n                  type=\"warning\"\r\n                  title={\r\n                    <h6>\r\n                      lost? checkout these videos{' '}\r\n                      <a\r\n                        href=\"https://www.youtube.com/watch?v=Vh0M0oNo7Gc&t=9s\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        #1\r\n                      </a>{' '}\r\n                      <a\r\n                        href=\"https://youtu.be/4Kwv98RDoSM\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        #2\r\n                      </a>{' '}\r\n                      <a\r\n                        href=\"https://youtu.be/Vh0M0oNo7Gc\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        #3\r\n                      </a>{' '}\r\n                      <a\r\n                        href=\"https://youtu.be/M8XhhTzK00g\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        #4\r\n                      </a>{' '}\r\n                      or click on the{' '}\r\n                      <IconButton\r\n                        icon={<Icon icon=\"twinkle-star\" />}\r\n                        color=\"blue\"\r\n                        circle\r\n                      />{' '}\r\n                      icon\r\n                    </h6>\r\n                  }\r\n                />\r\n                <Message\r\n                  showIcon\r\n                  type=\"warning\"\r\n                  title={\r\n                    <h6>\r\n                      Repo{' '}\r\n                      <a\r\n                        href=\"https://github.com/MohammedAl-Rowad/pollux\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        here\r\n                      </a>\r\n                    </h6>\r\n                  }\r\n                />\r\n              </Panel>\r\n            </Panel>\r\n          </Col>\r\n          <Col xs={1} sm={1} md={6}></Col>\r\n        </Row>\r\n      </Grid>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ContentComp\r\n","import React from 'react'\r\nimport { IconButton, Icon } from 'rsuite'\r\n\r\nconst FooterComp = () => {\r\n  return (\r\n    <section style={{ textAlign: 'center' }}>\r\n      Made by <b>Rowad</b>{' '}\r\n      <a\r\n        href=\"https://www.linkedin.com/in/mohammed-al-rowad/\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <IconButton size=\"xs\" icon={<Icon icon=\"linkedin-square\" />} />\r\n      </a>\r\n      {'  '}\r\n      <a\r\n        href=\"https://github.com/MohammedAl-Rowad\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <IconButton size=\"xs\" icon={<Icon icon=\"github-alt\" />} />\r\n      </a>\r\n      {'  '}\r\n      <a\r\n        href=\"https://www.youtube.com/channel/UC1Uw_GN4sodGisimwZNzMoA?view_as=subscriber\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <IconButton size=\"xs\" icon={<Icon icon=\"youtube-play\" />} />\r\n      </a>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default FooterComp\r\n","import React from 'react'\r\n// import 'rsuite/dist/styles/rsuite-dark.css'\r\nimport './App.css'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { Header, Content, Footer, Generate } from './components/'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\n\r\nconsole.log(\r\n  `%c\r\n\r\n'########:::'#######::'##:::::::'##:::::::'##::::'##:'##::::'##:\r\n ##.... ##:'##.... ##: ##::::::: ##::::::: ##:::: ##:. ##::'##::\r\n ##:::: ##: ##:::: ##: ##::::::: ##::::::: ##:::: ##::. ##'##:::\r\n ########:: ##:::: ##: ##::::::: ##::::::: ##:::: ##:::. ###::::\r\n ##.....::: ##:::: ##: ##::::::: ##::::::: ##:::: ##::: ## ##:::\r\n ##:::::::: ##:::: ##: ##::::::: ##::::::: ##:::: ##:: ##:. ##::\r\n ##::::::::. #######:: ########: ########:. #######:: ##:::. ##:\r\n..::::::::::.......:::........::........:::.......:::..:::::..::\r\n`,\r\n  'color: #4E7F97'\r\n)\r\n\r\nconsole.log(\r\n  '%cRepo: https://github.com/MohammedAl-Rowad/pollux',\r\n  'color: #4E7F97; font-size: 20px'\r\n)\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <DndProvider backend={HTML5Backend} options={{ enableMouseEvents: true }}>\r\n        <Header />\r\n        <Route path=\"/\" exact={true}>\r\n          <main>\r\n            <Content />\r\n            <Footer />\r\n          </main>\r\n        </Route>\r\n        <Route path=\"/generate\">\r\n          <Generate />\r\n          <Footer />\r\n        </Route>\r\n      </DndProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ADD_MODEL, DELETE_MODEL, UPDATE_AMOUNT } from '../actionTypes'\r\n\r\nconst initialState = []\r\n\r\nexport default function (state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case ADD_MODEL: {\r\n      return [...state, { ...payload, amount: payload.amount || 10 }]\r\n    }\r\n    case DELETE_MODEL: {\r\n      return state.filter(({ id }) => id !== payload)\r\n    }\r\n    case UPDATE_AMOUNT: {\r\n      // payload is num here\r\n      const { modelId, amount } = payload\r\n      return state.map((model) => {\r\n        if (model.id === modelId) {\r\n          return { ...model, amount }\r\n        } else {\r\n          return { ...model }\r\n        }\r\n      })\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  random,\r\n  name,\r\n  address,\r\n  commerce,\r\n  company,\r\n  database,\r\n  date,\r\n  finance,\r\n  hacker,\r\n  image,\r\n  internet,\r\n  lorem,\r\n  phone,\r\n} from 'faker'\r\n\r\nconst randomCpy = { ...random }\r\nconst dateCpy = { ...date }\r\ndelete randomCpy.objectElement\r\ndelete randomCpy.arrayElement\r\ndelete dateCpy.between\r\n\r\nconst names = { ...name }\r\nnames.fullName = name.findName\r\ndelete names.findName\r\nconst objects = {\r\n  random: randomCpy,\r\n  name: names,\r\n  address,\r\n  commerce,\r\n  company,\r\n  database,\r\n  date: dateCpy,\r\n  finance,\r\n  hacker,\r\n  image,\r\n  internet,\r\n  lorem,\r\n  phone,\r\n}\r\n\r\nconst initialState = Object.keys(objects)\r\n  .map((name) =>\r\n    Object.keys(objects[name]).map((funName) => ({\r\n      groupName: name,\r\n      label: (() => {\r\n        const res = funName.replace(/([A-Z])/g, ' $1')\r\n        return `${res.charAt(0).toUpperCase()}${res.slice(1)}`\r\n      })(),\r\n      value: funName,\r\n    }))\r\n  )\r\n  .reduce((prevArr, currArr) => [...prevArr, ...currArr], [])\r\n\r\nexport default function (state = initialState, action) {\r\n  return state\r\n}\r\n","import {\r\n  ADD_RPOP_NAME,\r\n  REMOVE_ALL_RPOPS,\r\n  EDIT_PROP,\r\n  DELETE_PROP,\r\n  JUST_ADD_PROP,\r\n} from '../actionTypes'\r\nimport { v4 } from 'uuid'\r\n\r\nconst initialState = {}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_RPOP_NAME: {\r\n      const { uuid, propName } = action.payload\r\n      return {\r\n        ...state,\r\n        [uuid]: [...(state[uuid] || []), { propName, id: v4() }],\r\n      }\r\n    }\r\n    case JUST_ADD_PROP: {\r\n      const { uuid: modelUuid, props } = action.payload\r\n      return {\r\n        ...state,\r\n        [modelUuid]: [...(state[modelUuid] || []), ...props],\r\n      }\r\n    }\r\n    case REMOVE_ALL_RPOPS: {\r\n      const uuid = action.payload\r\n      delete state[uuid]\r\n      return { ...state }\r\n    }\r\n    case EDIT_PROP: {\r\n      const { id: modelUuid, propId, ...propData } = action.payload\r\n      // we need to save it in its orignal place\r\n      const idx = state[modelUuid].findIndex(({ id }) => id === propId)\r\n      const findProp = {\r\n        ...state[modelUuid].find(({ id }) => id === propId),\r\n        ...propData,\r\n      }\r\n\r\n      if (!propData.func && !findProp.func) delete findProp.func\r\n      const without = state[modelUuid].filter(({ id }) => id !== propId)\r\n      return {\r\n        ...state,\r\n        [modelUuid]: [\r\n          ...without.slice(0, idx),\r\n          findProp,\r\n          ...without.slice(idx),\r\n        ],\r\n      }\r\n    }\r\n    case DELETE_PROP: {\r\n      const { modelId, propId } = action.payload\r\n      return {\r\n        ...state,\r\n        [modelId]: [...state[modelId].filter(({ id }) => id !== propId)],\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ADD_RELATION, REMOVE_RELATION } from '../actionTypes'\r\n\r\nconst initialState = {}\r\n\r\nexport default function (state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case ADD_RELATION: {\r\n      const { distId, modelId } = payload\r\n      return {\r\n        ...state,\r\n        [modelId]: [...(state[modelId] || []), distId],\r\n      }\r\n    }\r\n    case REMOVE_RELATION: {\r\n      const { distId, modelId } = payload\r\n      return {\r\n        ...state,\r\n        [modelId]: (state[modelId] || []).filter((id) => distId !== id),\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport models from './models.reducer'\r\nimport faker from './faker.reducer'\r\nimport prop from './prop.reducer'\r\nimport relations from './relation.reducer'\r\nimport auth from './auth.reducer'\r\n\r\nexport default combineReducers({ models, faker, prop, relations, auth })\r\n","import { DISABLE_AUTH, ENABLE_AUTH } from '../actionTypes'\r\n\r\nexport default function (_, { type }) {\r\n  switch (type) {\r\n    case DISABLE_AUTH: {\r\n      return false\r\n    }\r\n    case ENABLE_AUTH: {\r\n      return true\r\n    }\r\n    default: {\r\n      return false\r\n    }\r\n  }\r\n}\r\n","import { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default createStore(rootReducer, composeWithDevTools())\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport Pollux from './App'\r\n// import * as serviceWorker from './serviceWorker'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n// console.log(store.getState())\r\n// store.subscribe(() => console.log(store.getState()))\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Pollux />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/empty.7448158e.svg\";","module.exports = __webpack_public_path__ + \"static/media/emptySave.10032122.svg\";","module.exports = __webpack_public_path__ + \"static/media/loadModels.a2b0ac77.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DraggableCommonProp_item__29iMN\"};","module.exports = __webpack_public_path__ + \"static/media/prototype.ea2fca44.svg\";","module.exports = __webpack_public_path__ + \"static/media/prototype2.f4e51a29.svg\";","module.exports = __webpack_public_path__ + \"static/media/features.ac13338d.svg\";","module.exports = __webpack_public_path__ + \"static/media/box.d0bcb7b7.svg\";"],"sourceRoot":""}