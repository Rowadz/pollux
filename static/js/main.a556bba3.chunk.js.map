{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","components/generate/components/Controller/components/AddModelBtn.tsx","components/generate/components/Controller/components/empty.svg","colors.js","components/generate/components/Controller/components/ModelsComponents/ConfirmDel.js","components/generate/components/Controller/components/ModelsComponents/cat.svg","components/generate/components/Controller/components/ModelsComponents/AddProp.js","components/generate/components/Controller/components/ModelsComponents/Prop.js","components/generate/components/Controller/components/ModelsComponents/PropsDisplay.js","components/generate/components/Controller/components/ModelsComponents/CreateRel.tsx","zipFileContent/package.json.ts","zipFileContent/readme.md.ts","graphqlZipContent/readme.md.ts","components/generate/webWorker/eventEmitter.js","components/generate/webWorker/spawn.js","redux/reducers/models.reducer.js","redux/reducers/faker.reducer.js","redux/reducers/prop.reducer.js","redux/reducers/relation.reducer.js","redux/reducers/index.js","redux/reducers/locale.reducer.js","redux/reducers/auth.reducer.js","redux/reducers/builder.reducer.js","redux/reducers/generateProgress.reducer.js","redux/store.js","components/generate/components/Controller/util.ts","graphqlZipContent/package.json.ts","components/generate/components/Controller/components/ModelsComponents/WebWorkerProgress.tsx","components/generate/components/Controller/components/ModelsComponents/ModelHeader.tsx","components/shared/selectors.ts","components/shared/jsonToGraphQl.ts","components/generate/components/Controller/components/ModelsComponents/RenderLangIcon.js","components/generate/components/Controller/components/ModelsComponents/CodeGenerator.tsx","components/generate/components/Controller/components/ModelsComponents/LanguageSelector.tsx","components/generate/components/Controller/GraphQlModel.tsx","components/generate/components/Controller/components/ModelsComponents/ModelSubHeader.tsx","components/generate/components/Controller/components/ModelsComponents/Model.tsx","components/generate/components/Controller/components/Models.tsx","components/generate/components/Controller/components/emptySave.svg","components/generate/components/Controller/components/SaveModel.tsx","components/generate/components/Controller/components/loadModels.svg","components/generate/components/Controller/components/LoadModel.js","components/generate/components/Controller/Controller.tsx","components/generate/Generate.tsx","components/Builder/maps.js","components/Builder/builderComponents/CommonProps/components/DraggableCommonProp.js","components/Builder/builderComponents/CommonProps/CommonProps.js","components/Builder/BuilderBody/BuilderBody.js","flags.ts","components/locale.map.ts","components/wave_hello.gif","components/Header.tsx","components/prototype.svg","components/faq.svg","components/data-extraction.svg","components/Content.tsx","components/Footer.tsx","components/FlowGenerate/data.tsx","components/FlowGenerate/ModelNode.tsx","components/FlowGenerate/nodesTypes.ts","components/FlowGenerate/NodesDragDrop.tsx","components/FlowGenerate/FlowGenerate.tsx","bugs.svg","ErrorBoundary.tsx","App.tsx","index.js","components/generate/webWorker/dataGenerateWebWorker.js","components/Builder/builderComponents/CommonProps/components/DraggableCommonProp.module.css"],"names":["ADD_MODEL","DELETE_MODEL","ADD_RPOP_NAME","JUST_ADD_PROP","REMOVE_ALL_RPOPS","EDIT_PROP","DELETE_PROP","ADD_RELATION","REMOVE_RELATION","UPDATE_AMOUNT","ENABLE_AUTH","DISABLE_AUTH","SET_PROGRESS","SET_LOCALE","TOGGLE_BUILDER","addModel","model","type","payload","justAddProp","props","editProp","toggleBuilderAction","flag","Header","Modal","Body","Footer","Title","AddModelBtn","useState","showNameModal","modelName","state","setState","dispatch","useDispatch","close","create","id","v4","name","createdAt","Date","inputChange","str","trim","IconButton","color","onClick","appearance","style","width","icon","Icon","show","onHide","maxWidth","className","Input","onPressEnter","onChange","autoFocus","placeholder","size","value","Button","danger","normal","ConfirmDel","showConfirmModal","closeConfirmModal","del","backdrop","fontSize","connect","ownProps","prop","propNamesForThisModel","showPropNameModal","addProp","mode","propNameProp","propId","propName","valid","useLayoutEffect","queueMicrotask","document","querySelector","click","focus","strOrArrayOfStrings","display","marginBottom","Message","showIcon","description","TagPicker","creatable","menuStyle","find","forEach","disabled","length","dangerClass","Wrapper","styled","div","checkIfMobile","test","navigator","userAgent","ownProp","inputData","faker","i","regex","modelId","func","disableModalControllers","fullScreen","setFullScreen","regexError","setRegexErrors","useMount","prevState","debouncedOnRegexUpdate","useDebouncedCallback","RegExp","flipKey","flipId","List","Item","index","height","Grid","fluid","Row","colSpan","textAlign","Col","xs","sm","md","defaultValue","role","dangerClas","InputPicker","findRes","val","groupName","data","filter","label","groupBy","margin","circle","propsEl","hover","map","uuid","others","src","cat","alt","CreateRel","showCreateRel","eligibleModels","useSelector","models","mainModel","checkedModels","relations","Set","toggleRel","checked","distId","Alert","success","info","removeRelation","toUpperCase","marginTop","Toggle","marginLeft","has","memo","auth","scripts","dev","author","license","dependencies","eventEmitter","Emittery","spawnWebWorker","amount","relationsProps","locale","maxWorkers","hardwareConcurrency","console","log","allWorkers","Array","from","webWorker","worker","onmessage","emit","startGenerating","Promise","all","initialState","random","address","commerce","company","database","date","finance","hacker","image","internet","datatype","lorem","phone","randomCpy","dateCpy","objectElement","arrayElement","between","names","fullName","findName","objects","Object","keys","funName","res","replace","charAt","slice","reduce","prevArr","currArr","combineReducers","action","modelUuid","propData","idx","findIndex","findProp","without","_","builder","isOpen","generateProgress","createStore","rootReducer","composeWithDevTools","window","generate","justReturn","onlyJSON","overrideRelationsCount","atLeastOneWithoutFunc","len","warning","join","Worker","store","getState","then","result","outJSON","flat","el","toJSONPritty","saveAs","Blob","catch","error","group","groupEnd","generateFakeData","resWithRelations","obj","prev","downloadData","regexStr","helpers","key","randexp","RandExp","gen","strToUse","ar","de","en","cz","es","fr","ko","zh_CN","sv","fakerToUse","arabicFaker","germanFaker","englishFaker","czechFaker","spanishFaker","frenchFaker","koreanFaker","ChineseFaker","SwedishFaker","keyProxy","substring","Number","POSITIVE_INFINITY","JSON","stringify","relationsPropsGetter","relationsGetter","generateAPI","zip","JSZip","file","npmCongif","apiReadme","generateAsync","zipContent","generateGraphqlAPI","jsonStr","graphqlReadme","WebWorkerProgress","generated","setGenereated","startedWorkersCount","setStartedWorkersCount","currentWebWorkerModelId","setModelId","modelSelector","useCallback","relCount","totalNumberOfDocumentsToBeGenerated","useEffect","on","counter","setTimeout","FlexboxGrid","justify","flexDirection","align","toLocaleString","Progress","Circle","percent","toFixed","status","flexGrow","strokeColor","showInfo","Math","floor","ModelHeader","isTourOpen","propsCount","generateGraphQl","openCreateRelModal","useDrop","accept","canDrop","collect","monitor","hovered","isOver","drop","Tag","Whisper","placement","trigger","speaker","Tooltip","Badge","content","ref","Panel","shaded","backgroundColor","background","selectModel","createSelector","selectProps","propsMap","selectRelations","selectRelationsProps","selectPropsCount","fakerPropMap","selectCheckedModels","relationsMap","selectFakerList","selectAuth","toModelTypeName","RenderLangIcon","lang","formatRuby","dayjs","isValid","toISOString","CodeGenerator","toggleShowModal","shallowEqual","modelProps","code","setCode","phpArrayStr","json2php","parse","phpArrayStrWithNewLines","replaceAll","rubyCode","curr","isNaN","lastIndexOf","values","list","entries","comma","push","sqlValues","sql","format","full","overflow","clipboard","writeText","extensions","javascript","jsx","theme","githubDark","readOnly","LanguageSelector","setLang","useToggle","showModal","ButtonGroup","Dropdown","onSelect","renderTitle","eventKey","GraphQlModel","graphql","SiGraphqlContainer","ModelSubHeader","changeAmount","setGraphQl","toggleShowPropNameModal","InputNumber","max","min","fakeObj","fakeJSON","graphQlStr","formatSdl","jsonToSchema","jsonInput","modelTypeName","toGraphQl","Model","generateProxy","generateGraphqlAPIProxy","setDisableModalControllers","updateAmount","PanelGroup","bordered","header","float","deleteModel","Image","img","selectModels","Models","now","empty","loading","showModalSave","toSave","modelsKey","modelsEl","Checkbox","emptySave","rest","toSaveSet","saved","localStorage","getItem","realToSave","setItem","showTheModalOfModels","loadModelsEmpty","m","load","Divider","mapSteps","matchMedia","matches","steps","selector","setIsTourOpen","addEventListener","e","onRequestClose","generateAPIForAll","fakeData","graphqlStr","autogeneratedMainType","sort","toGraphQlManyModels","checkedChildren","unCheckedChildren","Generate","Map","DraggableCommonProp","children","useDrag","item","get","isDragging","dragRef","styles","cursor","boxShadow","CommonProps","fakerObj","useMemo","keyword","setKeyword","toLowerCase","includes","FLAGS","freeze","FLOW_GENERATE","LOCALE_MAP","Navbar","Nav","HeaderComp","pathname","useLocation","setLocale","toggleShow","to","navData","isActive","renderItem","waveHello","pullRight","title","activeKey","newLocale","setLocaleAction","Drawer","FlexboxGridWithSpacing","FlexboxGridItemWithSpacing","Text","p","CenterText","TextUnderline","span","ContentComp","colspan","componentClass","faq","smHidden","prototype","dataExtraction","href","target","rel","FooterComp","nodes","edges","ModelNodeBody","ModelNode","isConnectable","position","Position","Left","InputGroup","plaplaceholder","Addon","Right","top","MODEL_NODE","Card","NodesDragDrop","onDragStart","event","createElement","dataTransfer","setDragImage","nodeType","setData","effectAllowed","draggable","ReactFlowSection","section","nodeTypes","FlowGenerate","reactFlowWrapper","useRef","reactFlowInstance","setReactFlowInstance","useNodesState","setNodes","onNodesChange","useEdgesState","setEdges","onEdgesChange","onDragOver","preventDefault","dropEffect","onConnect","connection","eds","addEdge","onEdgeUpdate","oldEdge","newConnection","els","updateEdge","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","x","clientX","left","y","clientY","newNode","nds","concat","fitView","snapToGrid","onInit","FlexboxGridItem","ErrorBoundary","hasError","this","bugs","React","Component","App","DndProvider","backend","HTML5Backend","options","enableMouseEvents","path","element","Content","ReactDOM","render","StrictMode","getElementById","addMethods","methods","module","exports","w"],"mappings":"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","file":"static/js/main.a556bba3.chunk.js","sourcesContent":["export const ADD_MODEL = 'ADD_MODEL'\nexport const DELETE_MODEL = 'DELETE_MODEL'\nexport const ADD_RPOP_NAME = 'ADD_RPOP_NAME'\nexport const JUST_ADD_PROP = 'JUST_ADD_PROP'\nexport const REMOVE_ALL_RPOPS = 'REMOVE_ALL_RPOPS'\nexport const EDIT_PROP = 'EDIT_PROP'\nexport const DELETE_PROP = 'DELETE_PROP'\nexport const ADD_RELATION = 'ADD_RELATION'\nexport const REMOVE_RELATION = 'REMOVE_RELATION'\nexport const UPDATE_AMOUNT = 'UPDATE_AMOUNT'\nexport const ENABLE_AUTH = 'ENABLE_AUTH'\nexport const DISABLE_AUTH = 'DISABLE_AUTH'\nexport const SET_PROGRESS = 'SET_PROGRESS'\nexport const SET_LOCALE = 'SET_LOCALE'\nexport const TOGGLE_BUILDER = 'TOGGLE_BUILDER'\n","import {\n  ADD_MODEL,\n  DELETE_MODEL,\n  ADD_RPOP_NAME,\n  REMOVE_ALL_RPOPS,\n  EDIT_PROP,\n  DELETE_PROP,\n  JUST_ADD_PROP,\n  ADD_RELATION,\n  REMOVE_RELATION,\n  UPDATE_AMOUNT,\n  SET_LOCALE,\n  ENABLE_AUTH,\n  DISABLE_AUTH,\n  SET_PROGRESS,\n  TOGGLE_BUILDER,\n} from './actionTypes'\n\n/**\n *\n * @param {Object} model - the model object\n * @param {string} model.name - the model name\n * @param {string} model.id - the model uuid\n * @param {number} model.createdAt - the mode timestamp\n */\nexport const addModel = (model) => ({\n  type: ADD_MODEL,\n  payload: model,\n})\n\n/**\n *\n * @param {string} uuid - the prop uuid\n *\n */\nexport const deleteModel = (uuid) => ({\n  type: DELETE_MODEL,\n  payload: uuid,\n})\n\n/**\n *\n * @param {Object} props - the props object\n * @param {string} props.uuid - the model uuid\n * @param {string} props.propName - the props name\n */\nexport const addPropName = (props) => ({\n  type: ADD_RPOP_NAME,\n  payload: props,\n})\n\n/**\n *\n * @param {Array<Object>} props - object\n * @param {Object} props.id - the props id\n * @param {string} props.uuid - the model uuid\n * @param {string} props.propName - the props name\n * @param {string} props.func - the props random func\n * @param {string} props.groupName - the props groupName for the random func\n */\nexport const justAddProp = (props) => ({\n  type: JUST_ADD_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {string} uuid - the prop uuid\n *\n */\nexport const removeAllProps = (uuid) => ({\n  type: REMOVE_ALL_RPOPS,\n  payload: uuid,\n})\n\n/**\n * @param {Object} props - the prop object\n * @param {string} props.propId - the prop uuid\n * @param {string} props.id - the model uuid\n * @param {string} props.newName - the new prop name\n * @param {string} props.groupName - the top lvl obj name for faker\n * @param {string} props.func - the faker function\n */\nexport const editProp = (props) => ({\n  type: EDIT_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.propId - the prop uuid\n * @param {string} props.modelId - the model uuid\n */\nexport const delProp = (props) => ({\n  type: DELETE_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.distId - the model uuid to create relation with\n * @param {string} props.modelId - the model uuid\n */\nexport const addRelation = (props) => ({\n  type: ADD_RELATION,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.distId - the model uuid to remove from the relation\n * @param {string} props.modelId - the model uuid\n */\nexport const removeRelation = (props) => ({\n  type: REMOVE_RELATION,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.amount - the amount of data to generate\n * @param {string} props.modelId - the model uuid\n */\nexport const updateAmount = (props) => ({\n  type: UPDATE_AMOUNT,\n  payload: props,\n})\n\nexport const enableAuth = () => ({ type: ENABLE_AUTH })\n\nexport const disableAuth = () => ({ type: DISABLE_AUTH })\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.modelId - the model uuid\n */\nexport const setProgress = (props) => ({ type: SET_PROGRESS, payload: props })\n\n/**\n *\n * @param {string} locale - the new locale\n */\nexport const setLocaleAction = (locale) => ({\n  type: SET_LOCALE,\n  payload: locale,\n})\n\n/**\n *\n * @param {boolean} flag\n */\nexport const toggleBuilderAction = (flag) => ({\n  type: TOGGLE_BUILDER,\n  payload: flag,\n})\n","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Input } from 'rsuite'\nimport { useDispatch } from 'react-redux'\nimport { addModel } from 'redux/actions'\nimport { v4 } from 'uuid'\n\nconst { Header, Body, Footer, Title } = Modal\n\nconst AddModelBtn = () => {\n  const [state, setState] = useState({ showNameModal: false, modelName: '' })\n  const dispatch = useDispatch()\n  const showNameModal = () => setState({ ...state, showNameModal: true })\n  const close = () => setState({ ...state, showNameModal: false })\n  const create = () => {\n    dispatch(\n      addModel({\n        id: v4(),\n        name: state.modelName,\n        createdAt: +new Date(),\n      })\n    )\n    setState({ ...state, modelName: '', showNameModal: false })\n  }\n\n  const inputChange = (str: string) =>\n    setState({ ...state, modelName: str.trim() })\n\n  const onEnter = () => {\n    inputChange(state.modelName)\n    create()\n  }\n  return (\n    <section>\n      <ol>\n        <li>Click on \"Add a model\"</li>\n        <li>Click on \"Builder\"</li>\n        <li>Drag and drop and functions</li>\n        <li>Generate data</li>\n      </ol>\n      <IconButton\n        id=\"add-prototype-btn\"\n        color=\"cyan\"\n        onClick={showNameModal}\n        appearance=\"primary\"\n        style={{ width: '100%' }}\n        icon={<Icon icon=\"plus\" />}\n      >\n        <b>Add a model</b>\n      </IconButton>\n      <Modal\n        show={state.showNameModal}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>Choose the model name</Title>\n        </Header>\n        <Body>\n          <p>\n            Click <span className=\"note\">`Enter`</span> to create the model or\n            <span className=\"note\">`esc`</span> to close this model\n          </p>\n          <Input\n            onPressEnter={onEnter}\n            onChange={inputChange}\n            autoFocus={true}\n            style={{ width: '100%' }}\n            placeholder=\"Your model name\"\n            size=\"lg\"\n            value={state.modelName}\n          />\n        </Body>\n        <Footer>\n          <Button onClick={create} appearance=\"primary\">\n            Create\n          </Button>\n          <Button onClick={close} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default AddModelBtn\n","export default __webpack_public_path__ + \"static/media/empty.858c3dd8.svg\";","export const danger = '#E30712'\nexport const normal = '#00a0bd'\n","import React from 'react'\nimport { Icon, Button, Modal } from 'rsuite'\nimport { danger } from 'colors'\nconst { Body, Footer, Header, Title } = Modal\n\nconst ConfirmDel = ({ showConfirmModal, closeConfirmModal, name, del, id }) => {\n  return (\n    <Modal\n      backdrop=\"static\"\n      onHide={closeConfirmModal}\n      size=\"xs\"\n      show={showConfirmModal}\n      style={{ maxWidth: '100%' }}\n    >\n      <Header>\n        <Title>Confirm</Title>\n      </Header>\n      <Body>\n        <Icon\n          icon=\"remind\"\n          style={{\n            color: '#ffb300',\n            fontSize: 24,\n          }}\n        />\n        <b>\n          {' '}\n          Are you sure you want to delete this model {'`'}\n          <span style={{ color: danger }}>{name}</span>\n          {'`'}?\n        </b>\n      </Body>\n      <Footer>\n        <Button onClick={() => del(id)} appearance=\"primary\" color=\"red\">\n          Ok\n        </Button>\n        <Button onClick={closeConfirmModal} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default ConfirmDel\n","export default __webpack_public_path__ + \"static/media/cat.6cc6ec72.svg\";","import React, { useState, useLayoutEffect } from 'react'\nimport { Input, TagPicker, Button, Modal, Message } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { editProp } from 'redux/actions'\n\nconst { Body, Footer, Header, Title } = Modal\n\nconst AddProp = ({\n  showPropNameModal,\n  closeConfirmModal,\n  name,\n  addProp,\n  propNamesForThisModel,\n  id,\n  mode,\n  propNameProp,\n  dispatch,\n  propId,\n}) => {\n  const [state, setState] = useState({\n    propName: mode === 'edit' ? propNameProp : '',\n    valid: true,\n  })\n\n  useLayoutEffect(() => {\n    if (showPropNameModal && mode !== 'edit') {\n      queueMicrotask(() => {\n        document.querySelector('.properties-tag-picker').click()\n        document.querySelector('.properties-tag-picker input').focus()\n      })\n    }\n  }, [showPropNameModal, mode])\n\n  const inputChange = (strOrArrayOfStrings) => {\n    if (mode === 'edit') {\n      setState({ propName: strOrArrayOfStrings.trim(''), valid: true })\n    } else {\n      setState({ propName: strOrArrayOfStrings, valid: true })\n    }\n  }\n  const addButtonClick = () => {\n    if (propNamesForThisModel) {\n      const exists = propNamesForThisModel.find(\n        ({ propName }) => propName === state.propName\n      )\n      if (exists) {\n        setState({ ...state, valid: false })\n        return\n      }\n    }\n    if (mode === 'edit')\n      dispatch(editProp({ propName: state.propName, id, propId }))\n    else {\n      state.propName.forEach((name) => addProp(name))\n      setState({ ...state, propName: '' })\n    }\n    closeConfirmModal()\n  }\n  const close = () => {\n    setState({ ...state, valid: true })\n    closeConfirmModal()\n  }\n  return (\n    <Modal\n      backdrop=\"static\"\n      show={showPropNameModal}\n      onHide={close}\n      style={{ maxWidth: '100%' }}\n      size=\"lg\"\n    >\n      <Header>\n        <Title>\n          {mode === 'edit'\n            ? `Edit ${propNameProp} property`\n            : 'Enter the properties names'}\n        </Title>\n      </Header>\n      <Body>\n        <div\n          style={{\n            display: state.valid ? 'none' : 'block',\n            marginBottom: '10px',\n          }}\n        >\n          <Message\n            type=\"error\"\n            showIcon\n            description={`The Property \"${state.propName}\" is already exists in this model (${name})`}\n          />\n        </div>\n        <p style={{ marginBottom: '1rem' }}>\n          <b>\n            Type the prop name then press <span className=\"note\">`Enter`</span>{' '}\n            to add them\n          </b>\n        </p>\n        {mode === 'edit' ? (\n          <Input\n            style={{ width: '100%' }}\n            placeholder=\"Change prop name\"\n            onChange={inputChange}\n          />\n        ) : (\n          <TagPicker\n            className=\"properties-tag-picker\"\n            creatable\n            placeholder=\"add as many properties you want here\"\n            style={{ width: '100%' }}\n            onChange={inputChange}\n            menuStyle={{ width: 300, display: 'none' }}\n          />\n        )}\n      </Body>\n      <Footer>\n        <Button\n          onClick={addButtonClick}\n          appearance=\"primary\"\n          color=\"cyan\"\n          disabled={!state.propName.length}\n        >\n          Ok\n        </Button>\n        <Button onClick={close} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default connect((state, ownProps) => {\n  const { prop } = state\n  return { ...ownProps, propNamesForThisModel: prop[ownProps.id] }\n})(AddProp)\n","import React, { useState } from 'react'\nimport { useMount } from 'react-use'\nimport {\n  InputPicker,\n  List,\n  Grid,\n  Col,\n  Row,\n  Icon,\n  IconButton,\n  Input,\n} from 'rsuite'\nimport AddProp from './AddProp'\nimport { connect } from 'react-redux'\nimport { delProp, editProp } from 'redux/actions'\nimport styled from 'styled-components'\nimport { danger, normal } from '../../../../../../colors'\nimport { useDebouncedCallback } from 'use-debounce'\nimport { Flipped, Flipper } from 'react-flip-toolkit'\n\nconst dangerClass = 'danger'\n\nconst Wrapper = styled.div`\n  & .${dangerClass} {\n    border-color: ${danger};\n    color: ${danger};\n  }\n`\nWrapper.dangerClass = dangerClass\n\nconst checkIfMobile = () =>\n  /Mobi/.test(navigator.userAgent) || /Mobi|Android/i.test(navigator.userAgent)\n\nconst Prop = ({\n  i,\n  name,\n  id,\n  regex,\n  modelName,\n  modelId,\n  dispatch,\n  inputData,\n  func,\n  disableModalControllers,\n}) => {\n  const [fullScreen, setFullScreen] = useState(false)\n  const [state, setState] = useState({ showPropNameModal: false, func })\n  const [regexError, setRegexErrors] = useState(false)\n  const closeModal = () => setState({ ...state, showPropNameModal: false })\n  const openModal = () => setState({ ...state, showPropNameModal: true })\n  const del = () => dispatch(delProp({ propId: id, modelId }))\n  const onFuncSelect = (value) => {\n    const findRes = inputData.find(({ value: val }) => value === val)\n    if (!findRes) return\n    const { groupName } = findRes\n    setState({ ...state, func: value })\n    dispatch(editProp({ id: modelId, propId: id, func: value, groupName }))\n  }\n\n  useMount(() => {\n    setFullScreen((prevState) => !prevState)\n  })\n\n  const debouncedOnRegexUpdate = useDebouncedCallback((value) => {\n    try {\n      new RegExp(value)\n    } catch {\n      setRegexErrors(true)\n    } finally {\n      setRegexErrors(value === '')\n      dispatch(editProp({ id: modelId, regex: value, propId: id }))\n    }\n  }, 200)\n\n  const icon =\n    func !== 'regex' ? (\n      <Icon icon=\"circle\" />\n    ) : (\n      <Icon icon=\"creative\" style={{ color: normal }} />\n    )\n\n  return (\n    <Flipper flipKey={fullScreen}>\n      <Flipped flipId=\"square-prop\">\n        <List.Item\n          key={i}\n          index={i}\n          style={\n            fullScreen\n              ? { width: '100%', height: '100%' }\n              : { width: 0, height: 0 }\n          }\n        >\n          <Grid fluid>\n            <Row\n              colSpan={6}\n              style={{ textAlign: checkIfMobile() ? 'center' : 'left' }}\n            >\n              <Col xs={24} sm={24} md={6}>\n                <h6>\n                  {icon} {name} {checkIfMobile() ? <Icon icon=\"circle\" /> : ''}\n                </h6>\n              </Col>\n\n              <Col xs={24} sm={24} md={12} style={{ textAlign: 'left' }}>\n                {state.func === 'regex' ? (\n                  <Wrapper>\n                    <Input\n                      size=\"sm\"\n                      disabled={disableModalControllers}\n                      className={regexError ? Wrapper.dangerClass : ''}\n                      placeholder=\"Type your regex here\"\n                      onChange={debouncedOnRegexUpdate}\n                      defaultValue={regex}\n                    />\n                    {regexError ? (\n                      <p className={Wrapper.dangerClass}>\n                        The regex is not\n                        <span role=\"img\" aria-label=\"lemon\">\n                          🍋\n                        </span>\n                        JS\n                        <span role=\"img\" aria-label=\"lemon\">\n                          🍋\n                        </span>\n                        regex\n                      </p>\n                    ) : (\n                      <p className={Wrapper.dangerClas}>\n                        Write a\n                        <span role=\"img\" aria-label=\"lemon\">\n                          🍋\n                        </span>\n                        JS\n                        <span role=\"img\" aria-label=\"lemon\">\n                          🍋\n                        </span>\n                        regex here!\n                      </p>\n                    )}\n                  </Wrapper>\n                ) : (\n                  <InputPicker\n                    disabled={disableModalControllers}\n                    size=\"sm\"\n                    onChange={onFuncSelect}\n                    data={inputData?.filter((data) => {\n                      return data.label !== 'Faker'\n                    })}\n                    defaultValue={state.func}\n                    groupBy=\"groupName\"\n                    placeholder=\"Select a function\"\n                    style={{ width: '100%' }}\n                  />\n                )}\n              </Col>\n              <AddProp\n                id={modelId}\n                showPropNameModal={state.showPropNameModal}\n                closeConfirmModal={closeModal}\n                propNameProp={name}\n                name={modelName}\n                propId={id}\n                mode={'edit'}\n              />\n              <Col\n                xs={12}\n                sm={12}\n                md={3}\n                style={{ textAlign: checkIfMobile() ? 'left' : 'right' }}\n              >\n                <IconButton\n                  disabled={disableModalControllers}\n                  style={{ margin: '5px' }}\n                  size=\"xs\"\n                  icon={<Icon icon=\"edit\" />}\n                  circle\n                  onClick={openModal}\n                />\n              </Col>\n\n              <Col xs={12} sm={12} md={1} style={{ textAlign: 'right' }}>\n                <IconButton\n                  style={{ margin: '5px' }}\n                  icon={<Icon icon=\"minus\" />}\n                  circle\n                  disabled={disableModalControllers}\n                  size=\"xs\"\n                  onClick={del}\n                />\n              </Col>\n            </Row>\n          </Grid>\n        </List.Item>\n      </Flipped>\n    </Flipper>\n  )\n}\n\nexport default connect((state, ownProp) => ({\n  ...ownProp,\n  inputData: state.faker,\n}))(Prop)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport cat from './cat.svg'\nimport { List } from 'rsuite'\nimport Prop from './Prop'\n\nconst PropsDisplay = ({ id, props, modelName, disableModalControllers }) => {\n  const propsEl =\n    props && props?.length > 0 ? (\n      <List hover>\n        {props.map(({ propName, id: uuid, func, ...others }, i) => (\n          <Prop\n            i={i}\n            key={i}\n            func={func}\n            name={propName}\n            id={uuid}\n            modelId={id}\n            modelName={modelName}\n            disableModalControllers={disableModalControllers}\n            {...others}\n          />\n        ))}\n      </List>\n    ) : (\n      <section style={{ width: '100%', textAlign: 'center' }}>\n        <h5>Add Properties to this model using the + button</h5>\n        <img src={cat} alt=\"cat waiting\" width={'100px'} height={'100px'} />\n      </section>\n    )\n  return <section>{propsEl}</section>\n}\n\nexport default connect((state, ownProps) => ({\n  ...ownProps,\n  props: state.prop[ownProps.id],\n}))(PropsDisplay)\n","import React, { memo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Modal } from 'rsuite'\nimport { Grid, Row, Col } from 'rsuite'\nimport { Toggle } from 'rsuite'\nimport { addRelation, removeRelation } from 'redux/actions'\nimport { Alert } from 'rsuite'\nimport cat from './cat.svg'\nimport { ReduxState } from 'components/shared'\nconst { Body, Footer, Header, Title } = Modal\n\ntype CreateRelProps = {\n  close: () => void\n  id: string\n  showCreateRel: boolean\n}\n\nconst CreateRel = ({ showCreateRel, close, id }: CreateRelProps) => {\n  const dispatch = useDispatch()\n\n  const eligibleModels = useSelector(({ models }: ReduxState) =>\n    (models || []).filter(({ id: _id }) => _id !== id)\n  )\n\n  const mainModel = useSelector(\n    ({ models }: ReduxState) =>\n      (models || []).filter(({ id: _id }) => _id !== id)[0]\n  )\n\n  const checkedModels = useSelector(\n    ({ relations }: ReduxState) => new Set(relations[id] || [])\n  )\n\n  const toggleRel = (checked: boolean, distId: string) => {\n    if (checked) {\n      Alert.success(`created the link with ${mainModel.name} (1:m)`)\n      dispatch(addRelation({ distId, modelId: id }))\n    } else {\n      Alert.info(`removed the link with ${mainModel.name}`)\n      dispatch(removeRelation({ distId, modelId: id }))\n    }\n  }\n\n  if (!mainModel) {\n    return null\n  }\n\n  return (\n    <Modal\n      backdrop=\"static\"\n      onHide={close}\n      show={showCreateRel}\n      style={{ maxWidth: '100%' }}\n      size=\"lg\"\n    >\n      <Header>\n        <Title>\n          Create Relation for{' '}\n          <span style={{ color: '#1b9cb0' }}>\n            {mainModel.name.toUpperCase()}\n          </span>{' '}\n          model\n        </Title>\n      </Header>\n      <Body>\n        <h4>Eligible Models:</h4>\n        <Grid fluid style={{ marginTop: 20 }}>\n          <Row>\n            {eligibleModels.length === 0 ? (\n              <section style={{ width: '100%', textAlign: 'center' }}>\n                <h5>\n                  There is no eligible models, create models to link them!\n                </h5>\n                <img\n                  src={cat}\n                  alt=\"cat waiting\"\n                  width={'100px'}\n                  height={'100px'}\n                />\n              </section>\n            ) : (\n              (eligibleModels || []).map(({ name, id }) => (\n                <Col xs={24} sm={24} md={6} key={id}>\n                  <span style={{ color: '#1b9cb0' }}>{name.toUpperCase()}</span>{' '}\n                  <Toggle\n                    style={{ marginLeft: 5 }}\n                    onChange={(checked) => toggleRel(checked, id)}\n                    checked={checkedModels.has(id)}\n                  />\n                </Col>\n              ))\n            )}\n          </Row>\n        </Grid>\n      </Body>\n      <Footer>\n        <Button appearance=\"primary\" color=\"cyan\" onClick={close}>\n          Ok\n        </Button>\n        <Button appearance=\"subtle\" onClick={close}>\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default memo(CreateRel)\n","export default (auth = false) => ({\n  description: 'The file is generated using https://rowadz.github.io/pollux/',\n  scripts: {\n    dev: `${\n      auth ? 'json-server-auth' : 'json-server'\n    } --watch db.json -r routes.json`,\n  },\n  author: 'Rowadz',\n  license: 'MIT',\n  dependencies: {\n    'json-server': '^0.16.2',\n    'json-server-auth': '^2.0.2',\n  },\n})\n","export default (name: string) => `# Generated json-server API for ${name} model\nThis json-server api was generated via [pollux](https://rowadz.github.io/pollux/)\nand it runs using [json-server](https://github.com/typicode/json-server), please read json-server docs for more info.\n\n> the authtication is made with [json-server-auth](https://www.npmjs.com/package/json-server-auth) read the docs there to customize the auth behavior \n\n\n\n# How to run\n\n\\`\\`\\`bash\n$ cd into this folder\n$ npm install or npm i\n$ npm run dev\n$ now look at the terminal\n\\`\\`\\`\n`\n","export default (name: string) => `# Generated json-server API for ${name} model\nThis json-graphql0server api was generated via [pollux](https://rowadz.github.io/pollux/)\nand it runs using [json-graphql-server](https://github.com/marmelab/json-graphql-server), please read json-server docs for more info.\n\n\n# How to run\n\n\\`\\`\\`bash\n$ cd into this folder\n$ npm install or npm i\n$ npm run dev\n$ now look at the terminal\n\\`\\`\\`\n`\n","import Emittery from 'emittery'\n\nexport const eventEmitter = new Emittery()\n","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport worker from 'workerize-loader!./dataGenerateWebWorker'\nimport { eventEmitter } from './eventEmitter'\n\n// this runs in a web worker\nexport const spawnWebWorker = async ({\n  props,\n  amount,\n  modelId,\n  relations,\n  relationsProps,\n  locale,\n}) => {\n  const maxWorkers = navigator.hardwareConcurrency || 4\n  console.log(`%cUsing ${maxWorkers} workers`, 'color: lightsalmon;')\n  const allWorkers = Array.from({ length: maxWorkers }).map(() => {\n    const webWorker = worker()\n    webWorker.onmessage = ({ data }) => {\n      // here you have an access to the window object!\n      eventEmitter.emit(data.type, { ...data })\n    }\n    return webWorker.startGenerating(\n      props,\n      amount / maxWorkers,\n      modelId,\n      relations,\n      relationsProps,\n      locale\n    )\n  })\n\n  return await Promise.all(allWorkers)\n}\n","import { ADD_MODEL, DELETE_MODEL, UPDATE_AMOUNT } from '../actionTypes'\n\nconst initialState = []\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case ADD_MODEL: {\n      return [...state, { ...payload, amount: payload.amount || 10 }]\n    }\n    case DELETE_MODEL: {\n      return state.filter(({ id }) => id !== payload)\n    }\n    case UPDATE_AMOUNT: {\n      // payload is num here\n      const { modelId, amount } = payload\n      return state.map((model) => {\n        if (model.id === modelId) {\n          return { ...model, amount }\n        } else {\n          return { ...model }\n        }\n      })\n    }\n    default:\n      return state\n  }\n}\n","import { faker } from '@faker-js/faker'\n\nconst {\n  random,\n  name,\n  address,\n  commerce,\n  company,\n  database,\n  date,\n  finance,\n  hacker,\n  image,\n  internet,\n  datatype,\n  lorem,\n  phone,\n} = faker\n\nconst randomCpy = { ...random }\nconst dateCpy = { ...date }\ndelete randomCpy.objectElement\ndelete randomCpy.arrayElement\ndelete dateCpy.between\n\nconst names = { ...name }\nnames.fullName = name.findName\ndelete names.findName\n\nconst objects = {\n  random: randomCpy,\n  name: names,\n  datatype,\n  address,\n  commerce,\n  company,\n  database,\n  date: dateCpy,\n  finance,\n  hacker,\n  image,\n  internet,\n  lorem,\n  phone,\n}\n\nconst initialState = Object.keys(objects)\n  .map((name) =>\n    Object.keys(objects[name]).map((funName) => ({\n      groupName: name,\n      label: (() => {\n        const res = funName.replace(/([A-Z])/g, ' $1')\n        return `${res.charAt(0).toUpperCase()}${res.slice(1)}`\n      })(),\n      value: funName,\n    }))\n  )\n  .reduce((prevArr, currArr) => [...prevArr, ...currArr], [])\n\nexport default function (state = initialState, action) {\n  return state\n}\n","import {\n  ADD_RPOP_NAME,\n  REMOVE_ALL_RPOPS,\n  EDIT_PROP,\n  DELETE_PROP,\n  JUST_ADD_PROP,\n} from '../actionTypes'\nimport { v4 } from 'uuid'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_RPOP_NAME: {\n      const { uuid, propName } = action.payload\n      return {\n        ...state,\n        [uuid]: [...(state[uuid] || []), { propName, id: v4() }],\n      }\n    }\n    case JUST_ADD_PROP: {\n      const { uuid: modelUuid, props } = action.payload\n      return {\n        ...state,\n        [modelUuid]: [...(state[modelUuid] || []), ...props],\n      }\n    }\n    case REMOVE_ALL_RPOPS: {\n      const uuid = action.payload\n      delete state[uuid]\n      return { ...state }\n    }\n    case EDIT_PROP: {\n      const { id: modelUuid, propId, ...propData } = action.payload\n      // we need to save it in its orignal place\n      const idx = state[modelUuid].findIndex(({ id }) => id === propId)\n      const findProp = {\n        ...state[modelUuid].find(({ id }) => id === propId),\n        ...propData,\n      }\n\n      if (!propData.func && !findProp.func) delete findProp.func\n      const without = state[modelUuid].filter(({ id }) => id !== propId)\n      return {\n        ...state,\n        [modelUuid]: [\n          ...without.slice(0, idx),\n          findProp,\n          ...without.slice(idx),\n        ],\n      }\n    }\n    case DELETE_PROP: {\n      const { modelId, propId } = action.payload\n      return {\n        ...state,\n        [modelId]: [...state[modelId].filter(({ id }) => id !== propId)],\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { ADD_RELATION, REMOVE_RELATION } from '../actionTypes'\n\nconst initialState = {}\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case ADD_RELATION: {\n      const { distId, modelId } = payload\n      return {\n        ...state,\n        [modelId]: [...(state[modelId] || []), distId],\n      }\n    }\n    case REMOVE_RELATION: {\n      const { distId, modelId } = payload\n      return {\n        ...state,\n        [modelId]: (state[modelId] || []).filter((id) => distId !== id),\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport models from './models.reducer'\nimport faker from './faker.reducer'\nimport prop from './prop.reducer'\nimport relations from './relation.reducer'\nimport auth from './auth.reducer'\nimport generateProgress from './generateProgress.reducer'\nimport locale from './locale.reducer'\nimport builder from './builder.reducer'\n\nexport default combineReducers({\n  models,\n  faker,\n  prop,\n  locale,\n  relations,\n  auth,\n  builder,\n  generateProgress,\n})\n","import { SET_LOCALE } from '../actionTypes'\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (_, { type, payload }) {\n  switch (type) {\n    case SET_LOCALE: {\n      return payload\n    }\n    default: {\n      return 'en'\n    }\n  }\n}\n","import { DISABLE_AUTH, ENABLE_AUTH } from '../actionTypes'\n\nexport default function (_, { type }) {\n  switch (type) {\n    case DISABLE_AUTH: {\n      return false\n    }\n    case ENABLE_AUTH: {\n      return true\n    }\n    default: {\n      return false\n    }\n  }\n}\n","import { TOGGLE_BUILDER } from '../actionTypes'\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state, { type, payload }) {\n  switch (type) {\n    case TOGGLE_BUILDER: {\n      return { isOpen: payload }\n    }\n    default: {\n      return { isOpen: !!state?.isOpen }\n    }\n  }\n}\n","import { SET_PROGRESS } from '../actionTypes'\n\nexport default function (state = {}, { type, payload }) {\n  switch (type) {\n    case SET_PROGRESS: {\n      return { [payload.modelId]: (state[payload.modelId] || 0) + 1 }\n    }\n    default: {\n      return {}\n    }\n  }\n}\n","import { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nexport default createStore(rootReducer, composeWithDevTools())\n","import { Alert } from 'rsuite'\n// we should use dynamic loading (import(...).then(...))\nimport { faker } from '@faker-js/faker'\nimport { faker as arabicFaker } from '@faker-js/faker/locale/ar'\nimport { faker as englishFaker } from '@faker-js/faker/locale/en'\nimport { faker as germanFaker } from '@faker-js/faker/locale/de'\nimport { faker as czechFaker } from '@faker-js/faker/locale/cz'\nimport { faker as spanishFaker } from '@faker-js/faker/locale/es'\nimport { faker as frenchFaker } from '@faker-js/faker/locale/fr'\nimport { faker as koreanFaker } from '@faker-js/faker/locale/ko'\nimport { faker as SwedishFaker } from '@faker-js/faker/locale/sv'\nimport { faker as ChineseFaker } from '@faker-js/faker/locale/sv'\n\nimport { saveAs } from 'file-saver'\nimport RandExp from 'randexp'\nimport JSZip from 'jszip'\nimport type {\n  FakerProp,\n  ReduxState,\n  Relation,\n  RelationProps,\n} from 'components/shared'\nimport npmCongif from '../../../../zipFileContent/package.json'\nimport apiReadme from '../../../../zipFileContent/readme.md'\nimport npmCongifGraphql from '../../../../graphqlZipContent/package.json'\nimport graphqlReadme from '../../../../graphqlZipContent/readme.md'\n\nimport { spawnWebWorker } from '../../webWorker'\nimport store from 'redux/store'\n\n// @ts-expect-error\nwindow.faker = faker\n\nexport const generate = (\n  props: FakerProp[],\n  name: string,\n  amount: number,\n  relations: Relation[],\n  relationsProps: RelationProps,\n  justReturn: boolean,\n  modelId: string,\n  onlyJSON = false,\n  overrideRelationsCount?: number\n) => {\n  if (!props) {\n    Alert.warning(`plz add some properties to this model (${name})`)\n    return\n  }\n  const atLeastOneWithoutFunc = props\n    .filter(({ func }) => !func)\n    .map(({ propName }) => propName)\n  const len = atLeastOneWithoutFunc.length\n  if (len > 0) {\n    Alert.warning(\n      `There is ${len} ${\n        len === 1 ? 'property' : 'properties'\n      } without function ${atLeastOneWithoutFunc.join(' || ')}`\n    )\n    return\n  }\n\n  if ((!window.Worker || amount < 10000 || relations) && !onlyJSON) {\n    if (amount > 10000) {\n      Alert.info(\n        'This browser do not support web workers, generating data on the main thread 🧵'\n      )\n    }\n    const res = generateFakeData(props, amount)\n    if (relations) {\n      const resWithRelations = res.map((obj) => ({\n        ...obj,\n        ...relations.reduce(\n          (prev, { name, id }: Relation) => ({\n            ...prev,\n            [name]: generateFakeData(\n              relationsProps[id],\n              overrideRelationsCount || 10\n            ),\n          }),\n          {}\n        ),\n      }))\n      if (justReturn) {\n        return resWithRelations\n      }\n      downloadData(resWithRelations, name)\n    } else {\n      if (justReturn) {\n        return res\n      }\n      downloadData(res, name)\n    }\n  } else {\n    return spawnWebWorker({\n      props,\n      amount,\n      modelId,\n      relations,\n      relationsProps,\n      locale: store.getState().locale,\n    })\n      .then((result) => {\n        const data = result.flat()\n        // see https://stackoverflow.com/questions/29175877/json-stringify-throws-rangeerror-invalid-string-length-for-huge-objects\n        // stringify-ing the whole array might cause (RangeError: Invalid string length) error\n        // which means \"Out Of Memory\"\n        const outJSON = '[' + data.map((el) => toJSONPritty(el)).join(',') + ']'\n\n        if (justReturn) {\n          return outJSON\n        }\n        saveAs(new Blob([outJSON], { type: 'application/json' }), name)\n        Alert.success(`Downloaded ${name}.json 👍`)\n      })\n      .catch((error) => {\n        console.group('Error generating data')\n        console.log('the error object')\n        console.error(error)\n        console.log('you can open an issue with this error in the link below')\n        console.log('https://github.com/Rowadz/pollux')\n        console.groupEnd()\n        Alert.success('Feels bad, we faced an error')\n      })\n  }\n}\n\nconst generateFakeData = (props: FakerProp[], amount: number) =>\n  Array.from({ length: amount }).map(() => {\n    return props.reduce(\n      (prev, { propName, groupName, func, regex: regexStr }) => {\n        if (\n          groupName === 'image' ||\n          (groupName === 'random' && func === 'image')\n        ) {\n          return {\n            ...prev,\n            [propName]: faker.helpers.arrayElement([\n              'http://placekitten.com/500/600',\n              'http://placekitten.com/1200/600',\n              'http://placekitten.com/1200/1200',\n            ]),\n          }\n        }\n        const key = func === 'fullName' ? 'findName' : func\n        if (key === 'regex') {\n          const randexp = new RandExp(regexStr as string)\n          return {\n            ...prev,\n            [propName]: randexp.gen(),\n          }\n        }\n\n        const locale = store.getState().locale\n\n        const arabic = `\n          لكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة البشرية، فلا أحد يرفض أو يكره أو يتجنب الشعور بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعرها بصورة أكثر عقلانية ومنطقية فيعرضهم هذا لمواجهة الظروف الأليمة، وأكرر بأنه لا يوجد من يرغب في الحب ونيل المنال ويتلذذ بالآلام، الألم هو الألم ولكن نتيجة لظروف ما قد تكمن السعاده فيما نتحمله من كد وأسي.\n          و سأعرض مثال حي لهذا، من منا لم يتحمل جهد بدني شاق إلا من أجل الحصول على ميزة أو فائدة؟ ولكن من لديه الحق أن ينتقد شخص ما أراد أن يشعر بالسعادة التي لا تشوبها عواقب أليمة أو آخر أراد أن يتجنب الألم الذي ربما تنجم عنه بعض المتعة ؟ \n          علي الجانب الآخر نشجب ونستنكر هؤلاء الرجال المفتونون بنشوة اللحظة الهائمون في رغباتهم فلا يدركون ما يعقبها من الألم والأسي المحتم، واللوم كذلك يشمل هؤلاء الذين أخفقوا في واجباتهم نتيجة لضعف إرادتهم فيتساوي مع هؤلاء الذين يتجنبون وينأون عن تحمل الكدح والألم .\n        `\n\n        const german = `\n            meliore persecuti Bezirksschornsteinfegermeister mel. Te oratio utamur vix. \n            Grimms Märchen eloquentiam eu per. Principes complectitur Schneewittchen no. \n            His illud moderatius ut, Milchreis pro omnis minim epicurei, natum Lebensabschnit\n            tsgefährte mel ei. Sea purto singulis danke amet, consectetur adipiscing elit, sed Berlin \n            eiusmod tempor incididunt ut labore bitte dolore magna aliqua. Ut enim Glühwein minim veniam, \n            quis nostrud exercitation Polizei laboris nisi ut aliquip ex Mercedes Benz commodo consequat. \n            Duis aute irure Riesling in reprehenderit in voluptate velit Grimms Märchen cillum dolore eu \n            fugiat nulla Currywurst Excepteur sint occaecat cupidatat non Schweinsteiger sunt in culpa \n            qui officia zu spät mollit anim id est laborum\n        `\n\n        const english = `\n            Generating random paragraphs can be an excellent way for writers to get their creative flow going at the \n            beginning of the day. The writer has no idea what topic the random paragraph will be about when it appears. \n            This forces the writer to use creativity to complete one of three common writing challenges. The writer can \n            use the paragraph as the first one of a short story and build upon it. A second option is to use the random \n            paragraph somewhere in a short story they create. The third option is to have the random paragraph be the ending \n            paragraph in a short story. No matter which of these challenges is \n            undertaken, the writer is forced to use creativity to incorporate the paragraph into their writing.\n        `\n\n        const czech = `\n            Stařík se na útěk, šlapaje popopo po nějakých ži-živých tělech, jež se protínají a prostupují v \n            břitkých úhlech jako krystalografické modely; a proti nim vyjela dvě prudká světla, pár hlasů zavylo,\n            auto sebou smýkalo stranou a hází rukou, jako by byl čas… už by byl učinil, kdyby byl toho večera nepřišel; \n            ale přihnal se právě proto, že mu pak nechám všechno, rozuměl jste? Prosím. \n            Tak už jděte, jděte rychle, u všech – Čekal v zimničné netrpělivosti. Není… není to pro mne, je to hlas.\n        `\n\n        const spanish = `\n            Pero debo explicarte que todas estas ideas erróneas sobre denunciar el placer y glorificar el dolor ya han surgido, y te mostraré los detalles para descubrir la verdad y la base de esa felicidad humana, para sentirla de una manera más racional y lógica, y esto los expone a enfrentar las terribles circunstancias, y repito que nadie desea el amor, el logro y disfruta el dolor El dolor es dolor, pero como resultado de las circunstancias, la felicidad puede residir en lo que soportamos de trabajo y dolor.\n            Y daré un vívido ejemplo de esto, ¿quién de nosotros no ha soportado un duro esfuerzo físico excepto para obtener una ventaja o beneficio? Pero, ¿quién tiene derecho a criticar a alguien que quería sentir felicidad sin consecuencias dolorosas, oa alguien que quería evitar el dolor que podría resultar en algún placer?\n            Por otro lado, deploramos y denunciamos a aquellos hombres que se dejan fascinar por el éxtasis del momento, que vagan en sus deseos y no se dan cuenta del dolor y la tristeza inevitables que les siguen. un resultado de la debilidad de su voluntad, igual a aquellos que evitan y se niegan a soportar el trabajo y el dolor.\n        `\n\n        const french = `\n            Mais je dois vous expliquer que toutes ces idées fausses sur la dénonciation du plaisir et la glorification de la douleur ont déjà surgi, et je vais vous montrer les détails pour découvrir la vérité et la base de ce bonheur humain. cela les expose à faire face à des circonstances désastreuses, et je répète que personne ne désire l'amour, l'accomplissement et n'apprécie la douleur. La douleur est la douleur, mais en raison des circonstances, le bonheur peut résider dans ce que nous endurons de labeur et de chagrin.\n            Et je donnerai un exemple frappant de cela, qui parmi nous n'a pas enduré un dur effort physique, sauf pour obtenir un avantage ou un bénéfice ? Mais qui a le droit de critiquer quelqu'un qui a voulu ressentir le bonheur sans conséquences douloureuses, ou quelqu'un qui a voulu éviter la douleur qui pourrait résulter en un certain plaisir ?\n            D'autre part, nous déplorons et dénonçons ces hommes fascinés par l'extase du moment, qui errent dans leurs désirs et ne se rendent pas compte de la douleur et du chagrin inévitables qui les suivent. un résultat de la faiblesse de leur volonté, égal à ceux qui évitent et refusent de supporter le labeur et la douleur.\n        `\n\n        const korean = `\n          그러나 쾌락을 비난하고 고통을 미화하는 것에 대한 이러한 모든 오해가 이미 발생했다는 점을 설명해야 하며, 그 인간의 행복의 진실과 근거를 발견하기 위해 세부 사항을 보여드리겠습니다. 이것은 그들을 끔찍한 상황에 직면하게 하고, 사랑, 성취, 고통을 원하는 사람은 아무도 없다는 것을 반복합니다. 고통은 고통이지만 상황의 결과로 우리가 수고와 슬픔을 견디는 데 행복이 있을 수 있습니다.\n          그리고 나는 이것에 대한 생생한 예를 들어 드리겠습니다. 우리 중 어떤 사람이 이익이나 이익을 위해서 외에는 힘든 육체 노동을 견디지 못했습니까? 그러나 고통스러운 결과 없이 행복을 느끼고 싶어하는 사람이나 약간의 즐거움을 가져올 수 있는 고통을 피하고 싶어하는 사람을 누가 비난할 권리가 있습니까?\n          한편, 순간의 황홀함에 매료되어 욕망에 방황하며, 그에 따른 피할 수 없는 고통과 슬픔을 깨닫지 못하는 사람들을 한탄하고 질책합니다. 수고와 고통을 피하고 견디기를 거부하는 사람들과 마찬가지로 의지가 약하기 때문입니다.\n        `\n\n        const swedish = `\n            Men jag måste förklara för dig att alla dessa missuppfattningar om att fördöma njutning och förhärliga smärta redan har uppstått, och jag kommer att visa dig detaljerna för att upptäcka sanningen och grunden för den mänskliga lyckan. För att känna den på ett mer rationellt och logiskt sätt, och detta utsätter dem för att möta de hemska omständigheterna, och jag upprepar att ingen önskar kärlek, uppnående och åtnjuter smärta. Smärta är smärta, men som ett resultat av omständigheterna kan lyckan ligga i det vi uthärdar av slit och sorg.\n            Och jag ska ge ett levande exempel på detta, vem av oss har inte utstått hård fysisk ansträngning förutom för att få en fördel eller fördel? Men vem har rätt att kritisera någon som ville känna lycka utan smärtsamma konsekvenser, eller någon som ville undvika smärtan som kan resultera i något nöje?\n            Å andra sidan beklagar och fördömer vi de män som fascineras av ögonblickets extas, som vandrar i sina begär och inte inser den oundvikliga smärta och sorg som följer dem.Klandern omfattar även de som misslyckats med sina plikter som ett resultat av deras viljas svaghet, lika med dem som undviker och vägrar att bära slit och smärta.\n        `\n\n        const chinese = `\n          但我必须向你解释，所有这些关于谴责快乐和颂扬痛苦的误解已经出现，我将向你展示细节，以发现人类幸福的真相和基础。以更理性和合乎逻辑的方式感受它，以及这使他们面临着可怕的境遇，我再说一遍，没有人渴望爱、成就和享受痛苦。痛苦就是痛苦，但由于境遇，幸福可能在于我们所忍受的辛劳和悲伤。\n          我再举一个生动的例子，我们当中有谁没有为了获得优势或利益而忍受过艰苦的体力劳动？但是，谁有权批评一个想要在没有痛苦后果的情况下获得幸福的人，或者一个想要避免可能带来一些快乐的痛苦的人呢？\n          另一方面，我们谴责和谴责那些沉迷于当下的狂喜，在欲望中徘徊而没有意识到随之而来的不可避免的痛苦和悲伤的人。意志薄弱的结果，等于回避和拒绝承受劳苦和痛苦的人。\n        `\n\n        const strToUse = {\n          ar: arabic,\n          de: german,\n          en: english,\n          cz: czech,\n          es: spanish,\n          fr: french,\n          ko: korean,\n          zh_CN: chinese,\n          sv: swedish,\n        }\n\n        const fakerToUse = {\n          ar: arabicFaker,\n          de: germanFaker,\n          en: englishFaker,\n          cz: czechFaker,\n          es: spanishFaker,\n          fr: frenchFaker,\n          ko: koreanFaker,\n          zh_CN: ChineseFaker,\n          sv: SwedishFaker,\n        }\n\n        // this check to make sure we are backward compatable with the old saved models\n        const keyProxy = key === 'number' ? 'numeric' : key\n        return {\n          ...prev,\n          // this check to make sure we are backward compatable with the old saved models\n          [propName]:\n            groupName === 'random' && key === 'uuid'\n              ? // @ts-ignore\n                faker.datatype.uuid()\n              : keyProxy === 'paragraph' || keyProxy === 'paragraphs'\n              ? // @ts-ignore\n                strToUse[locale].substring(\n                  0,\n                  keyProxy === 'paragraphs' ? Number.POSITIVE_INFINITY : 100\n                )\n              : // @ts-ignore\n                fakerToUse[locale][groupName][keyProxy](),\n        }\n      },\n      {}\n    )\n  })\n\nconst downloadData = (data: unknown[], name: string): void => {\n  saveAs(new Blob([toJSONPritty(data)], { type: 'application/json' }), name)\n  Alert.success(`Downloaded ${name}.json 👍`)\n}\n\nconst toJSONPritty = (data: any): string => JSON.stringify(data, null, 2)\n\nexport const relationsPropsGetter = (\n  state: Pick<ReduxState, 'prop' | 'relations'>,\n  modelId: string\n) =>\n  (state.relations[modelId] || []).reduce(\n    (prev, id) => ({ ...prev, [id]: state.prop[id] }),\n    {}\n  )\n\nexport const relationsGetter = (\n  state: Pick<ReduxState, 'models' | 'relations'>,\n  modelId: string\n): Relation[] =>\n  (state.relations[modelId] || []).map((uuid) =>\n    state.models.find(({ id }) => uuid === id)\n  ) as Relation[]\n\nexport const generateAPI = async (\n  name: string,\n  props: FakerProp[] | null,\n  amount: number | null = 10,\n  relations: Relation[] | null,\n  relationsProps: RelationProps | null,\n  data: unknown[] | null | unknown,\n  auth?: boolean,\n  modelId?: string\n) => {\n  try {\n    if (!props && !data) {\n      Alert.warning(`plz add some properties to this model (${name})`)\n      return\n    }\n    const zip = new JSZip()\n    zip.file('package.json', toJSONPritty(npmCongif(auth)))\n    zip.file(\n      'db.json',\n      toJSONPritty(\n        data\n          ? data\n          : {\n              [name]: generate(\n                props as FakerProp[],\n                name,\n                amount as number,\n                relations as Relation[],\n                relationsProps as RelationProps,\n                true,\n                modelId as string\n              ),\n            }\n      )\n    )\n    zip.file('README.md', apiReadme(name))\n    zip.file('routes.json', toJSONPritty({ [name]: 660 }))\n    const zipContent = await zip.generateAsync({ type: 'blob' })\n    saveAs(zipContent, 'pollux-api.zip')\n    Alert.success(`Downloaded pollux-api.zip 👍`)\n  } catch (error) {\n    Alert.error(\n      'Something went wrong while generating your API, please checkout the console'\n    )\n    console.group('Error generating the API')\n    console.log('the error object')\n    console.error(error)\n    console.log('you can open an issue with this error in the link below')\n    console.log('https://github.com/Rowadz/pollux')\n    console.groupEnd()\n  }\n}\n\nexport const generateGraphqlAPI = async (\n  name: string,\n  props: FakerProp[],\n  amount: number,\n  relations: Relation[],\n  relationsProps: RelationProps,\n  modelId: string\n) => {\n  try {\n    if (!props) {\n      Alert.warning(`plz add some properties to this model (${name})`)\n      return\n    }\n    const zip = new JSZip()\n    zip.file('package.json', toJSONPritty(npmCongifGraphql()))\n    const jsonStr = await generate(\n      props,\n      name,\n      amount,\n      relations,\n      relationsProps,\n      true,\n      modelId,\n      true\n    )\n\n    zip.file('db.json', '{\"' + name + '\":' + jsonStr + '}')\n    zip.file('README.md', graphqlReadme(name))\n\n    const zipContent = await zip.generateAsync({ type: 'blob' })\n    saveAs(zipContent, 'pollux-graphql.zip')\n\n    Alert.success(`Downloaded pollux-graphql.zip 👍`)\n  } catch (error) {\n    Alert.error(\n      'Something went wrong while generating your API, please checkout the console'\n    )\n    console.group('Error generating the GraphQL API')\n    console.log('the error object')\n    console.error(error)\n    console.log('you can open an issue with this error in the link below')\n    console.log('https://github.com/Rowadz/pollux')\n    console.groupEnd()\n  }\n}\n","export default () => ({\n  description: 'The file is generated using https://rowadz.github.io/pollux/',\n  scripts: {\n    dev: 'json-graphql-server db.json --p 3001',\n  },\n  author: 'Rowadz',\n  license: 'MIT',\n  dependencies: {\n    'json-graphql-server': '^2.3.1',\n  },\n})\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { FlexboxGrid, Progress } from 'rsuite'\nimport { useSelector } from 'react-redux'\nimport { eventEmitter } from 'components/generate/webWorker/eventEmitter'\nimport type { ReduxState, Relation } from 'components/shared'\n\ntype WebWorkerProgressProps = {\n  modelId: string\n  relations: Relation[]\n}\n\nconst WebWorkerProgress = ({ modelId, relations }: WebWorkerProgressProps) => {\n  const [generated, setGenereated] = useState(0)\n  const [startedWorkersCount, setStartedWorkersCount] = useState(0)\n  const [currentWebWorkerModelId, setModelId] = useState('')\n  // const [started, setStarted] = useState(false)\n  const modelSelector = useCallback(\n    (state: ReduxState) => state.models.filter(({ id }) => id === modelId)[0],\n    [modelId]\n  )\n\n  const relCount = relations.reduce((prev, { amount }) => prev + amount, 0)\n  const model = useSelector(modelSelector)\n  const totalNumberOfDocumentsToBeGenerated = relCount\n    ? model?.amount * relCount\n    : model?.amount\n\n  useEffect(() => {\n    eventEmitter.on('DOCUMENT_GENERATED', () => {\n      setGenereated((prev) => prev + 1)\n    })\n    eventEmitter.on(\n      'STARTED',\n      (() => {\n        const maxWorkers = navigator.hardwareConcurrency || 4\n        let counter = 0\n        return ({ modelId }) => {\n          counter++\n          setStartedWorkersCount((prev) => prev + 1)\n          // setStarted(true)\n          setModelId(modelId)\n          if (counter === maxWorkers) {\n            setTimeout(() => setGenereated(0), 1000)\n            counter = 0\n          }\n        }\n      })()\n    )\n    eventEmitter.on(\n      'STOPPED',\n      (() => {\n        const maxWorkers = navigator.hardwareConcurrency || 4\n        let counter = 0\n        return () => {\n          counter++\n          // means that all the workers are done\n          if (counter === maxWorkers) {\n            setTimeout(() => setGenereated(0), 1000)\n            setTimeout(() => setStartedWorkersCount(0), 1000)\n            counter = 0\n          } else {\n            setStartedWorkersCount((prev) => prev - 1)\n          }\n        }\n      })()\n    )\n  }, [])\n\n  if (!generated || currentWebWorkerModelId !== modelId) {\n    return null\n  }\n\n  return (\n    <FlexboxGrid justify=\"center\" style={{ marginTop: '1rem' }}>\n      <FlexboxGrid.Item>\n        <FlexboxGrid\n          justify=\"center\"\n          style={{ flexDirection: 'column' }}\n          align=\"middle\"\n        >\n          <div>\n            Data denerated <b>{generated?.toLocaleString() || generated}</b> /{' '}\n            {totalNumberOfDocumentsToBeGenerated?.toLocaleString() ||\n              totalNumberOfDocumentsToBeGenerated}\n          </div>\n          <div style={{ width: 80 }}>\n            <Progress.Circle\n              percent={\n                +(\n                  (generated / totalNumberOfDocumentsToBeGenerated) *\n                  100\n                ).toFixed(2)\n              }\n              status={\n                generated === totalNumberOfDocumentsToBeGenerated\n                  ? 'success'\n                  : 'active'\n              }\n            />\n          </div>\n        </FlexboxGrid>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item style={{ flexGrow: 0.4 }} />\n      <FlexboxGrid.Item>\n        <FlexboxGrid\n          justify=\"center\"\n          style={{ flexDirection: 'column' }}\n          align=\"middle\"\n        >\n          <div>\n            Workers running <b>{startedWorkersCount}</b> /{' '}\n            {navigator.hardwareConcurrency || 4}\n          </div>\n          <div style={{ width: 80, marginLeft: 20 }}>\n            <Progress.Circle\n              strokeColor=\"#ffc107\"\n              showInfo={false}\n              percent={Math.floor(\n                (startedWorkersCount / (navigator.hardwareConcurrency || 4)) *\n                  100\n              )}\n            />\n          </div>\n        </FlexboxGrid>\n      </FlexboxGrid.Item>\n    </FlexboxGrid>\n  )\n}\n\nexport default WebWorkerProgress\n","import React, { memo } from 'react'\nimport { useDrop } from 'react-dnd'\nimport { v4 } from 'uuid'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { justAddProp, toggleBuilderAction } from 'redux/actions'\nimport { SiGraphql } from 'react-icons/si'\nimport {\n  Tag,\n  Whisper,\n  Tooltip,\n  Badge,\n  IconButton,\n  Panel,\n  Icon,\n  Alert,\n  Button,\n} from 'rsuite'\nimport type { ModelHeaderProps } from './types'\nimport type { FakerPolluxReduxStoreState, ReduxState } from 'components/shared'\n\nexport const ModelHeader = ({\n  id,\n  name,\n  faker,\n  isTourOpen,\n  propsCount,\n  generateGraphQl,\n  generate,\n  checkedModels,\n  openCreateRelModal,\n  disableModalControllers,\n}: ModelHeaderProps) => {\n  const dispatch = useDispatch()\n  const isOpen: boolean = useSelector(\n    (state: ReduxState) => state.builder.isOpen\n  )\n\n  const toggle = () => {\n    dispatch(toggleBuilderAction(!isOpen))\n  }\n\n  const [{ canDrop, hovered }, drop] = useDrop({\n    accept: [\n      'UUID',\n      'Email',\n      'Password',\n      'Full Name',\n      'Paragraphs',\n      'REGEX',\n      'Paragraph',\n      'IP',\n      'Image',\n      ...faker.map(({ groupName }: FakerPolluxReduxStoreState) => groupName),\n    ], // TODO:: why hardcoded\n    canDrop() {\n      return true\n    },\n    collect(monitor) {\n      return {\n        canDrop: monitor && monitor.canDrop(),\n        hovered: monitor && monitor.isOver(),\n      }\n    },\n    drop({ data }: any) {\n      dispatch(justAddProp({ uuid: id, props: [{ ...data, id: v4() }] } as any))\n      Alert.success(`Added the ${data.propName} props`)\n    },\n  })\n\n  return (\n    <>\n      Model name {name}\n      {\n        <Tag\n          color=\"cyan\"\n          style={{ marginLeft: '5px' }}\n          id={isTourOpen ? 'prop-tag-count' : null}\n        >\n          {propsCount}\n        </Tag>\n      }\n      <Whisper\n        placement=\"right\"\n        trigger=\"hover\"\n        speaker={\n          <Tooltip>\n            Click here to create a relationship with other models\n          </Tooltip>\n        }\n      >\n        {checkedModels.size ? (\n          <Badge content={checkedModels.size}>\n            <IconButton\n              disabled={disableModalControllers}\n              id={isTourOpen ? 'create-a-relationship-btn' : null}\n              icon={<Icon icon=\"link\" />}\n              style={{ marginLeft: '5px' }}\n              size=\"xs\"\n              onClick={openCreateRelModal}\n            >\n              Create 1:m relations\n            </IconButton>\n          </Badge>\n        ) : (\n          <IconButton\n            id={isTourOpen ? 'create-a-relationship-btn' : null}\n            icon={<Icon icon=\"link\" />}\n            style={{ marginLeft: '5px' }}\n            size=\"xs\"\n            disabled={disableModalControllers}\n            onClick={openCreateRelModal}\n          >\n            Create 1:m relations\n          </IconButton>\n        )}\n      </Whisper>\n      <Whisper\n        placement=\"right\"\n        trigger=\"hover\"\n        speaker={\n          <Tooltip>\n            Click here to generate a json-server API from this model\n          </Tooltip>\n        }\n      >\n        <IconButton\n          id={isTourOpen ? 'create-a-api-btn' : null}\n          icon={<Icon icon=\"twinkle-star\" />}\n          size=\"xs\"\n          disabled={disableModalControllers}\n          style={{ marginLeft: '5px' }}\n          onClick={generate}\n        >\n          Generate Restful API\n        </IconButton>\n      </Whisper>\n      <Whisper\n        placement=\"right\"\n        trigger=\"hover\"\n        speaker={\n          <Tooltip>\n            Click here to generate a GraphQL API from this model\n          </Tooltip>\n        }\n      >\n        <IconButton\n          id={isTourOpen ? 'create-a-graphql-btn' : null}\n          icon={\n            <i className=\"rs-icon\">\n              <SiGraphql color=\"#dd34a6\" />\n            </i>\n          }\n          size=\"xs\"\n          disabled={disableModalControllers}\n          style={{ marginLeft: '5px' }}\n          onClick={generateGraphQl}\n        >\n          Generate GraphQL API\n        </IconButton>\n      </Whisper>\n      <div ref={drop}>\n        <Panel\n          shaded\n          style={{\n            backgroundColor: hovered ? '#8BCAD9' : canDrop ? '#5E6D8C' : '',\n            height: 50,\n            marginTop: 10,\n            color: hovered ? '#000' : '#fff',\n          }}\n        >\n          <Badge style={{ background: '#1b9cb0' }} /> Drop Properties Here{' '}\n          <Badge style={{ background: '#1b9cb0' }} />\n          <Button\n            size=\"xs\"\n            appearance=\"ghost\"\n            onClick={toggle}\n            style={{ marginLeft: '1rem' }}\n          >\n            <b>Open the Properties picker (the builder)</b>\n          </Button>\n        </Panel>\n      </div>\n    </>\n  )\n}\n\nexport default memo(ModelHeader)\n","import { createSelector } from 'reselect'\nimport {\n  FakerPolluxReduxStoreState,\n  FakerPropMap,\n  Model,\n  ReduxState,\n  Relation,\n  RelationsMap,\n} from './types'\n\nexport const selectModel = createSelector(\n  [\n    (state: ReduxState) => state.models,\n    (_: Model[], modelId: string) => modelId,\n  ],\n  (models: Model[], modelId: string) =>\n    models.filter(({ id }) => id === modelId)[0] as Model\n)\n\nexport const selectProps = createSelector(\n  [\n    (state: ReduxState) => state.prop,\n    (_: ReduxState, modelId: string) => modelId,\n  ],\n  (propsMap: FakerPropMap, modelId: string) => propsMap[modelId]\n)\n\ntype RealtionsMaps = { relations: RelationsMap; models: Model[] }\n\nexport const selectRelations = createSelector(\n  (state: ReduxState) => ({ relations: state.relations, models: state.models }),\n  (_: RealtionsMaps, modelId: string) => modelId,\n  (state: RealtionsMaps, modelId: string) =>\n    (state.relations[modelId] || []).map((uuid) =>\n      state.models.find(({ id }) => uuid === id)\n    ) as Relation[]\n)\n\ntype RealtionsPropsMap = { relations: RelationsMap; prop: FakerPropMap }\n\nexport const selectRelationsProps = createSelector(\n  (state: ReduxState) => ({ relations: state.relations, prop: state.prop }),\n  (_: RealtionsPropsMap, modelId: string) => modelId,\n  (state: RealtionsPropsMap, modelId: string) =>\n    (state.relations[modelId] || []).reduce(\n      (prev, id) => ({ ...prev, [id]: state.prop[id] }),\n      {}\n    ) as FakerPropMap\n)\n\nexport const selectPropsCount = createSelector(\n  (state: ReduxState) => state.prop,\n  (_: ReduxState, modelId: string) => modelId,\n  (fakerPropMap: FakerPropMap, modelId: string) =>\n    fakerPropMap[modelId]?.length || 0\n)\n\nexport const selectCheckedModels = createSelector(\n  (state: ReduxState) => state.relations,\n  (_: RelationsMap, modelId: string) => modelId,\n  (relationsMap: RelationsMap, modelId: string) =>\n    new Set(relationsMap[modelId] || [])\n)\n\nexport const selectFakerList = (state: ReduxState) =>\n  state.faker as FakerPolluxReduxStoreState[]\n\nexport const selectAuth = (state: ReduxState) => state.auth\n","// @ts-ignore\nimport { jsonToSchema } from '@walmartlabs/json-to-simple-graphql-schema/lib'\n// @ts-ignore\nimport { formatSdl } from 'format-graphql'\nimport { FakerProp } from 'components/shared'\nimport {\n  generate,\n  relationsGetter,\n  relationsPropsGetter,\n} from 'components/generate/components/Controller/util'\nimport { FakerPropMap, Model, RelationsMap } from './types'\nimport { Alert } from 'rsuite'\n\nconst toModelTypeName = (modelName: string) =>\n  modelName.charAt(0).toUpperCase() + modelName.slice(1)\n\nexport const toGraphQl = (\n  modelProps: FakerProp[] | null | undefined,\n  modelName: string\n) => {\n  if (!modelProps || !modelProps.length) {\n    Alert.warning('Pelase add some properties to the model.')\n    return ''\n  }\n\n  // prettier-ignore\n  const [fakeObj] = generate(modelProps, 'TO_GRAPH_QL', 1, [], {}, true, '') as {}[]\n  const fakeJSON = JSON.stringify({ [modelName]: fakeObj })\n  const graphQlStr: string = formatSdl(\n    jsonToSchema({ jsonInput: fakeJSON }).value\n  )\n  const modelTypeName = toModelTypeName(modelName)\n\n  return graphQlStr\n    .replaceAll('id: String', 'id: ID')\n    .replaceAll(\n      `type AutogeneratedMainType {\\n  ${modelName}: ${modelTypeName}\\n}`,\n      ''\n    )\n    .trim()\n}\n\nexport const toGraphQlManyModels = (\n  models: Model[],\n  prop: FakerPropMap,\n  relations: RelationsMap\n) => {\n  const fakeData = models.reduce(\n    (prev, { name, id }) => ({\n      ...prev,\n      // fuck me that's ugly\n      [name]: generate(\n        prop[id],\n        name,\n        1,\n        relationsGetter({ relations, models }, id),\n        relationsPropsGetter({ relations, prop }, id),\n        true,\n        id,\n        false,\n        1\n      ),\n    }),\n    {}\n  )\n\n  if (!Object.keys(fakeData).length) {\n    Alert.warning('Pelase add some models first.')\n    return ''\n  }\n  const fakeJSON = JSON.stringify(fakeData)\n  const graphqlStr: string = formatSdl(\n    jsonToSchema({ jsonInput: fakeJSON }).value\n  ).replaceAll('id: String', 'id: ID')\n\n  // for anyone in the future this package will generate this type\n\n  // type AutogeneratedMainType {\n  //   posts: [Posts]\n  //   users: [Users]\n  // }\n\n  // I don't want that, and the model names should be sorted so the builded string\n  // is equal to the one generated from the package.\n\n  let autogeneratedMainType = `type AutogeneratedMainType {`\n\n  models\n    .map<string>(({ name }) => name)\n    .sort()\n    .forEach((name: string) => {\n      const modelTypeName = toModelTypeName(name)\n      autogeneratedMainType += `\\n  ${name}: [${modelTypeName}]`\n    })\n  autogeneratedMainType += `\\n}`\n\n  return graphqlStr.replace(autogeneratedMainType.trim(), '').trim()\n}\n","import React, { memo } from 'react'\nimport { SiJavascript, SiPython, SiPhp, SiRuby } from 'react-icons/si'\nimport { DiMysql } from 'react-icons/di'\n\nconst RenderLangIcon = ({ lang }) => {\n  return (\n    <>\n      {lang === 'php' && <SiPhp color=\"#474A8A\" />}\n      {lang === 'python' && <SiPython color=\"#34709f\" />}\n      {lang === 'javascript' && <SiJavascript color=\"#e8d44d\" />}\n      {lang === 'ruby' && <SiRuby color=\"#e51521\" />}\n      {lang === 'sql' && <DiMysql color=\"#F2913D\" />}\n    </>\n  )\n}\n\nexport default memo(RenderLangIcon)\n","import React, { useEffect, useState, memo } from 'react'\nimport { Button, Modal, Alert, IconButton, Icon } from 'rsuite'\nimport { generate } from '../../util'\nimport RenderLangIcon from './RenderLangIcon'\nimport CodeMirror from '@uiw/react-codemirror'\nimport { githubDark } from '@uiw/codemirror-theme-github'\nimport { javascript } from '@codemirror/lang-javascript'\n\nimport { format } from 'sql-formatter'\n\n// @ts-ignore\nimport json2php from 'json2php'\nimport dayjs from 'dayjs'\nimport { Lang } from './types'\nimport { shallowEqual, useSelector } from 'react-redux'\nimport {\n  FakerProp,\n  Model,\n  ReduxState,\n  Relation,\n  RelationProps,\n  selectModel,\n  selectProps,\n  selectRelations,\n  selectRelationsProps,\n} from 'components/shared'\n\nconst formatRuby = (data: number | Date) =>\n  typeof data === 'number'\n    ? data\n    : dayjs(data).isValid()\n    ? `'${dayjs(data).toISOString()}'`\n    : `'${data}'`\n\ntype CodeGeneratorProps = {\n  modelId: string\n  lang: Lang\n  toggleShowModal: () => any\n}\n\nconst CodeGenerator = ({\n  modelId,\n  lang,\n  toggleShowModal,\n}: CodeGeneratorProps) => {\n  const model: Model = useSelector<ReduxState, Model>(\n    (state: ReduxState) => selectModel(state as any, modelId),\n    shallowEqual\n  )\n\n  const modelProps: FakerProp[] = useSelector(\n    (state: ReduxState) => selectProps(state, modelId),\n    shallowEqual\n  )\n\n  const relations: Relation[] = useSelector(\n    (state: ReduxState) => selectRelations(state, modelId),\n    shallowEqual\n  )\n\n  const relationsProps: RelationProps[] = useSelector<\n    ReduxState,\n    RelationProps[]\n  >(\n    // @ts-expect-error\n    (state) => selectRelationsProps(state, relations),\n    shallowEqual\n  )\n\n  const [code, setCode] = useState('')\n  useEffect(() => {\n    const data =\n      generate(\n        modelProps,\n        model.name,\n        model.amount > 10_000 ? 10_000 : model.amount,\n        relations,\n        // @ts-expect-error\n        relationsProps,\n        true,\n        modelId\n      ) || []\n\n    if (lang === 'javascript') {\n      setCode(`const data = ${JSON.stringify(data, null, 2)};`)\n    } else if (lang === 'php') {\n      const phpArrayStr = json2php(JSON.parse(JSON.stringify(data, null, 2)))\n      const phpArrayStrWithNewLines = `${phpArrayStr};`\n        .replaceAll('array(array', 'array(\\n array')\n        .replaceAll('),', '), \\n')\n        .replaceAll(',', ', \\n')\n        .replace('));', ')\\n );')\n      setCode(`$data = ${phpArrayStrWithNewLines}`)\n    } else if (lang === 'ruby') {\n      // prettier-ignore\n      // @ts-expect-error\n      const rubyCode = data.map(obj => {\n            return `{` + Object.keys(obj).reduce(\n                (prev, curr) => `${curr}: ${isNaN(obj[curr]) ? `'${obj[curr]}'` : formatRuby(obj[curr]) }, ${prev}`, '') + `}`\n                // @ts-expect-error\n        }).map(str => {\n            const lastIndexOf = str.lastIndexOf(', ')\n            return str.slice(0, lastIndexOf) + str.slice(lastIndexOf + 2)\n        }).join(',\\n').replaceAll(',', ', \\n')\n\n      setCode(`[\\n${rubyCode}\\n]`)\n    } else if (lang === 'python') {\n      setCode(`data = ${JSON.stringify(data, null, 2)}`)\n    } else if (lang === 'sql') {\n      const data =\n        generate(\n          modelProps,\n          model.name,\n          model.amount > 10_000 ? 10_000 : model.amount,\n          relations,\n          // @ts-expect-error\n          relationsProps,\n          true,\n          modelId\n        ) || []\n\n      const values = (data as Record<string, any>[]).map(Object.values)\n      const res = []\n      for (const list of values) {\n        let str = '( '\n        for (const [index, value] of (list as Record<string, any>).entries()) {\n          const comma = index === list.length - 1 ? ' ' : ', '\n          if (isNaN(value)) {\n            str += `\"${value}\"${comma}`\n          } else {\n            str += `${formatRuby(value)}${comma}`\n          }\n        }\n        str += ')'\n        res.push(str)\n      }\n      const sqlValues = res.join(', ')\n      const sql = `\n          INSERT INTO ${model.name} \n          VALUES ${sqlValues}\n        `\n      setCode(format(sql))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Modal size=\"lg\" full show={true} onHide={toggleShowModal}>\n      <Modal.Header>\n        <Modal.Title>\n          Copy this <RenderLangIcon lang={lang} /> code\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ height: 700, overflow: 'hidden' }}>\n        <IconButton\n          appearance=\"ghost\"\n          style={{ marginBottom: '5px' }}\n          icon={<Icon icon=\"copy-o\" />}\n          onClick={() => {\n            navigator.clipboard\n              .writeText(code)\n              .then(() => {\n                Alert.info('Copied!')\n              })\n              .catch((error) => {\n                console.error(error)\n                Alert.error('Error')\n              })\n          }}\n        >\n          Copy\n        </IconButton>\n\n        <CodeMirror\n          extensions={[javascript({ jsx: true })]}\n          theme={githubDark}\n          value={code}\n          height=\"300px\"\n          readOnly\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={toggleShowModal} appearance=\"subtle\">\n          close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default memo(CodeGenerator)\n","import React, { useState } from 'react'\nimport { useToggle } from 'react-use'\nimport { Button, ButtonGroup, Dropdown, Icon, IconButton } from 'rsuite'\nimport RenderLangIcon from './RenderLangIcon'\nimport { SiJavascript, SiPhp, SiPython, SiRuby } from 'react-icons/si'\nimport { DiMysql } from 'react-icons/di'\nimport CodeGenerator from './CodeGenerator'\nimport { Lang } from './types'\n\ntype LanguageSelectorProps = {\n  modelId: string\n  disableModalControllers: boolean\n}\n\nconst LanguageSelector = ({\n  disableModalControllers,\n  modelId,\n}: LanguageSelectorProps) => {\n  const [lang, setLang] = useState<Lang>('ruby')\n  const [showModal, toggleShowModal] = useToggle(false)\n  return (\n    <>\n      <ButtonGroup style={{ marginLeft: '5px' }}>\n        <Button\n          disabled={disableModalControllers}\n          onClick={toggleShowModal}\n          size=\"xs\"\n        >\n          Click here to get <RenderLangIcon lang={lang} /> code\n        </Button>\n        <Dropdown\n          disabled={disableModalControllers}\n          placement=\"bottomEnd\"\n          onSelect={setLang}\n          renderTitle={() => {\n            return (\n              <IconButton size=\"xs\" icon={<Icon icon=\"angle-double-down\" />} />\n            )\n          }}\n        >\n          <Dropdown.Item\n            eventKey=\"php\"\n            icon={<SiPhp size=\"1rem\" color=\"#474A8A\" />}\n          />\n          <Dropdown.Item\n            eventKey=\"python\"\n            icon={<SiPython size=\"1rem\" color=\"#34709f\" />}\n          />\n          <Dropdown.Item\n            eventKey=\"javascript\"\n            icon={<SiJavascript size=\"1rem\" color=\"#e8d44d\" />}\n          />\n          <Dropdown.Item\n            eventKey=\"ruby\"\n            icon={<SiRuby size=\"1rem\" color=\"#e51521\" />}\n          />\n          <Dropdown.Item\n            eventKey=\"sql\"\n            icon={<DiMysql size=\"1rem\" color=\"#F2913D\" />}\n          />\n        </Dropdown>\n      </ButtonGroup>\n      {showModal && (\n        <CodeGenerator\n          toggleShowModal={toggleShowModal}\n          modelId={modelId}\n          lang={lang}\n          key={`${showModal}-${lang}`}\n        />\n      )}\n    </>\n  )\n}\n\nexport default LanguageSelector\n","import React, { memo } from 'react'\nimport CodeMirror from '@uiw/react-codemirror'\nimport { githubDark } from '@uiw/codemirror-theme-github'\n\nimport { Alert, Icon, IconButton, Modal } from 'rsuite'\n\nconst GraphQlModel = ({\n  graphql,\n  toggleShowModal,\n}: {\n  graphql: string\n  toggleShowModal: () => any\n}) => {\n  return (\n    <>\n      <Modal size=\"lg\" full show={true} onHide={toggleShowModal}>\n        <Modal.Header>\n          <Modal.Title>Copy this GraphQL code</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ height: 700, overflow: 'hidden' }}>\n          <IconButton\n            appearance=\"ghost\"\n            style={{ marginBottom: '5px' }}\n            icon={<Icon icon=\"copy-o\" />}\n            onClick={() => {\n              navigator.clipboard\n                .writeText(graphql)\n                .then(() => {\n                  Alert.info('Copied!')\n                })\n                .catch((error) => {\n                  console.error(error)\n                  Alert.error('Error')\n                })\n            }}\n          >\n            Copy\n          </IconButton>\n          <CodeMirror theme={githubDark} value={graphql} height=\"300px\" />\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default memo(GraphQlModel)\n","import React, { memo, useState } from 'react'\nimport {\n  FakerProp,\n  ReduxState,\n  selectProps,\n  toGraphQl,\n} from 'components/shared'\nimport { SiGraphql } from 'react-icons/si'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { useToggle } from 'react-use'\nimport { addPropName } from 'redux/actions'\nimport { FlexboxGrid, Icon, IconButton, InputNumber } from 'rsuite'\nimport styled from 'styled-components'\n\nimport { generate } from '../../util'\nimport AddProp from './AddProp'\nimport LanguageSelector from './LanguageSelector'\nimport GraphQlModel from '../../GraphQlModel'\n\nconst SiGraphqlContainer = styled.i`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\ntype ModelSubHeaderProps = {\n  disableModalControllers: boolean\n  isTourOpen: boolean\n  modelName: string\n  modelId: string\n  amount: number\n  changeAmount: (val: string | number) => void\n  generate: () => ReturnType<typeof generate>\n}\n\nconst ModelSubHeader = ({\n  amount,\n  modelName,\n  modelId,\n  generate,\n  isTourOpen,\n  changeAmount,\n  disableModalControllers,\n}: ModelSubHeaderProps) => {\n  const [showModal, toggleShowModal] = useToggle(false)\n  const [graphql, setGraphQl] = useState<string>('')\n  const [showPropNameModal, toggleShowPropNameModal] = useToggle(false)\n  const dispatch = useDispatch()\n\n  const modelProps: FakerProp[] = useSelector(\n    (state: ReduxState) => selectProps(state, modelId),\n    shallowEqual\n  )\n\n  const addProp = (name: string) =>\n    dispatch(addPropName({ propName: name, uuid: modelId }))\n\n  return (\n    <FlexboxGrid justify=\"start\">\n      <FlexboxGrid.Item>\n        <IconButton\n          disabled={disableModalControllers}\n          icon={<Icon icon=\"plus\" />}\n          size=\"xs\"\n          color=\"cyan\"\n          id={isTourOpen ? 'add-attribute-btn' : null}\n          onClick={toggleShowPropNameModal}\n        >\n          <b>Add attribute</b>\n        </IconButton>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item>\n        <IconButton\n          id={isTourOpen ? 'generate-data-btn' : null}\n          style={{ marginLeft: '5px' }}\n          size=\"xs\"\n          disabled={disableModalControllers}\n          icon={<Icon icon=\"magic2\" />}\n          onClick={generate}\n        >\n          Generate JSON\n        </IconButton>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item>\n        <LanguageSelector\n          modelId={modelId}\n          disableModalControllers={disableModalControllers}\n        />\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item style={{ marginLeft: '5px' }}>\n        <InputNumber\n          size=\"xs\"\n          disabled={disableModalControllers}\n          defaultValue={`${amount}`}\n          max={1000000}\n          min={1}\n          onChange={changeAmount}\n        />\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item>\n        <IconButton\n          id={isTourOpen ? 'generate-graphql-schema-btn' : null}\n          style={{ marginLeft: '5px' }}\n          size=\"xs\"\n          disabled={disableModalControllers}\n          icon={\n            <SiGraphqlContainer className=\"rs-icon\">\n              <SiGraphql color=\"#dd34a6\" />\n            </SiGraphqlContainer>\n          }\n          onClick={() => {\n            toggleShowModal()\n            setGraphQl(toGraphQl(modelProps, modelName))\n          }}\n        />\n      </FlexboxGrid.Item>\n      {/* @ts-ignore */}\n      <AddProp\n        id={modelId}\n        showPropNameModal={showPropNameModal}\n        closeConfirmModal={toggleShowPropNameModal}\n        name={modelName}\n        addProp={addProp}\n      />\n\n      {showModal && !!graphql.length && (\n        <GraphQlModel graphql={graphql} toggleShowModal={toggleShowModal} />\n      )}\n    </FlexboxGrid>\n  )\n}\n\nexport default memo(ModelSubHeader)\n","import React, { useState, useEffect, memo, useCallback } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { useMount } from 'react-use'\nimport { Flipper, Flipped } from 'react-flip-toolkit'\nimport { Icon, IconButton, Panel, PanelGroup, Grid, Row, Col } from 'rsuite'\nimport ConfirmDel from './ConfirmDel'\nimport PropsDisplay from './PropsDisplay'\nimport CreateRel from './CreateRel'\nimport { generate, generateGraphqlAPI } from '../../util'\nimport { deleteModel, removeAllProps, updateAmount } from 'redux/actions'\nimport WebWorkerProgress from './WebWorkerProgress'\nimport { eventEmitter } from 'components/generate/webWorker/eventEmitter'\nimport ModelHeader from './ModelHeader'\n\nimport {\n  FakerPolluxReduxStoreState,\n  FakerProp,\n  Model as ModelType,\n  ReduxState,\n  selectAuth,\n  selectCheckedModels,\n  selectFakerList,\n  selectProps,\n  selectPropsCount,\n  selectRelations,\n  selectRelationsProps,\n} from 'components/shared'\nimport ModelSubHeader from './ModelSubHeader'\n\nconst Model = ({\n  model: { id, name, amount },\n  isTourOpen,\n}: {\n  model: ModelType\n  isTourOpen: boolean\n}) => {\n  const [fullScreen, setFullScreen] = useState(false)\n  const dispatch = useDispatch()\n\n  const propsCount: number = useSelector(\n    (state: ReduxState) => selectPropsCount(state, id),\n    shallowEqual\n  )\n\n  const props: FakerProp[] = useSelector(\n    (state: ReduxState) => selectProps(state, id),\n    shallowEqual\n  )\n\n  const faker: FakerPolluxReduxStoreState[] = useSelector(\n    selectFakerList,\n    shallowEqual\n  )\n\n  const checkedModels: Set<string> = useSelector((state: ReduxState) =>\n    selectCheckedModels(state as any, id)\n  )\n\n  const auth: boolean = useSelector(selectAuth)\n\n  const relations = useSelector((state: ReduxState) =>\n    selectRelations(state, id)\n  )\n\n  const relationsProps = useSelector(\n    (state: ReduxState) => selectRelationsProps(state, id),\n    shallowEqual\n  )\n\n  const [state, setState] = useState({\n    showConfirmModal: false,\n    showPropNameModal: false,\n    showCreateRel: false,\n    amount: 10,\n  })\n\n  const generateProxy = useCallback(\n    () =>\n      generate(props, name, amount, relations, relationsProps, false, id, true),\n    [props, name, amount, relations, relationsProps, id]\n  )\n\n  const generateGraphqlAPIProxy = useCallback(\n    () =>\n      generateGraphqlAPI(name, props, amount, relations, relationsProps, id),\n    [name, props, amount, relations, relationsProps, id]\n  )\n\n  useMount(() => {\n    setFullScreen((prevState) => !prevState)\n  })\n\n  const [disableModalControllers, setDisableModalControllers] = useState(false)\n\n  useEffect(() => {\n    eventEmitter.on('STARTED', () => {\n      setDisableModalControllers(true)\n    })\n    eventEmitter.on(\n      'STOPPED',\n      (() => {\n        const maxWorkers = navigator.hardwareConcurrency || 4\n        let counter = 0\n        return () => {\n          counter++\n          // means that all the workers are done\n          if (counter === maxWorkers) {\n            setDisableModalControllers(false)\n            counter = 0\n          }\n        }\n      })()\n    )\n  }, [])\n\n  const closeConfirmModal = () =>\n    setState({\n      ...state,\n      showConfirmModal: false,\n      showPropNameModal: false,\n      showCreateRel: false,\n    })\n  const openConfirmModal = () =>\n    setState({ ...state, showConfirmModal: true, showCreateRel: false })\n\n  const openCreateRelModal = () =>\n    setState({\n      ...state,\n      showConfirmModal: false,\n      showPropNameModal: false,\n      showCreateRel: true,\n    })\n\n  const del = (id: string) => {\n    closeConfirmModal()\n    dispatch(removeAllProps(id))\n    dispatch(deleteModel(id))\n  }\n\n  const changeAmount = useCallback(\n    (val: string | number) => {\n      setState((prev) => ({ ...prev, amount: +val }))\n      dispatch(updateAmount({ modelId: id, amount: val as string }))\n    },\n    [setState, dispatch, id]\n  )\n\n  return (\n    <Flipper flipKey={fullScreen}>\n      <Flipped flipId=\"square-model\">\n        <section\n          style={{\n            marginTop: 20,\n            ...(fullScreen\n              ? { width: '100%', height: '100%' }\n              : { width: 0, height: 0 }),\n          }}\n        >\n          <PanelGroup bordered>\n            <Panel\n              shaded\n              header={\n                <ModelHeader\n                  amount={amount}\n                  generate={generateProxy}\n                  generateGraphQl={generateGraphqlAPIProxy}\n                  id={id}\n                  auth={auth}\n                  checkedModels={checkedModels}\n                  disableModalControllers={disableModalControllers}\n                  faker={faker}\n                  isTourOpen={isTourOpen}\n                  name={name}\n                  openCreateRelModal={openCreateRelModal}\n                  props={props}\n                  propsCount={propsCount}\n                  relations={relations}\n                  relationsProps={relationsProps}\n                />\n              }\n            >\n              <Grid fluid>\n                <Row>\n                  <ModelSubHeader\n                    amount={amount}\n                    modelName={name}\n                    changeAmount={changeAmount}\n                    disableModalControllers={disableModalControllers}\n                    generate={generateProxy}\n                    isTourOpen={isTourOpen}\n                    modelId={id}\n                  />\n                  <Col xs={24} sm={24} md={24}>\n                    <WebWorkerProgress modelId={id} relations={relations} />\n\n                    <IconButton\n                      icon={<Icon icon=\"minus\" />}\n                      style={{ float: 'right' }}\n                      color=\"red\"\n                      disabled={disableModalControllers}\n                      size=\"xs\"\n                      circle\n                      onClick={openConfirmModal}\n                    />\n                    <ConfirmDel\n                      id={id}\n                      del={del}\n                      closeConfirmModal={closeConfirmModal}\n                      name={name}\n                      showConfirmModal={state.showConfirmModal}\n                    />\n\n                    {isTourOpen ? (\n                      ''\n                    ) : (\n                      <CreateRel\n                        showCreateRel={state.showCreateRel}\n                        id={id}\n                        close={closeConfirmModal}\n                      />\n                    )}\n                  </Col>\n                  <Col\n                    xs={24}\n                    sm={24}\n                    md={24}\n                    style={{ textAlign: 'right', marginTop: '10px' }}\n                  >\n                    <PropsDisplay\n                      id={id}\n                      modelName={name}\n                      disableModalControllers={disableModalControllers}\n                    />\n                  </Col>\n                </Row>\n              </Grid>\n            </Panel>\n          </PanelGroup>\n        </section>\n      </Flipped>\n    </Flipper>\n  )\n}\n\nexport default memo(Model)\n","import { Model as ModelType, ReduxState } from 'components/shared'\nimport React from 'react'\nimport { shallowEqual, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { Panel, PanelGroup } from 'rsuite'\nimport empty from './empty.svg'\nimport Model from './ModelsComponents/Model'\n\nconst Image = styled.img`\n    width: 100%\n    height: 200px \n`\n\ntype ModelsProps = {\n  isTourOpen: boolean\n}\n\nconst selectModels = ({ models }: ReduxState) => models\n\nconst Models = ({ isTourOpen }: ModelsProps) => {\n  const models = useSelector<ReduxState, ModelType[]>(\n    selectModels,\n    shallowEqual\n  )\n\n  return (\n    <section id=\"models-section\">\n      {isTourOpen && (\n        <Model\n          model={{ id: '', name: 'Demo', amount: 10, createdAt: Date.now() }}\n          isTourOpen={isTourOpen}\n        />\n      )}\n\n      {!isTourOpen && (\n        <PanelGroup>\n          {!!models.length &&\n            models.map((model: ModelType, i: number) => (\n              <Model model={model} key={i} isTourOpen={isTourOpen} />\n            ))}\n\n          {!!!models.length && (\n            <Panel\n              bordered\n              header=\"Add models to start!\"\n              style={{ textAlign: 'center' }}\n            >\n              <Image src={empty} loading=\"lazy\" alt=\"empty-img\" />\n            </Panel>\n          )}\n        </PanelGroup>\n      )}\n    </section>\n  )\n}\n\nexport default Models\n","export default __webpack_public_path__ + \"static/media/emptySave.088df67f.svg\";","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Checkbox } from 'rsuite'\nimport { connect } from 'react-redux'\nimport emptySave from './emptySave.svg'\nimport { Alert } from 'rsuite'\nimport { FakerPropMap, Model, ReduxState } from 'components/shared'\nconst { Header, Body, Footer, Title } = Modal\n\ntype SaveModelProps = {\n  models: Model[]\n  prop: FakerPropMap\n}\n\ntype SaveModelState = {\n  showModalSave: boolean\n  toSave: Model[]\n  modelsKey: 'models'\n}\n\nconst SaveModel = ({ models, prop }: SaveModelProps) => {\n  const [state, setState] = useState<SaveModelState>({\n    showModalSave: false,\n    toSave: [],\n    modelsKey: 'models',\n  })\n\n  const showModalSave = () =>\n    setState({ ...state, toSave: [], showModalSave: true })\n  const close = () => setState({ ...state, showModalSave: false })\n  const save = () => {\n    const toSave = models.map(({ id, ...rest }) => ({\n      props: prop[id],\n      id,\n      ...rest,\n    }))\n    const toSaveSet = new Set(toSave.map(({ id }) => id))\n    // to preserve the old models and override if the user changed the same one!\n    const saved = JSON.parse(\n      localStorage.getItem(state.modelsKey) || '[]'\n    ).filter(({ id }: Model) => !toSaveSet.has(id))\n    const realToSave = [...saved, ...toSave]\n    localStorage.setItem(state.modelsKey, JSON.stringify(realToSave))\n    Alert.success(\n      `Saved models [ ${toSave.map(({ name }) => name).join(' || ')} ]`\n    )\n  }\n  const toSave = (model: Model, checked: boolean) => {\n    if (checked) {\n      setState({ ...state, toSave: [...state.toSave, model] })\n    } else {\n      setState({\n        ...state,\n        toSave: [...state.toSave.filter(({ id }) => id !== model.id)],\n      })\n    }\n  }\n  const modelsEl = models.length ? (\n    models.map(({ name, id }) => (\n      <Checkbox name={name} onChange={toSave} key={id} value={{ name, id }}>\n        {name}\n      </Checkbox>\n    ))\n  ) : (\n    <div style={{ textAlign: 'center' }}>\n      <img src={emptySave} height=\"100\" width={'100%'} alt=\"no models img\" />\n      <p>You need to create some models to save them </p>\n    </div>\n  )\n  return (\n    <section style={{ display: 'inline' }}>\n      <IconButton\n        size=\"xs\"\n        id=\"save-model-btn\"\n        icon={<Icon icon=\"save\" />}\n        onClick={showModalSave}\n      >\n        Save Model\n      </IconButton>\n      <Modal\n        show={state.showModalSave}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>You can save a model here, then load it</Title>\n        </Header>\n        <Body>{modelsEl}</Body>\n        <Footer>\n          <Button\n            onClick={save}\n            appearance=\"primary\"\n            disabled={models.length === 0}\n          >\n            Save\n          </Button>\n          <Button onClick={close} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect(({ models, prop }: ReduxState, ownProps) => ({\n  ...ownProps,\n  models,\n  prop,\n}))(SaveModel)\n","export default __webpack_public_path__ + \"static/media/loadModels.bb062854.svg\";","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Divider } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { Alert } from 'rsuite'\nimport loadModelsEmpty from './loadModels.svg'\nimport { addModel, justAddProp } from 'redux/actions'\nconst { Header, Body, Footer, Title } = Modal\n\nconst LoadModel = ({ dispatch, models }) => {\n  const [state, setState] = useState({\n    showTheModalOfModels: false,\n    models: [],\n  })\n  const close = () => setState({ ...state, showTheModalOfModels: false })\n  const open = () =>\n    setState({\n      ...state,\n      showTheModalOfModels: true,\n      models: JSON.parse(localStorage.getItem('models')) || [],\n    })\n  const load = ({ id, name, createdAt, amount, ...props }) => {\n    // check if we already loaded the model\n    if ((models.find(({ id: modelId }) => id === modelId) || []).length === 0) {\n      dispatch(addModel({ id, name, createdAt, amount: +amount }))\n      dispatch(justAddProp({ uuid: id, ...props }))\n      Alert.info(`Loaded ${name} model 👍`)\n      close()\n    } else {\n      Alert.warning(`We already loaded ${name} - id[${id}]`)\n    }\n  }\n  return (\n    <section style={{ display: 'inline' }}>\n      <IconButton\n        id=\"load-model-btn\"\n        size=\"xs\"\n        icon={<Icon icon=\"tasks\" />}\n        onClick={open}\n      >\n        Load Model\n      </IconButton>\n      <Modal\n        show={state.showTheModalOfModels}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>Load your saved models!</Title>\n        </Header>\n        <Body>\n          {state.models.length === 0 ? (\n            <div style={{ textAlign: 'center' }}>\n              <img\n                src={loadModelsEmpty}\n                height=\"240\"\n                width={'100%'}\n                alt=\"empty models\"\n              />\n              <p>Your saved models will appear here!</p>\n            </div>\n          ) : (\n            state.models.map((m, i) => (\n              <div key={i}>\n                <h3>\n                  <strong>{m.name}</strong>\n                </h3>\n                <Button\n                  style={{ float: 'right' }}\n                  appearance=\"ghost\"\n                  onClick={() => load(m)}\n                >\n                  Click to Load {m.name}\n                </Button>\n                <pre>{JSON.stringify(m, null, 2)}</pre>\n                <Divider />\n              </div>\n            ))\n          )}\n        </Body>\n        <Footer>\n          <Button onClick={close} appearance=\"subtle\">\n            Close\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect(({ models }, ownProps) => ({\n  ...ownProps,\n  models,\n}))(LoadModel)\n","import React, { useState, useEffect } from 'react'\nimport { Grid, Row, Col, IconButton, Icon, Alert, Toggle } from 'rsuite'\nimport Tour, { ReactourStep } from 'reactour'\nimport { connect, useDispatch } from 'react-redux'\nimport { enableAuth, disableAuth } from 'redux/actions'\nimport { AddModelBtn, Models, SaveModel, LoadModel } from './components'\nimport {\n  relationsPropsGetter,\n  generate,\n  relationsGetter,\n  generateAPI,\n} from './util'\nimport {\n  FakerPropMap,\n  Model,\n  ReduxState,\n  RelationsMap,\n  toGraphQlManyModels,\n} from 'components/shared'\nimport { SiGraphql } from 'react-icons/si'\nimport GraphQlModel from './GraphQlModel'\nimport { useToggle } from 'react-use'\n\nconst mapSteps = (obj: ReactourStep) => ({\n  ...obj,\n  style: {\n    color:\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? '#f7f7fa'\n        : '#0f131a',\n    backgroundColor:\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? '#0f131a'\n        : '#f7f7fa',\n  },\n})\n\nlet steps: ReactourStep[] = [\n  {\n    selector: '#add-prototype-btn',\n    content: 'Click here to create new model aka prototype',\n  },\n  {\n    selector: '#save-model-btn',\n    content: `Click here to save models after you create them ( they are saved in your localstorage - hope you don't mind :p )`,\n  },\n  {\n    selector: '#load-model-btn',\n    content: 'Click here to load your saved models after you save them',\n  },\n  {\n    selector: '#create-a-api-btn-for-all',\n    content: () => (\n      <>\n        <p>\n          Click here to generate an API with all the models in the model section\n          (this might take some time....).\n        </p>\n        <p>After generation you just need to</p>\n        <ul>\n          <li>unzip the folder</li>\n          <li>`cd pollux-api`</li>\n          <li>`npm i`</li>\n        </ul>\n        <p>then you are done</p>\n      </>\n    ),\n  },\n  {\n    selector: '#create-a-graphql-schema-btn-for-all',\n    content: () => (\n      <p>Click here to generate an GraphQL schema for all the models</p>\n    ),\n  },\n  {\n    selector: '#enable-jwt-auth',\n    content: () => (\n      <p>Toggle this to enable/disable JWT auth to any generated API</p>\n    ),\n  },\n  {\n    selector: '#models-section',\n    content: 'An empty model',\n  },\n  {\n    selector: '#add-attribute-btn',\n    content: 'Click here to add properties (props) to this model',\n  },\n  {\n    selector: '#prop-tag-count',\n    content:\n      'This number shows the number of properties (props) this models have',\n  },\n  {\n    selector: '#generate-data-btn',\n    content: 'Click here to generate this model data with its related models',\n  },\n  {\n    selector: '#create-a-relationship-btn',\n    content: 'Click here to create a 1:m relation with another model',\n  },\n  {\n    selector: '#create-a-api-btn',\n    content: () => (\n      <>\n        <p>\n          Click here to generate a json-server API from this model, after\n          generation you just need to\n        </p>\n        <ul>\n          <li>unzip the folder</li>\n          <li>`cd pollux-api`</li>\n          <li>`npm i`</li>\n          <li>`npm run dev`</li>\n        </ul>\n        <p>then you are done</p>\n      </>\n    ),\n  },\n  {\n    selector: '#create-a-graphql-btn',\n    content: () => (\n      <>\n        <p>\n          Click here to generate a GraphQL API from this model, after generation\n          you just need to\n        </p>\n        <ul>\n          <li>unzip the folder</li>\n          <li>`cd pollux-api`</li>\n          <li>`npm i`</li>\n          <li>`npm run dev`</li>\n        </ul>\n        <p>then you are done</p>\n      </>\n    ),\n  },\n  {\n    selector: '#generate-graphql-schema-btn',\n    content: () => (\n      <p>Click here to generate a GraphQL schema for this model</p>\n    ),\n  },\n].map(mapSteps)\n\nconst generateAPIForAll = (\n  models: Model[],\n  prop: FakerPropMap,\n  relations: RelationsMap,\n  auth: boolean\n) => {\n  if (models.length === 0) {\n    Alert.warning('Plz load/create some models first')\n    return\n  }\n  const data = models.reduce((prev, { name, amount, id }) => {\n    return {\n      ...prev,\n      [name]: generate(\n        prop[id],\n        name,\n        amount,\n        relationsGetter({ relations, models }, id),\n        relationsPropsGetter({ relations, prop }, id),\n        true,\n        id\n      ),\n    }\n  }, {})\n  generateAPI(\n    models.map(({ name }) => name).join(' || '),\n    null,\n    null,\n    null,\n    null,\n    data,\n    auth\n  )\n}\n\ntype ControllerProps = {\n  models: Model[]\n  prop: FakerPropMap\n  relations: RelationsMap\n  auth: boolean\n}\n\nfunction Controller({ models, prop, relations, auth }: ControllerProps) {\n  const dispatch = useDispatch()\n  const [graphql, setGraphQl] = useState<string>('')\n  const [showModal, toggleShowModal] = useToggle(false)\n  const [isTourOpen, setIsTourOpen] = useState(false)\n  useEffect(() => {\n    window\n      .matchMedia('(prefers-color-scheme: dark)')\n      .addEventListener('change', (e) => {\n        setIsTourOpen(false)\n        steps = steps.map(mapSteps)\n      })\n  }, [])\n  return (\n    <Grid fluid>\n      <Row>\n        <Tour\n          steps={steps}\n          isOpen={isTourOpen}\n          onRequestClose={() => setIsTourOpen(false)}\n        />\n        <Col xs={24} sm={24} md={6}>\n          <AddModelBtn />\n\n          <Row style={{ marginTop: '0.5rem' }}>\n            <Col xs={8}>\n              <IconButton\n                size=\"xs\"\n                icon={<Icon icon=\"lightbulb-o\" />}\n                onClick={() => setIsTourOpen(true)}\n              >\n                Take Tour\n              </IconButton>\n            </Col>\n            <Col xs={8}>\n              <SaveModel />\n            </Col>\n            <Col xs={8}>\n              <LoadModel />\n            </Col>\n          </Row>\n          <Row style={{ marginTop: '0.5rem' }}>\n            <Col xs={24}>\n              <IconButton\n                id=\"create-a-api-btn-for-all\"\n                size=\"xs\"\n                icon={<Icon icon=\"twinkle-star\" />}\n                onClick={() => generateAPIForAll(models, prop, relations, auth)}\n              >\n                Generate Rest API with all models\n              </IconButton>\n            </Col>\n          </Row>\n          <Row style={{ marginTop: '0.5rem' }}>\n            <Col xs={24}>\n              <IconButton\n                id=\"create-a-graphql-schema-btn-for-all\"\n                size=\"xs\"\n                icon={\n                  <i className=\"rs-icon\">\n                    <SiGraphql color=\"#dd34a6\" />\n                  </i>\n                }\n                onClick={() => {\n                  toggleShowModal()\n                  setGraphQl(toGraphQlManyModels(models, prop, relations))\n                }}\n              >\n                Generate a GraphQL for all the models\n              </IconButton>\n            </Col>\n          </Row>\n\n          {showModal && !!graphql.length && (\n            <GraphQlModel graphql={graphql} toggleShowModal={toggleShowModal} />\n          )}\n          <div style={{ marginTop: '0.5rem' }} id=\"enable-jwt-auth\">\n            <Toggle\n              onChange={() => dispatch(auth ? disableAuth() : enableAuth())}\n              checkedChildren=\"Disable JWT Auth\"\n              unCheckedChildren=\"Enable JWT Auth\"\n            />\n          </div>\n        </Col>\n\n        <Col xs={24} sm={24} md={18}>\n          <Models isTourOpen={isTourOpen} />\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default connect(\n  ({ models, prop, relations, auth }: ReduxState, ownProps) => ({\n    ...ownProps,\n    models,\n    prop,\n    relations,\n    auth,\n  })\n)(Controller)\n","import React from 'react'\nimport { Controller } from './components'\nimport { Grid, Row, Col } from 'rsuite'\n\nfunction Generate() {\n  return (\n    <Grid fluid>\n      <Row style={{ margin: '1rem' }}>\n        <Col xs={24} sm={24} md={24} style={{ marginTop: '20px' }}>\n          <Controller />\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default Generate\n","// TODO:: I CAN MAP THE WHOLE FAKER LIB TO THIS!!\n// TODO:: AND GENERATE ALL THE FUNCTIONS AS A DRAG AND DROP\nexport const map = new Map([\n  ['UUID', { groupName: 'random', func: 'uuid', propName: 'id' }],\n  ['Email', { groupName: 'internet', func: 'email', propName: 'email' }],\n  ['REGEX', { groupName: 'regex', func: 'regex', propName: 'REGEX' }],\n  [\n    'Password',\n    { groupName: 'internet', func: 'password', propName: 'password' },\n  ],\n  ['Full Name', { groupName: 'name', func: 'fullName', propName: 'name' }],\n  [\n    'Paragraphs',\n    { groupName: 'lorem', func: 'paragraphs', propName: 'paragraphs' },\n  ],\n  [\n    'Paragraph',\n    { groupName: 'lorem', func: 'paragraph', propName: 'paragraph' },\n  ],\n  ['IP', { groupName: 'internet', func: 'ip', propName: 'ip' }],\n  ['Image', { groupName: 'random', func: 'image', propName: 'image' }],\n])\n","import React from 'react'\nimport { useDrag } from 'react-dnd'\nimport { List, Icon } from 'rsuite'\nimport styles from './DraggableCommonProp.module.css'\nimport { map } from 'components/Builder/maps'\n\nconst DraggableCommonProp = ({ type, icon, label, func, children }) => {\n  const [{ isDragging }, dragRef] = useDrag({\n    type,\n    item: {\n      type,\n      data: map.get(type) || { propName: label, groupName: type, func },\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  return (\n    <div ref={dragRef}>\n      <List.Item\n        className={styles.item}\n        style={{\n          cursor: isDragging && 'grabbing',\n          backgroundColor: 'transparent',\n          boxShadow: 'none',\n        }}\n      >\n        <Icon icon={icon || 'circle-o'} /> {label || type}\n        {children}\n      </List.Item>\n    </div>\n  )\n}\n\nexport default DraggableCommonProp\n","import React from 'react'\nimport { Badge, List } from 'rsuite'\nimport DraggableCommonProp from './components/DraggableCommonProp'\n\nconst CommonProps = () => {\n  return (\n    <>\n      <h4>Common Items</h4>\n      <List>\n        <DraggableCommonProp type=\"UUID\" icon=\"id-mapping\" />\n        <DraggableCommonProp type=\"Email\" icon=\"envelope\" />\n        <DraggableCommonProp type=\"REGEX\" icon=\"creative\">\n          <Badge style={{ marginLeft: '1rem' }} content=\"NEW\" />\n        </DraggableCommonProp>\n        <DraggableCommonProp type=\"Password\" icon=\"eye-slash\" />\n        <DraggableCommonProp type=\"Full Name\" icon=\"user\" />\n        <DraggableCommonProp type=\"Paragraphs\" icon=\"file-text\" />\n        <DraggableCommonProp type=\"Paragraph\" icon=\"file-text-o\" />\n        <DraggableCommonProp type=\"IP\" icon=\"circle-o\" />\n        <DraggableCommonProp type=\"Image\" icon=\"image\" />\n      </List>\n    </>\n  )\n}\n\nexport default CommonProps\n","import React, { useMemo, useState } from 'react'\nimport { connect } from 'react-redux'\nimport CommonProps from '../builderComponents/CommonProps/CommonProps'\nimport DraggableCommonProp from '../builderComponents/CommonProps/components/DraggableCommonProp'\nimport { Divider, List, Input } from 'rsuite'\n\nconst BuilderBody = ({ faker }) => {\n  const fakerObj = useMemo(() => faker, [faker])\n  const [keyword, setKeyword] = useState('')\n  return (\n    <>\n      <CommonProps />\n      <Divider />\n      <h4>Other Items</h4>\n      <Input\n        style={{ marginBottom: 10 }}\n        placeholder=\"search in faker functions!\"\n        value={keyword}\n        onChange={setKeyword}\n      />\n      <List>\n        {fakerObj\n          .filter((obj) =>\n            obj.label.toLowerCase().includes(keyword.toLowerCase())\n          )\n          .map(({ groupName, label, value: func }, index) =>\n            label === 'Faker' ? (\n              <></>\n            ) : (\n              <DraggableCommonProp\n                key={index}\n                type={groupName}\n                label={label}\n                func={func}\n              />\n            )\n          )}\n      </List>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { faker: state.faker }\n}\n\nexport default connect(mapStateToProps)(BuilderBody)\n","export const FLAGS = Object.freeze({\n  FLOW_GENERATE: false,\n})\n","export const LOCALE_MAP = {\n  en: 'English',\n  de: 'German',\n  ar: 'Arabic',\n  cz: 'Czech',\n  es: 'Spanish',\n  fr: 'French',\n  ko: 'Korean',\n  sv: 'Swedish',\n  zh_CN: 'Chinese',\n}\n","export default __webpack_public_path__ + \"static/media/wave_hello.1ad4b5ab.gif\";","import React, { useState } from 'react'\nimport { Navbar, Nav, Icon, Drawer, Badge, Dropdown } from 'rsuite'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport BuilderBody from './Builder/BuilderBody/BuilderBody'\nimport { FLAGS } from 'flags'\nimport { LOCALE_MAP } from './locale.map'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setLocaleAction, toggleBuilderAction } from 'redux/actions'\nimport { ReduxState } from './shared'\nimport waveHello from './wave_hello.gif'\n\nconst { Body } = Navbar\nconst { Item } = Nav\ntype LocalesType = keyof typeof LOCALE_MAP\n\nconst HeaderComp = () => {\n  const { pathname } = useLocation()\n  const [locale, setLocale] = useState<LocalesType>('en')\n  const dispatch = useDispatch()\n  const isOpen: boolean = useSelector(\n    (state: ReduxState) => state.builder.isOpen\n  )\n\n  const changeLocale = (newLocale: LocalesType) => {\n    // feels nasty to do this in redux and the locale state\n    setLocale(newLocale)\n    dispatch(setLocaleAction(newLocale))\n  }\n\n  const toggleShow = () => {\n    dispatch(toggleBuilderAction(!isOpen))\n  }\n\n  return (\n    <Navbar>\n      <Body>\n        <Nav>\n          <NavLink\n            to=\"/\"\n            className={(navData) => (navData.isActive ? 'active-route' : '')}\n          >\n            <Item\n              renderItem={() => (\n                <span\n                  className=\"rs-nav-item-content\"\n                  style={{ fontSize: '1rem' }}\n                >\n                  <Icon icon=\"home\" /> Pollux\n                </span>\n              )}\n            ></Item>\n          </NavLink>\n          <NavLink\n            to=\"/generate\"\n            className={(navData) => (navData.isActive ? 'active-route' : '')}\n          >\n            <Item\n              renderItem={() => {\n                return (\n                  <span\n                    className=\"rs-nav-item-content\"\n                    style={{ fontSize: '1rem' }}\n                  >\n                    <Icon icon=\"magic2\" />\n                    Generate\n                    {pathname === '/' && (\n                      <img\n                        width={20}\n                        height={20}\n                        alt=\"Wave hello\"\n                        src={waveHello}\n                        style={{ marginLeft: 10 }}\n                      />\n                    )}\n                  </span>\n                )\n              }}\n            >\n              About\n            </Item>\n          </NavLink>\n          {FLAGS.FLOW_GENERATE && (\n            <NavLink\n              to=\"/flow-generate\"\n              className={(navData) => (navData.isActive ? 'active-route' : '')}\n            >\n              <Item\n                renderItem={() => (\n                  <span className=\"rs-nav-item-content\">\n                    <Icon icon=\"magic2\" />\n                    Flow Generate\n                  </span>\n                )}\n              >\n                About\n              </Item>\n            </NavLink>\n          )}\n        </Nav>\n        <Nav pullRight>\n          <Dropdown\n            title={LOCALE_MAP[locale]}\n            activeKey={locale}\n            onSelect={changeLocale}\n          >\n            <Dropdown.Item eventKey=\"en\">English</Dropdown.Item>\n            <Dropdown.Item eventKey=\"de\">German</Dropdown.Item>\n            <Dropdown.Item eventKey=\"ar\">Arabic</Dropdown.Item>\n            <Dropdown.Item eventKey=\"cz\">Czech</Dropdown.Item>\n            <Dropdown.Item eventKey=\"es\">Spanish</Dropdown.Item>\n            <Dropdown.Item eventKey=\"fr\">French</Dropdown.Item>\n            <Dropdown.Item eventKey=\"ko\">Korean</Dropdown.Item>\n            <Dropdown.Item eventKey=\"sv\">Swedish</Dropdown.Item>\n            <Dropdown.Item eventKey=\"zh_CN\">Chinese</Dropdown.Item>\n          </Dropdown>\n          <Item onClick={toggleShow} icon={<Icon icon=\"creative\" />}>\n            Builder <Badge content=\"NEW!\"></Badge>\n          </Item>\n          <Drawer\n            backdrop={false}\n            show={isOpen}\n            size=\"xs\"\n            placement=\"left\"\n            onHide={toggleShow}\n          >\n            <Drawer.Header>\n              <Drawer.Title>\n                <h4>Builder Items</h4>\n                <p>You can drag and drop them into any model</p>\n              </Drawer.Title>\n            </Drawer.Header>\n            <Drawer.Body>\n              <BuilderBody />\n            </Drawer.Body>\n          </Drawer>\n        </Nav>\n      </Body>\n    </Navbar>\n  )\n}\n\nexport default HeaderComp\n","export default __webpack_public_path__ + \"static/media/prototype.af30ade3.svg\";","export default __webpack_public_path__ + \"static/media/faq.61960a92.svg\";","export default __webpack_public_path__ + \"static/media/data-extraction.8f6acfc6.svg\";","import React from 'react'\nimport { Col, FlexboxGrid } from 'rsuite'\nimport prototype from './prototype.svg'\n\nimport { normal } from '../colors'\nimport faq from './faq.svg'\nimport dataExtraction from './data-extraction.svg'\nimport {\n  SiJavascript,\n  SiPython,\n  SiPhp,\n  SiRuby,\n  SiGraphql,\n} from 'react-icons/si'\n\nimport styled from 'styled-components'\n\nconst FlexboxGridWithSpacing = styled(FlexboxGrid)`\n  margin: 1rem;\n  align-items: center;\n  justify-content: center;\n`\n\nconst FlexboxGridItemWithSpacing = styled(FlexboxGrid.Item)`\n  padding: 1rem;\n`\n\nconst Image = styled.img`\n  height: 240px;\n  width: 100%;\n`\n\nconst Text = styled.p`\n  font-size: 1.4rem;\n`\n\nconst CenterText = styled.p`\n  text-align: center;\n  font-size: 2rem;\n`\n\nconst TextUnderline = styled.span`\n  text-decoration: underline wavy ${normal};\n  text-underline-offset: 3px;\n`\n\nconst ContentComp = () => {\n  return (\n    <>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={24}>\n          <CenterText>\n            <span role=\"img\" aria-label=\"sun\">\n              🌞\n            </span>{' '}\n            Pollux{' '}\n            <span role=\"img\" aria-label=\"sun\">\n              🌞\n            </span>\n          </CenterText>\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Image src={faq} loading=\"lazy\" />\n        </FlexboxGridItemWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={2} componentClass={Col} smHidden />\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Text>\n            Need Restful API with bearer authentication? or a GraphQL{' '}\n            <SiGraphql color=\"#dd34a6\" size=\"1rem\" /> API? maybe some testing\n            data in JSON or Ruby <SiRuby color=\"#e51521\" size=\"1rem\" /> or\n            Python <SiPython color=\"#34709f\" size=\"1rem\" /> or PHP{' '}\n            <SiPhp color=\"#474A8A\" size=\"1rem\" /> or JavaScript{' '}\n            <SiJavascript color=\"#e8d44d\" size=\"1rem\" />, all of that and more\n            is possible with pollux,{' '}\n            <TextUnderline>\n              without writing a single line of code.{' '}\n            </TextUnderline>\n          </Text>\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={24}>\n          <CenterText>\n            <span role=\"img\" aria-label=\"alembic\">\n              ⚗️\n            </span>{' '}\n            How does it work?{' '}\n            <span role=\"img\" aria-label=\"alembic\">\n              ⚗️\n            </span>\n          </CenterText>\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Text>\n            You create a model, then you can drag and drop properties into it,\n            and these properties defines what kind of fake data should be\n            generated\n          </Text>\n        </FlexboxGridItemWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={2} componentClass={Col} smHidden />\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Image src={prototype} loading=\"lazy\" />\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={24}>\n          <CenterText>\n            <span role=\"img\" aria-label=\"alembic\">\n              ✨\n            </span>{' '}\n            What makes it unique{' '}\n            <span role=\"img\" aria-label=\"alembic\">\n              ✨\n            </span>\n          </CenterText>\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Image src={dataExtraction} loading=\"lazy\" />\n        </FlexboxGridItemWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={2} componentClass={Col} smHidden />\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Text>\n            - Everything in pollux from generating `.zip` files to generating\n            500,000 model instances happens in the frontend, using web APIs such\n            as the{' '}\n            <a\n              href=\"https://developer.mozilla.org/en-US/docs/Web/API/Blob\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Blob API\n            </a>{' '}\n            and{' '}\n            <a\n              href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Web Workers API\n            </a>\n            , plus you can{' '}\n            <TextUnderline>\n              pass JavaScript RegExp and it will generate a random string based\n              on that.\n            </TextUnderline>\n          </Text>\n          <Text>- Locale support</Text>\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n    </>\n  )\n}\n\nexport default ContentComp\n","import React from 'react'\nimport { IconButton, Icon } from 'rsuite'\n\nconst FooterComp = () => {\n  return (\n    <section style={{ textAlign: 'center' }}>\n      Made by <b>Rowadz</b>{' '}\n      <a\n        href=\"https://www.linkedin.com/in/rowadz/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"linkedin-square\" />} />\n      </a>\n      {'  '}\n      <a\n        href=\"https://github.com/Rowadz\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"github-alt\" />} />\n      </a>\n      {'  '}\n      <a\n        href=\"https://www.youtube.com/channel/UC1Uw_GN4sodGisimwZNzMoA?view_as=subscriber\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"youtube-play\" />} />\n      </a>\n    </section>\n  )\n}\n\nexport default FooterComp\n","import { Edge, Node } from 'react-flow-renderer'\n\nexport const nodes: Node[] = [\n  // {\n  //   id: '1',\n  //   type: MODEL_NODE,\n  //   data: {\n  //     label: (\n  //       <>\n  //         Welcome to <strong>React Flow!</strong>\n  //       </>\n  //     ),\n  //   },\n  //   position: { x: 250, y: 0 },\n  // },\n  // {\n  //   id: '2',\n  //   data: {\n  //     label: (\n  //       <>\n  //         This is a <strong>default node</strong>\n  //       </>\n  //     ),\n  //   },\n  //   position: { x: 100, y: 100 },\n  // },\n  // {\n  //   id: '3',\n  //   data: {\n  //     label: (\n  //       <>\n  //         This one has a <strong>custom style</strong>\n  //       </>\n  //     ),\n  //   },\n  //   position: { x: 400, y: 100 },\n  //   style: {\n  //     background: '#D6D5E6',\n  //     color: '#333',\n  //     border: '1px solid #222138',\n  //     width: 180,\n  //   },\n  // },\n  // {\n  //   id: '4',\n  //   position: { x: 250, y: 200 },\n  //   data: {\n  //     label: 'Another default node',\n  //   },\n  // },\n  // {\n  //   id: '5',\n  //   data: {\n  //     label: 'Node id: 5',\n  //   },\n  //   position: { x: 250, y: 325 },\n  // },\n  // {\n  //   id: '6',\n  //   type: 'output',\n  //   data: {\n  //     label: (\n  //       <>\n  //         An <strong>output node</strong>\n  //       </>\n  //     ),\n  //   },\n  //   position: { x: 100, y: 480 },\n  // },\n  // {\n  //   id: '7',\n  //   type: 'output',\n  //   data: { label: 'Another output node' },\n  //   position: { x: 400, y: 450 },\n  // },\n]\n\nexport const edges: Edge<any>[] = [\n  // {\n  //   id: 'e1-2',\n  //   source: '1',\n  //   target: '2',\n  //   label: 'this is an edge label',\n  //   sourceHandle: 'aa',\n  // },\n  // { id: 'e1-3', source: '1', target: '3', sourceHandle: 'b' },\n  // {\n  //   style: {\n  //     color: 'red',\n  //     background: 'red',\n  //     stroke: 'red',\n  //   },\n  //   labelBgStyle: {\n  //     fill: 'red',\n  //     color: 'red',\n  //   },\n  //   id: 'e3-4',\n  //   source: '3',\n  //   target: '4',\n  //   animated: true,\n  //   label: 'animated edge',\n  // },\n  // {\n  //   id: 'e4-5',\n  //   source: '4',\n  //   target: '5',\n  //   label: 'edge with arrow head',\n  //   markerEnd: {\n  //     type: MarkerType.ArrowClosed,\n  //   },\n  // },\n  // {\n  //   id: 'e5-6',\n  //   source: '5',\n  //   target: '6',\n  //   type: 'smoothstep',\n  //   style: { stroke: 'red' },\n  //   label: 'smooth step edge',\n  // },\n  // {\n  //   id: 'e5-7',\n  //   source: '5',\n  //   target: '7',\n  //   type: 'step',\n  //   style: { stroke: '#f6ab6c' },\n  //   label: 'a step edge',\n  //   animated: true,\n  //   labelStyle: { fill: '#f6ab6c', fontWeight: 700 },\n  // },\n]\n","import React, { memo } from 'react'\nimport { Handle, Position } from 'react-flow-renderer'\nimport type { NodeProps } from 'react-flow-renderer'\nimport styled from 'styled-components'\nimport { Input, InputGroup } from 'rsuite'\n\nconst styles = {\n  width: 300,\n  marginBottom: 10,\n}\n\nconst ModelNodeBody = styled.div`\n  background: #fff;\n  border: 1px solid #1a192b;\n  border-radius: 3px;\n  color: #222;\n  font-size: 12px;\n  padding: 10px;\n  text-align: center;\n  width: 20rem;\n`\n\nexport const ModelNode = memo(({ data, isConnectable }: NodeProps) => {\n  console.log({ data })\n\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        id={`${data.id}_target`}\n        position={Position.Left}\n        style={{ background: 'red' }}\n        isConnectable={isConnectable}\n      />\n      <ModelNodeBody>\n        <InputGroup style={styles}>\n          <Input plaplaceholder=\"Default Input\" />\n          <InputGroup.Addon>👈 Model name</InputGroup.Addon>\n        </InputGroup>\n        <ol style={{ textAlign: 'left' }}>\n          <li>id: auto increment</li>\n          <li>username: string(255)</li>\n          <li>email: email</li>\n          <li>password: password</li>\n          <li>about: paragraph</li>\n        </ol>\n      </ModelNodeBody>\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={`${data.id}_source`}\n        style={{ top: 10, background: '#555' }}\n        isConnectable={isConnectable}\n      />\n    </>\n  )\n})\n","export const MODEL_NODE = 'MODEL_NODE'\n","import React from 'react'\n\nimport styled from 'styled-components'\nimport { MODEL_NODE } from './nodesTypes'\n\nconst Card = styled.div`\n  margin: 30px auto;\n  height: 100px;\n  border-radius: 40px;\n  box-shadow: 5px 5px 30px 7px rgba(0, 0, 0, 0.25),\n    -5px -5px 30px 7px rgba(0, 0, 0, 0.22);\n  cursor: grab;\n  display: flex;\n  font-size: 40px;\n  justify-content: center;\n  align-items: center;\n  transition: 0.4s;\n  :hover {\n    transform: scale(0.9, 0.9);\n    box-shadow: 5px 5px 30px 15px rgba(0, 0, 0, 0.25),\n      -5px -5px 30px 15px skyblue;\n  }\n`\n\nexport const NodesDragDrop = () => {\n  const onDragStart = (\n    event: React.DragEvent<HTMLDivElement>,\n    nodeType: 'input' | 'default' | 'output' | typeof MODEL_NODE\n  ) => {\n    event.dataTransfer.setData('application/reactflow', nodeType)\n    event.dataTransfer.effectAllowed = 'move'\n  }\n\n  return (\n    <>\n      <Card\n        className=\"dndnode input\"\n        onDragStart={(event) => {\n          const img = document.createElement('img')\n          img.src = 'http://kryogenix.org/images/hackergotchi-simpler.png'\n          event.dataTransfer.setDragImage(img, 0, 0)\n          onDragStart(event, MODEL_NODE)\n        }}\n        draggable\n      >\n        <div>Model Node</div>\n      </Card>\n    </>\n  )\n}\n","import React, { useCallback, useRef, useState } from 'react'\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  ReactFlowProvider,\n  useNodesState,\n  useEdgesState,\n  ReactFlowInstance,\n  Node,\n  XYPosition,\n  Edge,\n  Connection,\n  updateEdge,\n  addEdge,\n} from 'react-flow-renderer'\nimport type { NodeTypes } from 'react-flow-renderer'\nimport styled from 'styled-components'\nimport * as data from './data'\nimport { ModelNode } from './ModelNode'\nimport { NodesDragDrop } from './NodesDragDrop'\nimport { FlexboxGrid } from 'rsuite'\nimport FlexboxGridItem from 'rsuite/lib/FlexboxGrid/FlexboxGridItem'\nimport { MODEL_NODE } from './nodesTypes'\n\nconst ReactFlowSection = styled.section`\n  height: 50rem;\n  width: 100%;\n  border: 1px solid #fff;\n`\n\nlet id = 0\nconst getId = () => `dndnode_${id++}`\n\nconst nodeTypes: NodeTypes = {\n  [MODEL_NODE]: ModelNode,\n}\n\nconst FlowGenerate = () => {\n  const reactFlowWrapper = useRef<HTMLDivElement>(null)\n  const [reactFlowInstance, setReactFlowInstance] =\n    useState<ReactFlowInstance>()\n  const [nodes, setNodes, onNodesChange] = useNodesState(data.nodes)\n  const [edges, setEdges, onEdgesChange] = useEdgesState(data.edges)\n\n  const onDragOver = useCallback((event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n    event.dataTransfer.dropEffect = 'move'\n  }, [])\n\n  const onConnect = useCallback(\n    (connection: Connection) =>\n      setEdges((eds) => addEdge({ ...connection, label: 'Many to Many' }, eds)),\n    [setEdges]\n  )\n\n  // gets called after end of edge gets dragged to another source or target\n  const onEdgeUpdate = useCallback(\n    (oldEdge: Edge<any>, newConnection: Connection) => {\n      console.log({ oldEdge, newConnection })\n      setEdges((els) => updateEdge(oldEdge, newConnection, els))\n    },\n    [setEdges]\n  )\n\n  const onDrop = useCallback(\n    (event: React.DragEvent<HTMLDivElement>) => {\n      event.preventDefault()\n\n      const reactFlowBounds = reactFlowWrapper.current?.getBoundingClientRect()\n      const type = event.dataTransfer.getData('application/reactflow')\n\n      // check if the dropped element is valid\n      if (typeof type === 'undefined' || !type) {\n        return\n      }\n\n      const position = reactFlowInstance?.project({\n        x: event.clientX - (reactFlowBounds?.left || 0),\n        y: event.clientY - (reactFlowBounds?.top || 0),\n      }) as XYPosition\n      const id = getId()\n      const newNode: Node = {\n        id,\n        type,\n        position,\n        data: { label: `${type} node`, id },\n      }\n\n      setNodes((nds) => nds.concat(newNode))\n    },\n    [reactFlowInstance, setNodes]\n  )\n\n  return (\n    <ReactFlowProvider>\n      <FlexboxGrid>\n        <FlexboxGridItem style={{ width: '20%' }}>\n          <NodesDragDrop />\n        </FlexboxGridItem>\n        <FlexboxGridItem style={{ width: '80%' }}>\n          <ReactFlowSection\n            className=\"reactflow-wrapper\"\n            ref={reactFlowWrapper}\n          >\n            <ReactFlow\n              fitView\n              snapToGrid\n              nodes={nodes}\n              edges={edges}\n              onDrop={onDrop}\n              onDragOver={onDragOver}\n              nodeTypes={nodeTypes}\n              onNodesChange={onNodesChange}\n              onInit={setReactFlowInstance}\n              onEdgesChange={onEdgesChange}\n              onEdgeUpdate={onEdgeUpdate}\n              onConnect={onConnect}\n            >\n              <MiniMap />\n              <Controls />\n            </ReactFlow>\n          </ReactFlowSection>\n        </FlexboxGridItem>\n      </FlexboxGrid>\n    </ReactFlowProvider>\n  )\n}\n\nexport default FlowGenerate\n","export default __webpack_public_path__ + \"static/media/bugs.2534fc67.svg\";","import React from 'react'\nimport { FlexboxGrid } from 'rsuite'\nimport styled from 'styled-components'\nimport bugs from './bugs.svg'\n\nconst FlexboxGridItem = styled(FlexboxGrid.Item)`\n  display: flex;\n  margin-top: 3rem;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Image = styled.img`\n  width: 20rem;\n  height: 20rem;\n`\n\ntype ErrorBoundaryProps = {\n  children: React.ReactNode\n}\n\ntype ErrorBoundaryState = {\n  hasError?: boolean\n}\n\nexport class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    console.error(error)\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch() {\n    console.log(\n      '%cPlease open an issue there: https://github.com/Rowadz/pollux',\n      'color: #4E7F97; font-size: 20px'\n    )\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <FlexboxGrid>\n          <FlexboxGridItem colspan={24}>\n            <h4>You did something I didn't test, not your falt.</h4>\n          </FlexboxGridItem>\n          <FlexboxGridItem colspan={24}>\n            <Image src={bugs} loading=\"lazy\" />\n          </FlexboxGridItem>\n          <FlexboxGridItem colspan={24}>\n            <p>\n              Please visit{' '}\n              <a\n                href=\"https://github.com/Rowadz/pollux\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                Rowadz/pollux\n              </a>{' '}\n              and open an issue\n            </p>\n          </FlexboxGridItem>\n        </FlexboxGrid>\n      )\n    }\n\n    return this.props.children\n  }\n}\n","import React from 'react'\n// import 'rsuite/dist/styles/rsuite-dark.css'\nimport './App.css'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport { Header, Content, Footer, Generate, FlowGenerate } from './components'\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'\nimport { ErrorBoundary } from './ErrorBoundary'\nimport { FLAGS } from 'flags'\n\nconsole.log(\n  `%c\n\n'########:::'#######::'##:::::::'##:::::::'##::::'##:'##::::'##:\n ##.... ##:'##.... ##: ##::::::: ##::::::: ##:::: ##:. ##::'##::\n ##:::: ##: ##:::: ##: ##::::::: ##::::::: ##:::: ##::. ##'##:::\n ########:: ##:::: ##: ##::::::: ##::::::: ##:::: ##:::. ###::::\n ##.....::: ##:::: ##: ##::::::: ##::::::: ##:::: ##::: ## ##:::\n ##:::::::: ##:::: ##: ##::::::: ##::::::: ##:::: ##:: ##:. ##::\n ##::::::::. #######:: ########: ########:. #######:: ##:::. ##:\n..::::::::::.......:::........::........:::.......:::..:::::..::\n`,\n  'color: #4E7F97'\n)\n\nconsole.log(\n  '%cRepo: https://github.com/Rowadz/pollux',\n  'color: #4E7F97; font-size: 20px'\n)\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <Router>\n        <DndProvider\n          backend={HTML5Backend}\n          options={{ enableMouseEvents: true }}\n        >\n          <Header />\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <main>\n                  <Content />\n                  <Footer />\n                </main>\n              }\n            />\n            <Route\n              path=\"/generate\"\n              element={\n                <>\n                  <Generate />\n                  <Footer />\n                </>\n              }\n            />\n            {FLAGS.FLOW_GENERATE && (\n              <Route\n                path=\"/flow-generate\"\n                element={\n                  <>\n                    <FlowGenerate />\n                  </>\n                }\n              />\n            )}\n          </Routes>\n        </DndProvider>\n      </Router>\n    </ErrorBoundary>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Pollux from './App'\n// import * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nif (module.hot) {\n  module.hot.accept()\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Pollux />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n","\n\t\t\t\tvar addMethods = require(\"../../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"startGenerating\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"962e3972e2338fe639cf.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DraggableCommonProp_item__1Ue75\"};"],"sourceRoot":""}