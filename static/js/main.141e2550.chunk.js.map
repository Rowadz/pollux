{"version":3,"sources":["components/generate/components/Controller/components/ModelsComponents/cat.svg","redux/actions.js","redux/actionTypes.js","components/generate/components/Controller/components/AddModelBtn.js","components/generate/components/Controller/components/ModelsComponents/ConfirmDel.js","colors.js","components/generate/components/Controller/components/ModelsComponents/AddProp.js","components/generate/components/Controller/components/ModelsComponents/Prop.js","components/generate/components/Controller/components/ModelsComponents/PropsDisplay.js","components/generate/components/Controller/components/ModelsComponents/CreateRel.js","zipFileContent/package.json.js","zipFileContent/readme.md.js","graphqlZipContent/readme.md.js","components/generate/webWorker/eventEmitter.js","components/generate/webWorker/spawn.js","components/generate/components/Controller/util.js","graphqlZipContent/package.json.js","components/generate/components/Controller/components/ModelsComponents/RenderLangIcon.js","components/generate/components/Controller/components/ModelsComponents/CodeGenerator.js","components/generate/components/Controller/components/ModelsComponents/WebWorkerProgress.js","components/generate/components/Controller/components/ModelsComponents/ModelHeader.tsx","components/generate/components/Controller/components/ModelsComponents/Model.js","components/generate/components/Controller/components/Models.js","components/generate/components/Controller/components/SaveModel.js","components/generate/components/Controller/components/LoadModel.js","components/generate/components/Controller/Controller.js","components/generate/Generate.js","components/Builder/maps.js","components/Builder/builderComponents/CommonProps/components/DraggableCommonProp.js","components/Builder/builderComponents/CommonProps/CommonProps.js","components/Builder/BuilderBody/BuilderBody.js","flags.ts","components/Header.js","components/Content.js","components/Footer.js","components/FlowGenerate/data.tsx","components/FlowGenerate/ModelNode.tsx","components/FlowGenerate/NodesDragDrop.tsx","components/FlowGenerate/FlowGenerate.tsx","ErrorBoundary.tsx","App.js","redux/reducers/models.reducer.js","redux/reducers/faker.reducer.js","redux/reducers/prop.reducer.js","redux/reducers/relation.reducer.js","redux/reducers/index.js","redux/reducers/auth.reducer.js","redux/reducers/generateProgress.reducer.js","redux/store.js","index.js","components/generate/components/Controller/components/empty.svg","components/generate/webWorker/dataGenerateWebWorker.js","components/generate/components/Controller/components/emptySave.svg","components/generate/components/Controller/components/loadModels.svg","components/Builder/builderComponents/CommonProps/components/DraggableCommonProp.module.css","components/prototype.svg","components/faq.svg","components/data-extraction.svg","bugs.svg"],"names":["module","exports","addModel","model","type","payload","justAddProp","props","editProp","Header","Modal","Body","Footer","Title","connect","dispatch","useState","showNameModal","modelName","state","setState","close","create","id","v4","name","createdAt","Date","inputChange","str","trim","IconButton","color","onClick","appearance","style","width","icon","Icon","show","onHide","maxWidth","className","Input","onPressEnter","onChange","autoFocus","placeholder","size","value","Button","ConfirmDel","showConfirmModal","closeConfirmModal","del","backdrop","fontSize","ownProps","prop","propNamesForThisModel","showPropNameModal","addProp","mode","propNameProp","propId","propName","valid","strOrArrayOfStrings","display","marginBottom","Message","showIcon","description","TagPicker","creatable","menuStyle","find","forEach","disabled","length","Wrapper","styled","div","dangerClass","checkIfMobile","test","navigator","userAgent","ownProp","inputData","faker","i","regex","modelId","func","disableModalControllers","fullScreen","setFullScreen","regexError","setRegexErrors","useEffect","prevState","debouncedOnRegexUpdate","useDebouncedCallback","RegExp","flipKey","flipId","List","Item","key","index","height","Grid","fluid","Row","colSpan","textAlign","Col","xs","sm","md","defaultValue","role","aria-label","dangerClas","InputPicker","findRes","val","groupName","data","groupBy","margin","circle","propsEl","hover","map","uuid","others","src","cat","alt","models","relations","eligibleModels","filter","mainModel","checkedModels","Set","showCreateRel","toggleRel","checked","distId","Alert","success","info","removeRelation","toUpperCase","marginTop","Toggle","marginLeft","has","auth","scripts","dev","author","license","dependencies","eventEmitter","Emittery","spawnWebWorker","a","amount","relationsProps","maxWorkers","hardwareConcurrency","console","log","allWorkers","Array","from","webWorker","worker","onmessage","emit","startGenerating","Promise","all","generate","justReturn","onlyJSON","atLeastOneWithoutFunc","len","warning","join","window","Worker","then","result","outJSON","flat","el","toJSONPritty","saveAs","Blob","catch","error","group","groupEnd","res","generateFakeData","resWithRelations","obj","reduce","prev","downloadData","regexStr","arrayElement","randexp","RandExp","gen","JSON","stringify","relationsPropsGetter","relationsGetter","generateAPI","zip","JSZip","file","npmCongif","apiReadme","generateAsync","zipContent","generateGraphqlAPI","jsonStr","graphqlReadme","memo","lang","formatRuby","dayjs","isValid","toISOString","CodeGenerator","setShowModal","code","setCode","phpArrayStr","json2php","parse","phpArrayStrWithNewLines","replaceAll","replace","rubyCode","Object","keys","curr","isNaN","lastIndexOf","slice","values","list","entries","comma","push","sqlValues","sql","format","full","overflow","clipboard","writeText","extensions","javascript","jsx","php","StreamLanguage","define","ruby","python","theme","oneDark","readOnly","WebWorkerProgress","generated","setGenereated","startedWorkersCount","setStartedWorkersCount","currentWebWorkerModelId","setModelId","modelSelector","useCallback","relCount","useSelector","totalNumberOfDocumentsToBeGenerated","on","counter","setTimeout","FlexboxGrid","justify","flexDirection","align","toLocaleString","Progress","Circle","percent","toFixed","status","flexGrow","strokeColor","showInfo","Math","floor","isTourOpen","propsCount","openCreateRelModal","useDispatch","useDrop","accept","canDrop","collect","monitor","hovered","isOver","drop","Tag","Whisper","placement","trigger","speaker","Tooltip","Badge","content","ref","Panel","shaded","backgroundColor","background","setLang","showModal","setDisableModalControllers","delToolTip","addKeyTip","generateTip","PanelGroup","bordered","header","ButtonGroup","Dropdown","onSelect","selectedLang","renderTitle","eventKey","InputNumber","max","min","updateAmount","float","deleteModel","addPropName","modelsEls","empty","with","showModalSave","toSave","modelsKey","modelsEl","Checkbox","emptySave","rest","toSaveSet","saved","localStorage","getItem","realToSave","setItem","showTheModalOfModels","loadModelsEmpty","m","load","Divider","mapSteps","matchMedia","matches","steps","selector","setIsTourOpen","addEventListener","e","isOpen","onRequestClose","generateAPIForAll","checkedChildren","unCheckedChildren","Generate","Map","DraggableCommonProp","label","children","useDrag","item","get","isDragging","dragRef","styles","cursor","boxShadow","CommonProps","fakerObj","useMemo","keyword","setKeyword","toLowerCase","includes","FLAGS","freeze","FLOW_GENERATE","Navbar","Nav","HeaderComp","toggleDrawer","to","navData","isActive","renderItem","pullRight","Drawer","FlexboxGridWithSpacing","FlexboxGridItemWithSpacing","Image","img","Text","p","CenterText","TextUnderline","span","ContentComp","colspan","componentClass","faq","loading","smHidden","prototype","dataExtraction","href","target","rel","FooterComp","nodes","position","x","y","border","edges","source","sourceHandle","stroke","labelBgStyle","fill","animated","markerEnd","MarkerType","ArrowClosed","labelStyle","fontWeight","ModelNodeBody","ModelNode","isConnectable","Position","Left","onConnect","params","Right","top","bottom","CustomPanel","NodesDragDrop","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","draggable","ReactFlowSection","section","nodeTypes","modelNode","FlowGenerate","reactFlowWrapper","useRef","reactFlowInstance","setReactFlowInstance","useNodesState","setNodes","onNodesChange","useEdgesState","onEdgesChange","onDragOver","preventDefault","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","newNode","nds","concat","fitView","snapToGrid","onInit","FlexboxGridItem","ErrorBoundary","hasError","this","bugs","React","Component","App","DndProvider","backend","HTML5Backend","options","enableMouseEvents","path","element","Content","initialState","randomCpy","random","dateCpy","date","objectElement","between","names","fullName","findName","objects","address","commerce","company","database","finance","hacker","image","internet","lorem","phone","funName","charAt","prevArr","currArr","combineReducers","action","modelUuid","propData","idx","findIndex","findProp","without","_","generateProgress","createStore","rootReducer","composeWithDevTools","ReactDOM","render","StrictMode","store","document","getElementById","addMethods","methods","w"],"mappings":"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","file":"static/js/main.141e2550.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.4333af26.svg\";","import {\n  ADD_MODEL,\n  DELETE_MODEL,\n  ADD_RPOP_NAME,\n  REMOVE_ALL_RPOPS,\n  EDIT_PROP,\n  DELETE_PROP,\n  JUST_ADD_PROP,\n  ADD_RELATION,\n  REMOVE_RELATION,\n  UPDATE_AMOUNT,\n  ENABLE_AUTH,\n  DISABLE_AUTH,\n  SET_PROGRESS,\n} from './actionTypes'\n\n/**\n *\n * @param {Object} model - the model object\n * @param {string} model.name - the model name\n * @param {string} model.id - the model uuid\n * @param {Date} model.createdAt - the mode timestamp\n */\nexport const addModel = (model) => ({\n  type: ADD_MODEL,\n  payload: model,\n})\n\n/**\n *\n * @param {string} uuid - the prop uuid\n *\n */\nexport const deleteModel = (uuid) => ({\n  type: DELETE_MODEL,\n  payload: uuid,\n})\n\n/**\n *\n * @param {Object} props - the props object\n * @param {string} props.uuid - the model uuid\n * @param {string} props.propName - the props name\n */\nexport const addPropName = (props) => ({\n  type: ADD_RPOP_NAME,\n  payload: props,\n})\n\n/**\n *\n * @param {Array<Object>} props - object\n * @param {Object} props.id - the props id\n * @param {string} props.uuid - the model uuid\n * @param {string} props.propName - the props name\n * @param {string} props.func - the props random func\n * @param {string} props.groupName - the props groupName for the random func\n */\nexport const justAddProp = (props) => ({\n  type: JUST_ADD_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {string} uuid - the prop uuid\n *\n */\nexport const removeAllProps = (uuid) => ({\n  type: REMOVE_ALL_RPOPS,\n  payload: uuid,\n})\n\n/**\n * @param {Object} props - the prop object\n * @param {string} props.propId - the prop uuid\n * @param {string} props.id - the model uuid\n * @param {string} props.newName - the new prop name\n * @param {string} props.groupName - the top lvl obj name for faker\n * @param {string} props.func - the faker function\n */\nexport const editProp = (props) => ({\n  type: EDIT_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.propId - the prop uuid\n * @param {string} props.modelId - the model uuid\n */\nexport const delProp = (props) => ({\n  type: DELETE_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.distId - the model uuid to create relation with\n * @param {string} props.modelId - the model uuid\n */\nexport const addRelation = (props) => ({\n  type: ADD_RELATION,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.distId - the model uuid to remove from the relation\n * @param {string} props.modelId - the model uuid\n */\nexport const removeRelation = (props) => ({\n  type: REMOVE_RELATION,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.amount - the amount of data to generate\n * @param {string} props.modelId - the model uuid\n */\nexport const updateAmount = (props) => ({\n  type: UPDATE_AMOUNT,\n  payload: props,\n})\n\nexport const enableAuth = () => ({ type: ENABLE_AUTH })\n\nexport const disableAuth = () => ({ type: DISABLE_AUTH })\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.modelId - the model uuid\n */\nexport const setProgress = (props) => ({ type: SET_PROGRESS, payload: props })\n","export const ADD_MODEL = 'ADD_MODEL'\nexport const DELETE_MODEL = 'DELETE_MODEL'\nexport const ADD_RPOP_NAME = 'ADD_RPOP_NAME'\nexport const JUST_ADD_PROP = 'JUST_ADD_PROP'\nexport const REMOVE_ALL_RPOPS = 'REMOVE_ALL_RPOPS'\nexport const EDIT_PROP = 'EDIT_PROP'\nexport const DELETE_PROP = 'DELETE_PROP'\nexport const ADD_RELATION = 'ADD_RELATION'\nexport const REMOVE_RELATION = 'REMOVE_RELATION'\nexport const UPDATE_AMOUNT = 'UPDATE_AMOUNT'\nexport const ENABLE_AUTH = 'ENABLE_AUTH'\nexport const DISABLE_AUTH = 'DISABLE_AUTH'\nexport const SET_PROGRESS = 'SET_PROGRESS'\n","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Input } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { addModel } from 'redux/actions'\nimport { v4 } from 'uuid'\n\nconst { Header, Body, Footer, Title } = Modal\n\nconst AddModelBtn = ({ dispatch }) => {\n  const [state, setState] = useState({ showNameModal: false, modelName: '' })\n  const showNameModal = () => setState({ ...state, showNameModal: true })\n  const close = () => setState({ ...state, showNameModal: false })\n  const create = () => {\n    dispatch(\n      addModel({\n        id: v4(),\n        name: state.modelName,\n        createdAt: +new Date(),\n      })\n    )\n    setState({ ...state, modelName: '', showNameModal: false })\n  }\n  /**\n   * @param {string} str\n   */\n  const inputChange = (str) => setState({ ...state, modelName: str.trim('') })\n\n  const onEnter = () => {\n    inputChange(state.modelName)\n    create()\n  }\n  return (\n    <section>\n      <IconButton\n        id=\"add-prototype-btn\"\n        color=\"cyan\"\n        onClick={showNameModal}\n        appearance=\"ghost\"\n        style={{ width: '100%' }}\n        icon={<Icon icon=\"plus\" />}\n      >\n        Add a model\n      </IconButton>\n      <Modal\n        show={state.showNameModal}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>Choose the model name</Title>\n        </Header>\n        <Body>\n          <p>\n            Click <span className=\"note\">`Enter`</span> to create the model or\n            <span className=\"note\">`esc`</span> to close this model\n          </p>\n          <Input\n            onPressEnter={onEnter}\n            onChange={inputChange}\n            autoFocus={true}\n            style={{ width: '100%' }}\n            placeholder=\"Your model name\"\n            size=\"lg\"\n            value={state.modelName}\n          />\n        </Body>\n        <Footer>\n          <Button onClick={create} appearance=\"primary\">\n            Create\n          </Button>\n          <Button onClick={close} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect()(AddModelBtn)\n","import React from 'react'\nimport { Icon, Button, Modal } from 'rsuite'\nimport { danger } from 'colors'\nconst { Body, Footer, Header, Title } = Modal\n\nconst ConfirmDel = ({ showConfirmModal, closeConfirmModal, name, del, id }) => {\n  return (\n    <Modal\n      backdrop=\"static\"\n      onHide={closeConfirmModal}\n      size=\"xs\"\n      show={showConfirmModal}\n      style={{ maxWidth: '100%' }}\n    >\n      <Header>\n        <Title>Confirm</Title>\n      </Header>\n      <Body>\n        <Icon\n          icon=\"remind\"\n          style={{\n            color: '#ffb300',\n            fontSize: 24,\n          }}\n        />\n        <b>\n          {' '}\n          Are you sure you want to delete this model {'`'}\n          <span style={{ color: danger }}>{name}</span>\n          {'`'}?\n        </b>\n      </Body>\n      <Footer>\n        <Button onClick={() => del(id)} appearance=\"primary\" color=\"red\">\n          Ok\n        </Button>\n        <Button onClick={closeConfirmModal} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default ConfirmDel\n","export const danger = '#E30712'\nexport const normal = '#00a0bd'\n","import React, { useState } from 'react'\nimport { Input, TagPicker, Button, Modal, Message } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { editProp } from 'redux/actions'\n\nconst { Body, Footer, Header, Title } = Modal\n\nconst AddProp = ({\n  showPropNameModal,\n  closeConfirmModal,\n  name,\n  addProp,\n  propNamesForThisModel,\n  id,\n  mode,\n  propNameProp,\n  dispatch,\n  propId,\n}) => {\n  const [state, setState] = useState({\n    propName: mode === 'edit' ? propNameProp : '',\n    valid: true,\n  })\n  const inputChange = (strOrArrayOfStrings) => {\n    if (mode === 'edit') {\n      setState({ propName: strOrArrayOfStrings.trim(''), valid: true })\n    } else {\n      setState({ propName: strOrArrayOfStrings, valid: true })\n    }\n  }\n  const addButtonClick = () => {\n    if (propNamesForThisModel) {\n      const exists = propNamesForThisModel.find(\n        ({ propName }) => propName === state.propName\n      )\n      if (exists) {\n        setState({ ...state, valid: false })\n        return\n      }\n    }\n    if (mode === 'edit')\n      dispatch(editProp({ propName: state.propName, id, propId }))\n    else {\n      state.propName.forEach((name) => addProp(name))\n      setState({ ...state, propName: '' })\n    }\n    closeConfirmModal()\n  }\n  const close = () => {\n    setState({ ...state, valid: true })\n    closeConfirmModal()\n  }\n  return (\n    <Modal\n      backdrop=\"static\"\n      show={showPropNameModal}\n      onHide={close}\n      style={{ maxWidth: '100%' }}\n      size=\"lg\"\n    >\n      <Header>\n        <Title>\n          {mode === 'edit'\n            ? `Edit ${propNameProp} property`\n            : 'Enter the properties names'}\n        </Title>\n      </Header>\n      <Body>\n        <div\n          style={{\n            display: state.valid ? 'none' : 'block',\n            marginBottom: '10px',\n          }}\n        >\n          <Message\n            type=\"error\"\n            showIcon\n            description={`The Property \"${state.propName}\" is already exists in this model (${name})`}\n          />\n        </div>\n        <p>\n          <b>Type the prop name then press enter to add them</b>\n        </p>\n        {mode === 'edit' ? (\n          <Input\n            style={{ width: '100%' }}\n            placeholder=\"Change prop name\"\n            onChange={inputChange}\n          />\n        ) : (\n          <TagPicker\n            creatable\n            placeholder=\"add as many properties you want here\"\n            style={{ width: '100%' }}\n            onChange={inputChange}\n            menuStyle={{ width: 300, display: 'none' }}\n          />\n        )}\n      </Body>\n      <Footer>\n        <Button\n          onClick={addButtonClick}\n          appearance=\"primary\"\n          color=\"cyan\"\n          disabled={!state.propName.length}\n        >\n          Ok\n        </Button>\n        <Button onClick={close} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default connect((state, ownProps) => {\n  const { prop } = state\n  return { ...ownProps, propNamesForThisModel: prop[ownProps.id] }\n})(AddProp)\n","import React, { useEffect, useState } from 'react'\nimport {\n  InputPicker,\n  List,\n  Grid,\n  Col,\n  Row,\n  Icon,\n  IconButton,\n  Input,\n} from 'rsuite'\nimport AddProp from './AddProp'\nimport { connect } from 'react-redux'\nimport { delProp, editProp } from 'redux/actions'\nimport styled from 'styled-components'\nimport { danger, normal } from '../../../../../../colors'\nimport { useDebouncedCallback } from 'use-debounce'\nimport { Flipped, Flipper } from 'react-flip-toolkit'\n\nconst dangerClass = 'danger'\n\nconst Wrapper = styled.div`\n  & .${dangerClass} {\n    border-color: ${danger};\n    color: ${danger};\n  }\n`\nWrapper.dangerClass = dangerClass\n\nconst checkIfMobile = () =>\n  /Mobi/.test(navigator.userAgent) || /Mobi|Android/i.test(navigator.userAgent)\n\nconst Prop = ({\n  i,\n  name,\n  id,\n  regex,\n  modelName,\n  modelId,\n  dispatch,\n  inputData,\n  func,\n  disableModalControllers,\n}) => {\n  const [fullScreen, setFullScreen] = useState(false)\n  const [state, setState] = useState({ showPropNameModal: false, func })\n  const [regexError, setRegexErrors] = useState(false)\n  const closeModal = () => setState({ ...state, showPropNameModal: false })\n  const openModal = () => setState({ ...state, showPropNameModal: true })\n  const del = () => dispatch(delProp({ propId: id, modelId }))\n  const onFuncSelect = (value) => {\n    const findRes = inputData.find(({ value: val }) => value === val)\n    if (!findRes) return\n    const { groupName } = findRes\n    setState({ ...state, func: value })\n    dispatch(editProp({ id: modelId, propId: id, func: value, groupName }))\n  }\n\n  useEffect(() => {\n    setFullScreen((prevState) => !prevState)\n  }, [])\n\n  const debouncedOnRegexUpdate = useDebouncedCallback((value) => {\n    try {\n      new RegExp(value)\n    } catch {\n      setRegexErrors(true)\n    } finally {\n      setRegexErrors(value === '')\n      dispatch(editProp({ id: modelId, regex: value, propId: id }))\n    }\n  }, 200)\n\n  const icon =\n    func !== 'regex' ? (\n      <Icon icon=\"circle\" />\n    ) : (\n      <Icon icon=\"creative\" style={{ color: normal }} />\n    )\n\n  return (\n    <Flipper flipKey={fullScreen}>\n      <Flipped flipId=\"square-prop\">\n        <List.Item\n          key={i}\n          index={i}\n          style={\n            fullScreen\n              ? { width: '100%', height: '100%' }\n              : { width: 0, height: 0 }\n          }\n        >\n          <Grid fluid>\n            <Row\n              colSpan={6}\n              style={{ textAlign: checkIfMobile() ? 'center' : 'left' }}\n            >\n              <Col xs={24} sm={24} md={6}>\n                <h6>\n                  {icon} {name} {checkIfMobile() ? <Icon icon=\"circle\" /> : ''}\n                </h6>\n              </Col>\n\n              <Col xs={24} sm={24} md={12} style={{ textAlign: 'left' }}>\n                {state.func === 'regex' ? (\n                  <Wrapper>\n                    <Input\n                      size=\"sm\"\n                      disabled={disableModalControllers}\n                      className={regexError ? Wrapper.dangerClass : ''}\n                      placeholder=\"Type your regex here\"\n                      onChange={debouncedOnRegexUpdate}\n                      defaultValue={regex}\n                    />\n                    {regexError ? (\n                      <p className={Wrapper.dangerClass}>\n                        The regex is not\n                        <span role=\"img\" aria-label=\"lemon\">\n                          🍋\n                        </span>\n                        JS\n                        <span role=\"img\" aria-label=\"lemon\">\n                          🍋\n                        </span>\n                        regex\n                      </p>\n                    ) : (\n                      <p className={Wrapper.dangerClas}>\n                        Write a\n                        <span role=\"img\" aria-label=\"lemon\">\n                          🍋\n                        </span>\n                        JS\n                        <span role=\"img\" aria-label=\"lemon\">\n                          🍋\n                        </span>\n                        regex here!\n                      </p>\n                    )}\n                  </Wrapper>\n                ) : (\n                  <InputPicker\n                    disabled={disableModalControllers}\n                    size=\"sm\"\n                    onChange={onFuncSelect}\n                    data={inputData}\n                    defaultValue={state.func}\n                    groupBy=\"groupName\"\n                    placeholder=\"Select a function\"\n                    style={{ width: '100%' }}\n                  />\n                )}\n              </Col>\n              <AddProp\n                id={modelId}\n                showPropNameModal={state.showPropNameModal}\n                closeConfirmModal={closeModal}\n                propNameProp={name}\n                name={modelName}\n                propId={id}\n                mode={'edit'}\n              />\n              <Col\n                xs={12}\n                sm={12}\n                md={3}\n                style={{ textAlign: checkIfMobile() ? 'left' : 'right' }}\n              >\n                <IconButton\n                  disabled={disableModalControllers}\n                  style={{ margin: '5px' }}\n                  size=\"xs\"\n                  icon={<Icon icon=\"edit\" />}\n                  circle\n                  onClick={openModal}\n                />\n              </Col>\n\n              <Col xs={12} sm={12} md={1} style={{ textAlign: 'right' }}>\n                <IconButton\n                  style={{ margin: '5px' }}\n                  icon={<Icon icon=\"minus\" />}\n                  circle\n                  disabled={disableModalControllers}\n                  size=\"xs\"\n                  onClick={del}\n                />\n              </Col>\n            </Row>\n          </Grid>\n        </List.Item>\n      </Flipped>\n    </Flipper>\n  )\n}\n\nexport default connect((state, ownProp) => ({\n  ...ownProp,\n  inputData: state.faker,\n}))(Prop)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport cat from './cat.svg'\nimport { List } from 'rsuite'\nimport Prop from './Prop'\n\nconst PropsDisplay = ({ id, props, modelName, disableModalControllers }) => {\n  const propsEl =\n    props && props?.length > 0 ? (\n      <List hover>\n        {props.map(({ propName, id: uuid, func, ...others }, i) => (\n          <Prop\n            i={i}\n            key={i}\n            func={func}\n            name={propName}\n            id={uuid}\n            modelId={id}\n            modelName={modelName}\n            disableModalControllers={disableModalControllers}\n            {...others}\n          />\n        ))}\n      </List>\n    ) : (\n      <section style={{ width: '100%', textAlign: 'center' }}>\n        <h5>Add Properties to this model using the + button</h5>\n        <img src={cat} alt=\"cat waiting\" width={'100px'} height={'100px'} />\n      </section>\n    )\n  return <section>{propsEl}</section>\n}\n\nexport default connect((state, ownProps) => ({\n  ...ownProps,\n  props: state.prop[ownProps.id],\n}))(PropsDisplay)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Modal } from 'rsuite'\nimport { Grid, Row, Col } from 'rsuite'\nimport { Toggle } from 'rsuite'\nimport { addRelation, removeRelation } from 'redux/actions'\nimport { Alert } from 'rsuite'\nimport cat from './cat.svg'\nconst { Body, Footer, Header, Title } = Modal\n\nconst CreateRel = ({\n  showCreateRel,\n  mainModel,\n  close,\n  id,\n  eligibleModels,\n  dispatch,\n  checkedModels,\n}) => {\n  const toggleRel = (checked, distId) => {\n    if (checked) {\n      Alert.success(`created the link with ${mainModel.name} (1:m)`)\n      dispatch(addRelation({ distId, modelId: id }))\n    } else {\n      Alert.info(`removed the link with ${mainModel.name}`)\n      dispatch(removeRelation({ distId, modelId: id }))\n    }\n  }\n  \n  if (!mainModel) return ''\n\n  return (\n    <Modal\n      backdrop=\"static\"\n      onHide={close}\n      show={showCreateRel}\n      style={{ maxWidth: '100%' }}\n      size=\"lg\"\n    >\n      <Header>\n        <Title>\n          Create Relation for{' '}\n          <span style={{ color: '#1b9cb0' }}>\n            {mainModel.name.toUpperCase()}\n          </span>{' '}\n          model\n        </Title>\n      </Header>\n      <Body>\n        <h4>Eligible Models:</h4>\n        <Grid fluid style={{ marginTop: 20 }}>\n          <Row>\n            {eligibleModels.length === 0 ? (\n              <section style={{ width: '100%', textAlign: 'center' }}>\n                <h5>\n                  There is no eligible models, create models to link them!\n                </h5>\n                <img\n                  src={cat}\n                  alt=\"cat waiting\"\n                  width={'100px'}\n                  height={'100px'}\n                />\n              </section>\n            ) : (\n              (eligibleModels || []).map(({ name, id }) => (\n                <Col xs={24} sm={24} md={6} key={id}>\n                  <span style={{ color: '#1b9cb0' }}>{name.toUpperCase()}</span>{' '}\n                  <Toggle\n                    style={{ marginLeft: 5 }}\n                    onChange={(checked) => toggleRel(checked, id)}\n                    checked={checkedModels.has(id)}\n                  />\n                </Col>\n              ))\n            )}\n          </Row>\n        </Grid>\n      </Body>\n      <Footer>\n        <Button appearance=\"primary\" color=\"cyan\" onClick={close}>\n          Ok\n        </Button>\n        <Button appearance=\"subtle\" onClick={close}>\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default connect((state, ownProps) => {\n  const { models, relations } = state\n\n  return {\n    ...ownProps,\n    eligibleModels: (models || []).filter(({ id }) => id !== ownProps.id),\n    mainModel: (models || []).filter(({ id }) => id === ownProps.id)[0],\n    checkedModels: new Set(relations[ownProps.id] || []),\n  }\n})(CreateRel)\n","export default (auth=false) => ({\n  description:\n    'The file is generated using https://mohammedal-rowad.github.io/pollux/',\n  scripts: {\n    dev: `${auth ? 'json-server-auth' : 'json-server'} --watch db.json -r routes.json`,\n  },\n  author: 'Rowadz',\n  license: 'MIT',\n  dependencies: {\n    'json-server': '^0.16.2',\n    'json-server-auth': '^2.0.2'\n  },\n})\n","export default name => `# Generated json-server API for ${name} model\nThis json-server api was generated via [pollux](https://mohammedal-rowad.github.io/pollux/)\nand it runs using [json-server](https://github.com/typicode/json-server), please read json-server docs for more info.\n\n> the authtication is made with [json-server-auth](https://www.npmjs.com/package/json-server-auth) read the docs there to customize the auth behavior \n\n\n\n# How to run\n\n\\`\\`\\`bash\n$ cd into this folder\n$ npm install or npm i\n$ npm run dev\n$ now look at the terminal\n\\`\\`\\`\n`","export default name => `# Generated json-server API for ${name} model\nThis json-graphql0server api was generated via [pollux](https://mohammedal-rowad.github.io/pollux/)\nand it runs using [json-graphql-server](https://github.com/marmelab/json-graphql-server), please read json-server docs for more info.\n\n\n# How to run\n\n\\`\\`\\`bash\n$ cd into this folder\n$ npm install or npm i\n$ npm run dev\n$ now look at the terminal\n\\`\\`\\`\n`","import Emittery from 'emittery'\n\nexport const eventEmitter = new Emittery()\n","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport worker from 'workerize-loader!./dataGenerateWebWorker'\nimport { eventEmitter } from './eventEmitter'\n\n// this runs in a web worker\nexport const spawnWebWorker = async ({ props, amount, modelId, relations, relationsProps }) => {\n  const maxWorkers = navigator.hardwareConcurrency || 4\n  console.log(`%cUsing ${maxWorkers} workers`, 'color: lightsalmon;')\n  const allWorkers = Array.from({ length: maxWorkers }).map(() => {\n    const webWorker = worker()\n    webWorker.onmessage = ({ data }) => {\n      // here you have an access to the window object!\n      eventEmitter.emit(data.type, { ...data })\n    }\n    return webWorker.startGenerating(props, amount / maxWorkers, modelId, relations, relationsProps)\n  })\n\n  return await Promise.all(allWorkers)\n}\n","import { Alert } from 'rsuite'\nimport * as faker from 'faker'\nimport { saveAs } from 'file-saver'\nimport RandExp from 'randexp'\nimport JSZip from 'jszip'\nimport npmCongif from '../../../../zipFileContent/package.json'\nimport apiReadme from '../../../../zipFileContent/readme.md'\nimport npmCongifGraphql from '../../../../graphqlZipContent/package.json'\nimport graphqlReadme from '../../../../graphqlZipContent/readme.md'\n\nimport { spawnWebWorker } from '../../webWorker'\n\n/**\n *\n * @param {Array<any>} props\n * @param {string} name\n * @param {number} amount\n * @param {Array<any>} relations\n * @param {object} relationsProps\n * @param {boolean} justReturn\n * @param {string} modelId\n */\nexport const generate = (\n  props,\n  name,\n  amount,\n  relations,\n  relationsProps,\n  justReturn,\n  modelId,\n  onlyJSON = false\n) => {\n  if (!props) {\n    Alert.warning(`plz add some properties to this model (${name})`)\n    return\n  }\n  const atLeastOneWithoutFunc = props\n    .filter(({ func }) => !func)\n    .map(({ propName }) => propName)\n  const len = atLeastOneWithoutFunc.length\n  if (len > 0) {\n    Alert.warning(\n      `There is ${len} ${\n        len === 1 ? 'property' : 'properties'\n      } without function ${atLeastOneWithoutFunc.join(' || ')}`\n    )\n    return\n  }\n\n  if ((!window.Worker || amount < 10000 || relations) && !onlyJSON) {\n    if (amount > 10000) {\n      Alert.info(\n        'This browser do not support web workers, generating data on the main thread 🧵'\n      )\n    }\n    const res = generateFakeData(props, amount)\n    if (relations) {\n      const resWithRelations = res.map((obj) => ({\n        ...obj,\n        ...relations.reduce(\n          (prev, { name, id }) => ({\n            ...prev,\n            [name]: generateFakeData(relationsProps[id], 10),\n          }),\n          {}\n        ),\n      }))\n      if (justReturn) {\n        return resWithRelations\n      }\n      downloadData(resWithRelations, name)\n    } else {\n      if (justReturn) {\n        return res\n      }\n      downloadData(res, name)\n    }\n  } else {\n    return spawnWebWorker({ props, amount, modelId, relations, relationsProps })\n      .then((result) => {\n        const data = result.flat()\n        // see https://stackoverflow.com/questions/29175877/json-stringify-throws-rangeerror-invalid-string-length-for-huge-objects\n        // stringify-ing the whole array might cause (RangeError: Invalid string length) error\n        // which means \"Out Of Memory\"\n        const outJSON = '[' + data.map((el) => toJSONPritty(el)).join(',') + ']'\n\n        if (justReturn) {\n          return outJSON\n        }\n        saveAs(new Blob([outJSON], { type: 'application/json' }), name)\n        Alert.success(`Downloaded ${name}.json 👍`)\n      })\n      .catch((error) => {\n        console.group('Error generating data')\n        console.log('the error object')\n        console.error(error)\n        console.log('you can open an issue with this error in the link below')\n        console.log('https://github.com/MohammedAl-Rowad/pollux')\n        console.groupEnd()\n        Alert.success('Feels bad, we faced an error')\n      })\n  }\n}\n\n/**\n *\n * @param {Array<any>} props\n * @param {number} amount\n */\nconst generateFakeData = (props, amount) =>\n  Array.from({ length: amount }).map(() => {\n    return props.reduce(\n      (prev, { propName, groupName, func, regex: regexStr }) => {\n        if (\n          groupName === 'image' ||\n          (groupName === 'random' && func === 'image')\n        ) {\n          return {\n            ...prev,\n            [propName]: faker.random.arrayElement([\n              'http://placekitten.com/500/600',\n              'http://placekitten.com/1200/600',\n              'http://placekitten.com/1200/1200',\n            ]),\n          }\n        }\n        const key = func === 'fullName' ? 'findName' : func\n        if (key === 'regex') {\n          const randexp = new RandExp(regexStr)\n          return {\n            ...prev,\n            [propName]: randexp.gen(),\n          }\n        }\n\n        return {\n          ...prev,\n          [propName]: faker[groupName][key](),\n        }\n      },\n      {}\n    )\n  })\n\n/**\n *\n * @param {Array<any>} data\n * @param {string} name\n */\nconst downloadData = (data, name) => {\n  saveAs(new Blob([toJSONPritty(data)], { type: 'application/json' }), name)\n  Alert.success(`Downloaded ${name}.json 👍`)\n}\n\n/**\n *\n * @param {Array<any>} data\n */\nconst toJSONPritty = (data) => JSON.stringify(data, null, 2)\n\n/**\n *\n * @param {objcet} state - redux-state\n * @param {string} modelId - the uuid for the model in redux\n */\nexport const relationsPropsGetter = (state, modelId) =>\n  (state.relations[modelId] || []).reduce(\n    (prev, id) => ({ ...prev, [id]: state.prop[id] }),\n    {}\n  )\n\n/**\n *\n * @param {objcet} state - redux-state\n * @param {string} modelId - the uuid for the model in redux\n */\nexport const relationsGetter = (state, modelId) =>\n  (state.relations[modelId] || []).map((uuid) =>\n    state.models.find(({ id }) => uuid === id)\n  )\n\n/**\n *\n * @param {string} name - the model name\n * @param {Array<any>} props\n * @param {number} amount\n * @param {Array<any>} relations\n * @param {object} relationsProps\n * @param {Array<any> | undefined | null} data\n * @param {boolean} auth\n * @param {string} modelId\n */\nexport const generateAPI = async (\n  name,\n  props,\n  amount,\n  relations,\n  relationsProps,\n  data,\n  auth,\n  modelId\n) => {\n  try {\n    if (!props && !data) {\n      Alert.warning(`plz add some properties to this model (${name})`)\n      return\n    }\n    const zip = new JSZip()\n    zip.file('package.json', toJSONPritty(npmCongif(auth)))\n    zip.file(\n      'db.json',\n      toJSONPritty(\n        data\n          ? data\n          : {\n              [name]: generate(\n                props,\n                name,\n                amount,\n                relations,\n                relationsProps,\n                true,\n                modelId\n              ),\n            }\n      )\n    )\n    zip.file('README.md', apiReadme(name))\n    zip.file('routes.json', toJSONPritty({ [name]: 660 }))\n    const zipContent = await zip.generateAsync({ type: 'blob' })\n    saveAs(zipContent, 'pollux-api.zip')\n    Alert.success(`Downloaded pollux-api.zip 👍`)\n  } catch (error) {\n    Alert.error(\n      'Something went wrong while generating your API, please checkout the console'\n    )\n    console.group('Error generating the API')\n    console.log('the error object')\n    console.error(error)\n    console.log('you can open an issue with this error in the link below')\n    console.log('https://github.com/MohammedAl-Rowad/pollux')\n    console.groupEnd()\n  }\n}\n\n/**\n *\n * @param {string} name - the model name\n * @param {Array<any>} props\n * @param {number} amount\n * @param {Array<any>} relations\n * @param {object} relationsProps\n * @param {Array<any> | undefined} data\n * @param {string} modelId\n */\nexport const generateGraphqlAPI = async (\n  name,\n  props,\n  amount,\n  relations,\n  relationsProps,\n  modelId\n) => {\n  try {\n    if (!props) {\n      Alert.warning(`plz add some properties to this model (${name})`)\n      return\n    }\n    const zip = new JSZip()\n    zip.file('package.json', toJSONPritty(npmCongifGraphql()))\n    const jsonStr = await generate(\n      props,\n      name,\n      amount,\n      relations,\n      relationsProps,\n      true,\n      modelId,\n      true\n    )\n\n    zip.file('db.json', '{\"' + name + '\":' + jsonStr + '}')\n    zip.file('README.md', graphqlReadme(name))\n\n    const zipContent = await zip.generateAsync({ type: 'blob' })\n    saveAs(zipContent, 'pollux-graphql.zip')\n\n    Alert.success(`Downloaded pollux-graphql.zip 👍`)\n  } catch (error) {\n    Alert.error(\n      'Something went wrong while generating your API, please checkout the console'\n    )\n    console.group('Error generating the GraphQL API')\n    console.log('the error object')\n    console.error(error)\n    console.log('you can open an issue with this error in the link below')\n    console.log('https://github.com/MohammedAl-Rowad/pollux')\n    console.groupEnd()\n  }\n}\n","export default () => ({\n  description:\n    'The file is generated using https://mohammedal-rowad.github.io/pollux/',\n  scripts: {\n    dev: 'json-graphql-server db.json --p 3001' \n  },\n  author: 'Rowadz',\n  license: 'MIT',\n  dependencies: {\n    'json-graphql-server': '^2.3.1',\n  },\n})\n","import React, { memo } from 'react'\nimport { SiJavascript, SiPython, SiPhp, SiRuby } from 'react-icons/si'\nimport { DiMysql } from 'react-icons/di'\n\nconst RenderLangIcon = ({ lang }) => {\n  return (\n    <>\n      {lang === 'php' && <SiPhp color=\"#474A8A\" />}\n      {lang === 'python' && <SiPython color=\"#34709f\" />}\n      {lang === 'javascript' && <SiJavascript color=\"#e8d44d\" />}\n      {lang === 'ruby' && <SiRuby color=\"#e51521\" />}\n      {lang === 'sql' && <DiMysql color=\"#F2913D\" />}\n    </>\n  )\n}\n\nexport default memo(RenderLangIcon)\n","import React, { useEffect, useState } from 'react'\nimport { Button, Modal, Alert, IconButton, Icon } from 'rsuite'\nimport { generate } from '../../util'\nimport RenderLangIcon from './RenderLangIcon'\nimport CodeMirror from '@uiw/react-codemirror'\nimport { oneDark } from '@codemirror/theme-one-dark'\nimport { javascript } from '@codemirror/lang-javascript'\nimport { php } from '@codemirror/lang-php'\nimport { StreamLanguage } from '@codemirror/stream-parser'\nimport { format } from 'sql-formatter'\nimport { ruby } from '@codemirror/legacy-modes/mode/ruby'\nimport { python } from '@codemirror/legacy-modes/mode/python'\nimport { sql } from '@codemirror/legacy-modes/mode/sql'\nimport json2php from 'json2php'\nimport dayjs from 'dayjs'\n\n/**\n *\n * @param {any} data\n */\nconst formatRuby = (data) =>\n  typeof data === 'number'\n    ? data\n    : dayjs(data).isValid()\n    ? `'${dayjs(data).toISOString()}'`\n    : `'${data}'`\n\nconst CodeGenerator = ({\n  id,\n  lang,\n  props,\n  name,\n  amount,\n  relations,\n  setShowModal,\n  relationsProps,\n}) => {\n  const [code, setCode] = useState('')\n  useEffect(() => {\n    const data =\n      generate(\n        props,\n        name,\n        amount > 10_000 ? 10_000 : amount,\n        relations,\n        relationsProps,\n        true,\n        id\n      ) || []\n\n    if (lang === 'javascript') {\n      setCode(`const data = ${JSON.stringify(data, null, 2)};`)\n    } else if (lang === 'php') {\n      const phpArrayStr = json2php(JSON.parse(JSON.stringify(data, null, 2)))\n      const phpArrayStrWithNewLines = `${phpArrayStr};`\n        .replaceAll('array(array', 'array(\\n array')\n        .replaceAll('),', '), \\n')\n        .replaceAll(',', ', \\n')\n        .replace('));', ')\\n );')\n      setCode(`$data = ${phpArrayStrWithNewLines}`)\n    } else if (lang === 'ruby') {\n      // prettier-ignore\n      const rubyCode = data.map(obj => {\n            return `{` + Object.keys(obj).reduce(\n                (prev, curr) => `${curr}: ${isNaN(obj[curr]) ? `'${obj[curr]}'` : formatRuby(obj[curr]) }, ${prev}`, '') + `}`\n        }).map(str => {\n            const lastIndexOf = str.lastIndexOf(', ')\n            return str.slice(0, lastIndexOf) + str.slice(lastIndexOf + 2)\n        }).join(',\\n').replaceAll(',', ', \\n')\n\n      setCode(`[\\n${rubyCode}\\n]`)\n    } else if (lang === 'python') {\n      setCode(`data = ${JSON.stringify(data, null, 2)}`)\n    } else if (lang === 'sql') {\n      const data =\n        generate(\n          props,\n          name,\n          amount > 10_000 ? 10_000 : amount,\n          relations,\n          relationsProps,\n          true,\n          id\n        ) || []\n      const values = data.map(Object.values)\n      const res = []\n      for (const list of values) {\n        let str = '( '\n        for (const [index, value] of list.entries()) {\n          const comma = index === list.length - 1 ? ' ' : ', '\n          if (isNaN(value)) {\n            str += `\"${value}\"${comma}`\n          } else {\n            str += `${formatRuby(value)}${comma}`\n          }\n        }\n        str += ')'\n        res.push(str)\n      }\n      const sqlValues = res.join(', ')\n      const sql = `\n          INSERT INTO ${name} \n          VALUES ${sqlValues}\n        `\n      setCode(format(sql))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Modal size=\"lg\" full show={true} onHide={() => setShowModal(false)}>\n      <Modal.Header>\n        <Modal.Title>\n          Copy this <RenderLangIcon lang={lang} /> code\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ height: 700, overflow: 'hidden' }}>\n        <IconButton\n          appearance=\"ghost\"\n          style={{ marginBottom: '5px' }}\n          icon={<Icon icon=\"copy-o\" />}\n          onClick={() => {\n            navigator.clipboard\n              .writeText(code)\n              .then(() => {\n                Alert.info('Copied!')\n              })\n              .catch((error) => {\n                console.error(error)\n                Alert.error('Error')\n              })\n          }}\n        >\n          Copy\n        </IconButton>\n\n        <CodeMirror\n          extensions={[\n            javascript({ jsx: true }),\n            php(),\n            StreamLanguage.define(ruby),\n            StreamLanguage.define(ruby),\n            StreamLanguage.define(sql),\n            StreamLanguage.define(python),\n          ]}\n          theme={oneDark}\n          value={code}\n          height=\"300px\"\n          readOnly\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={() => setShowModal(false)} appearance=\"subtle\">\n          close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default CodeGenerator\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { FlexboxGrid, Progress } from 'rsuite'\nimport { useSelector } from 'react-redux'\nimport { eventEmitter } from 'components/generate/webWorker/eventEmitter'\n\nconst WebWorkerProgress = ({ modelId, relations }) => {\n  const [generated, setGenereated] = useState(0)\n  const [startedWorkersCount, setStartedWorkersCount] = useState(0)\n  const [currentWebWorkerModelId, setModelId] = useState('')\n  // const [started, setStarted] = useState(false)\n  const modelSelector = useCallback(\n    (state) => state.models.filter(({ id }) => id === modelId)[0],\n    [modelId]\n  )\n\n  const relCount = relations.reduce((prev, { amount }) => prev + amount, 0)\n  const model = useSelector(modelSelector)\n  const totalNumberOfDocumentsToBeGenerated = relCount\n    ? model?.amount * relCount\n    : model?.amount\n\n  useEffect(() => {\n    eventEmitter.on('DOCUMENT_GENERATED', () => {\n      setGenereated((prev) => prev + 1)\n    })\n    eventEmitter.on(\n      'STARTED',\n      (() => {\n        const maxWorkers = navigator.hardwareConcurrency || 4\n        let counter = 0\n        return ({ modelId }) => {\n          counter++\n          setStartedWorkersCount((prev) => prev + 1)\n          // setStarted(true)\n          setModelId(modelId)\n          if (counter === maxWorkers) {\n            setTimeout(() => setGenereated(0), 1000)\n            counter = 0\n          }\n        }\n      })()\n    )\n    eventEmitter.on(\n      'STOPPED',\n      (() => {\n        const maxWorkers = navigator.hardwareConcurrency || 4\n        let counter = 0\n        return () => {\n          counter++\n          // means that all the workers are done\n          if (counter === maxWorkers) {\n            setTimeout(() => setGenereated(0), 1000)\n            setTimeout(() => setStartedWorkersCount(0), 1000)\n            counter = 0\n          } else {\n            setStartedWorkersCount((prev) => prev - 1)\n          }\n        }\n      })()\n    )\n  }, [])\n\n  if (!generated || currentWebWorkerModelId !== modelId) {\n    return null\n  }\n\n  return (\n    <FlexboxGrid justify=\"center\" style={{ marginTop: '1rem' }}>\n      <FlexboxGrid.Item>\n        <FlexboxGrid\n          justify=\"center\"\n          style={{ flexDirection: 'column' }}\n          align=\"middle\"\n        >\n          <div>\n            Data denerated <b>{generated?.toLocaleString() || generated}</b> /{' '}\n            {totalNumberOfDocumentsToBeGenerated?.toLocaleString() ||\n              totalNumberOfDocumentsToBeGenerated}\n          </div>\n          <div style={{ width: 80 }}>\n            <Progress.Circle\n              percent={(\n                (generated / totalNumberOfDocumentsToBeGenerated) *\n                100\n              ).toFixed(2)}\n              status={\n                generated === totalNumberOfDocumentsToBeGenerated\n                  ? 'success'\n                  : 'active'\n              }\n            />\n          </div>\n        </FlexboxGrid>\n      </FlexboxGrid.Item>\n      <FlexboxGrid.Item style={{ flexGrow: 0.4 }} />\n      <FlexboxGrid.Item>\n        <FlexboxGrid\n          justify=\"center\"\n          style={{ flexDirection: 'column' }}\n          align=\"middle\"\n        >\n          <div>\n            Workers running <b>{startedWorkersCount}</b> /{' '}\n            {navigator.hardwareConcurrency || 4}\n          </div>\n          <div style={{ width: 80, marginLeft: 20 }}>\n            <Progress.Circle\n              strokeColor=\"#ffc107\"\n              showInfo={false}\n              percent={Math.floor(\n                (startedWorkersCount / (navigator.hardwareConcurrency || 4)) *\n                  100\n              )}\n            />\n          </div>\n        </FlexboxGrid>\n      </FlexboxGrid.Item>\n    </FlexboxGrid>\n  )\n}\n\nexport default WebWorkerProgress\n","import React, { memo } from 'react'\nimport { useDrop } from 'react-dnd'\nimport { v4 } from 'uuid'\nimport { useDispatch } from 'react-redux'\nimport { justAddProp } from 'redux/actions'\nimport { SiGraphql } from 'react-icons/si'\nimport {\n  Tag,\n  Whisper,\n  Tooltip,\n  Badge,\n  IconButton,\n  Panel,\n  Icon,\n  Alert,\n} from 'rsuite'\nimport { generateAPI, generateGraphqlAPI } from '../../util'\nimport { FakerPolluxReduxStoreState, ModelHeaderProps } from './types'\n\nexport const ModelHeader = ({\n  id,\n  name,\n  faker,\n  props,\n  amount,\n  relations,\n  relationsProps,\n  auth,\n  isTourOpen,\n  propsCount,\n  checkedModels,\n  openCreateRelModal,\n  disableModalControllers,\n}: ModelHeaderProps) => {\n  console.log({ relationsProps })\n  const dispatch = useDispatch()\n  const [{ canDrop, hovered }, drop] = useDrop({\n    accept: [\n      'UUID',\n      'Email',\n      'Password',\n      'Full Name',\n      'Paragraphs',\n      'REGEX',\n      'Paragraph',\n      'IP',\n      'Image',\n      ...faker.map(({ groupName }: FakerPolluxReduxStoreState) => groupName),\n    ], // TODO:: why hardcoded\n    canDrop() {\n      return true\n    },\n    collect(monitor) {\n      return {\n        canDrop: monitor && monitor.canDrop(),\n        hovered: monitor && monitor.isOver(),\n      }\n    },\n    drop({ data }: any) {\n      dispatch(justAddProp({ uuid: id, props: [{ ...data, id: v4() }] } as any))\n      Alert.success(`Added the ${data.propName} props`)\n    },\n  })\n\n  return (\n    <>\n      Model name {name}\n      {\n        <Tag\n          color=\"cyan\"\n          style={{ marginLeft: '5px' }}\n          id={isTourOpen ? 'prop-tag-count' : null}\n        >\n          {propsCount}\n        </Tag>\n      }\n      <Whisper\n        placement=\"right\"\n        trigger=\"hover\"\n        speaker={\n          <Tooltip>\n            Click here to create a relationship with other models\n          </Tooltip>\n        }\n      >\n        {checkedModels.size ? (\n          <Badge content={checkedModels.size}>\n            <IconButton\n              disabled={disableModalControllers}\n              id={isTourOpen ? 'create-a-relationship-btn' : null}\n              icon={<Icon icon=\"link\" />}\n              style={{ marginLeft: '5px' }}\n              size=\"xs\"\n              onClick={openCreateRelModal}\n            >\n              Create 1:m relations\n            </IconButton>\n          </Badge>\n        ) : (\n          <IconButton\n            id={isTourOpen ? 'create-a-relationship-btn' : null}\n            icon={<Icon icon=\"link\" />}\n            style={{ marginLeft: '5px' }}\n            size=\"xs\"\n            disabled={disableModalControllers}\n            onClick={openCreateRelModal}\n          >\n            Create 1:m relations\n          </IconButton>\n        )}\n      </Whisper>\n      <Whisper\n        placement=\"right\"\n        trigger=\"hover\"\n        speaker={\n          <Tooltip>\n            Click here to generate a json-server API from this model\n          </Tooltip>\n        }\n      >\n        <IconButton\n          id={isTourOpen ? 'create-a-api-btn' : null}\n          icon={<Icon icon=\"twinkle-star\" />}\n          size=\"xs\"\n          disabled={disableModalControllers}\n          style={{ marginLeft: '5px' }}\n          onClick={() =>\n            generateAPI(\n              name,\n              props,\n              amount,\n              relations,\n              relationsProps,\n              null,\n              auth,\n              id\n            )\n          }\n        >\n          Generate Restful API\n        </IconButton>\n      </Whisper>\n      <Whisper\n        placement=\"right\"\n        trigger=\"hover\"\n        speaker={\n          <Tooltip>\n            Click here to generate a GraphQL API from this model\n          </Tooltip>\n        }\n      >\n        <IconButton\n          id={isTourOpen ? 'create-a-graphql-btn' : null}\n          icon={\n            <i className=\"rs-icon\">\n              <SiGraphql color=\"#dd34a6\" />\n            </i>\n          }\n          size=\"xs\"\n          disabled={disableModalControllers}\n          style={{ marginLeft: '5px' }}\n          onClick={() =>\n            generateGraphqlAPI(\n              name,\n              props,\n              amount,\n              relations,\n              relationsProps,\n              id\n            )\n          }\n        >\n          Generate GraphQL API\n        </IconButton>\n      </Whisper>\n      <div ref={drop}>\n        <Panel\n          shaded\n          style={{\n            backgroundColor: hovered ? '#8BCAD9' : canDrop ? '#5E6D8C' : '',\n            height: 50,\n            marginTop: 10,\n            // color: hovered ? '#000' : '#fff',\n          }}\n        >\n          <Badge style={{ background: '#1b9cb0' }} /> Drop Props Here{' '}\n          <Badge style={{ background: '#1b9cb0' }} />\n        </Panel>\n      </div>\n    </>\n  )\n}\n\nexport default memo(ModelHeader)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { SiJavascript, SiPython, SiPhp, SiRuby } from 'react-icons/si'\nimport { DiMysql } from 'react-icons/di'\nimport { Flipper, Flipped } from 'react-flip-toolkit'\nimport {\n  Icon,\n  IconButton,\n  Panel,\n  PanelGroup,\n  Grid,\n  Row,\n  Col,\n  Whisper,\n  Tooltip,\n  FlexboxGrid,\n  InputNumber,\n  ButtonGroup,\n  Button,\n  Dropdown,\n} from 'rsuite'\nimport ConfirmDel from './ConfirmDel'\nimport PropsDisplay from './PropsDisplay'\nimport AddProp from './AddProp'\nimport CreateRel from './CreateRel'\nimport { generate, relationsPropsGetter, relationsGetter } from '../../util'\n\nimport {\n  deleteModel,\n  addPropName,\n  removeAllProps,\n  updateAmount,\n} from 'redux/actions'\nimport CodeGenerator from './CodeGenerator'\nimport RenderLangIcon from './RenderLangIcon'\nimport WebWorkerProgress from './WebWorkerProgress'\nimport { eventEmitter } from 'components/generate/webWorker/eventEmitter'\nimport ModelHeader from './ModelHeader'\n\nconst Model = ({\n  dispatch,\n  model: { id, name, amount },\n  propsCount,\n  props,\n  relations,\n  relationsProps,\n  isTourOpen,\n  faker,\n  auth,\n  checkedModels,\n}) => {\n  const [fullScreen, setFullScreen] = useState(false)\n  const [state, setState] = useState({\n    showConfirmModal: false,\n    showPropNameModal: false,\n    showCreateRel: false,\n    amount: 10,\n  })\n\n  useEffect(() => {\n    setFullScreen((prevState) => !prevState)\n  }, [])\n\n  const [lang, setLang] = useState('ruby')\n  const [showModal, setShowModal] = useState(false)\n  const [disableModalControllers, setDisableModalControllers] = useState(false)\n\n  useEffect(() => {\n    eventEmitter.on('STARTED', () => {\n      setDisableModalControllers(true)\n    })\n    eventEmitter.on(\n      'STOPPED',\n      (() => {\n        const maxWorkers = navigator.hardwareConcurrency || 4\n        let counter = 0\n        return () => {\n          counter++\n          // means that all the workers are done\n          if (counter === maxWorkers) {\n            setDisableModalControllers(false)\n            counter = 0\n          }\n        }\n      })()\n    )\n  }, [])\n\n  const delToolTip = (\n    <Tooltip>\n      Click here to <b>Delete</b> this model {'`'}\n      {name}\n      {'`'}.\n    </Tooltip>\n  )\n  const addKeyTip = <Tooltip>Click here to add an attribute.</Tooltip>\n  const generateTip = (\n    <Tooltip>\n      Click here to <b>generate</b> a json for this model.\n    </Tooltip>\n  )\n  const closeConfirmModal = () =>\n    setState({\n      ...state,\n      showConfirmModal: false,\n      showPropNameModal: false,\n      showCreateRel: false,\n    })\n  const openConfirmModal = () =>\n    setState({ ...state, showConfirmModal: true, showCreateRel: false })\n  const openPropNameModal = () =>\n    setState({\n      ...state,\n      showConfirmModal: false,\n      showCreateRel: false,\n      showPropNameModal: true,\n    })\n\n  const openCreateRelModal = () =>\n    setState({\n      ...state,\n      showConfirmModal: false,\n      showPropNameModal: false,\n      showCreateRel: true,\n    })\n\n  const del = (id) => {\n    closeConfirmModal()\n    dispatch(removeAllProps(id))\n    dispatch(deleteModel(id))\n  }\n\n  const changeAmount = (val) => {\n    setState({ ...state, amount: +val })\n    dispatch(updateAmount({ modelId: id, amount: +val }))\n  }\n\n  const addProp = (name) => dispatch(addPropName({ propName: name, uuid: id }))\n\n  return (\n    <Flipper flipKey={fullScreen}>\n      <Flipped flipId=\"square-model\">\n        <section\n          style={{\n            marginTop: 20,\n            ...(fullScreen\n              ? { width: '100%', height: '100%' }\n              : { width: 0, height: 0 }),\n          }}\n        >\n          <PanelGroup bordered>\n            <Panel\n              shaded\n              header={\n                <ModelHeader\n                  amount={amount}\n                  id={id}\n                  auth={auth}\n                  checkedModels={checkedModels}\n                  disableModalControllers={disableModalControllers}\n                  faker={faker}\n                  isTourOpen={isTourOpen}\n                  name={name}\n                  openCreateRelModal={openCreateRelModal}\n                  props={props}\n                  propsCount={propsCount}\n                  relations={relations}\n                  relationsProps={relationsProps}\n                />\n              }\n            >\n              <Grid fluid>\n                <Row>\n                  <Col xs={24} sm={24} md={24}>\n                    <FlexboxGrid justify=\"start\">\n                      <FlexboxGrid.Item>\n                        <Whisper\n                          placement=\"right\"\n                          trigger=\"hover\"\n                          speaker={addKeyTip}\n                        >\n                          <IconButton\n                            disabled={disableModalControllers}\n                            icon={<Icon icon=\"plus\" />}\n                            size=\"xs\"\n                            id={isTourOpen ? 'add-attribute-btn' : null}\n                            onClick={openPropNameModal}\n                          >\n                            Add attribute\n                          </IconButton>\n                        </Whisper>\n                      </FlexboxGrid.Item>\n                      <FlexboxGrid.Item>\n                        <Whisper\n                          placement=\"right\"\n                          trigger=\"hover\"\n                          speaker={generateTip}\n                        >\n                          <IconButton\n                            id={isTourOpen ? 'generate-data-btn' : null}\n                            style={{ marginLeft: '5px' }}\n                            size=\"xs\"\n                            disabled={disableModalControllers}\n                            icon={<Icon icon=\"magic2\" />}\n                            onClick={() =>\n                              generate(\n                                props,\n                                name,\n                                amount,\n                                relations,\n                                relationsProps,\n                                false,\n                                id,\n                                true\n                              )\n                            }\n                          >\n                            Generate JSON\n                          </IconButton>\n                        </Whisper>\n                      </FlexboxGrid.Item>\n                      <FlexboxGrid.Item>\n                        <Whisper\n                          placement=\"right\"\n                          trigger=\"hover\"\n                          speaker={\n                            <Tooltip>\n                              Click here to generate a <b>{lang}</b> code for\n                              this model for .\n                            </Tooltip>\n                          }\n                        >\n                          <ButtonGroup style={{ marginLeft: '5px' }}>\n                            <Button\n                              disabled={disableModalControllers}\n                              onClick={() => setShowModal(true)}\n                              size=\"xs\"\n                            >\n                              <RenderLangIcon lang={lang} />\n                            </Button>\n                            <Dropdown\n                              disabled={disableModalControllers}\n                              placement=\"bottomEnd\"\n                              onSelect={(selectedLang) => {\n                                setLang(selectedLang)\n                              }}\n                              renderTitle={() => {\n                                return (\n                                  <IconButton\n                                    size=\"xs\"\n                                    icon={<Icon icon=\"angle-double-down\" />}\n                                  />\n                                )\n                              }}\n                            >\n                              <Dropdown.Item\n                                eventKey=\"php\"\n                                icon={<SiPhp size=\"1rem\" color=\"#474A8A\" />}\n                              />\n                              <Dropdown.Item\n                                eventKey=\"python\"\n                                icon={<SiPython size=\"1rem\" color=\"#34709f\" />}\n                              />\n                              <Dropdown.Item\n                                eventKey=\"javascript\"\n                                icon={\n                                  <SiJavascript size=\"1rem\" color=\"#e8d44d\" />\n                                }\n                              />\n                              <Dropdown.Item\n                                eventKey=\"ruby\"\n                                icon={<SiRuby size=\"1rem\" color=\"#e51521\" />}\n                              />\n                              <Dropdown.Item\n                                eventKey=\"sql\"\n                                icon={<DiMysql size=\"1rem\" color=\"#F2913D\" />}\n                              />\n                            </Dropdown>\n                          </ButtonGroup>\n                        </Whisper>\n                      </FlexboxGrid.Item>\n                      <FlexboxGrid.Item style={{ marginLeft: '5px' }}>\n                        <InputNumber\n                          size=\"xs\"\n                          disabled={disableModalControllers}\n                          defaultValue={amount}\n                          max={1000000}\n                          min={1}\n                          onChange={changeAmount}\n                        />\n                      </FlexboxGrid.Item>\n                    </FlexboxGrid>\n\n                    <WebWorkerProgress\n                      modelId={id}\n                      relations={relations}\n                      relationsProps={relationsProps}\n                    />\n\n                    <Whisper\n                      placement=\"left\"\n                      trigger=\"hover\"\n                      speaker={delToolTip}\n                    >\n                      <IconButton\n                        icon={<Icon icon=\"minus\" />}\n                        style={{ float: 'right' }}\n                        color=\"red\"\n                        disabled={disableModalControllers}\n                        size=\"xs\"\n                        circle\n                        onClick={openConfirmModal}\n                      />\n                    </Whisper>\n                    <ConfirmDel\n                      id={id}\n                      del={del}\n                      closeConfirmModal={closeConfirmModal}\n                      name={name}\n                      showConfirmModal={state.showConfirmModal}\n                    />\n                    <AddProp\n                      id={id}\n                      showPropNameModal={state.showPropNameModal}\n                      closeConfirmModal={closeConfirmModal}\n                      name={name}\n                      addProp={addProp}\n                    />\n                    {isTourOpen ? (\n                      ''\n                    ) : (\n                      <CreateRel\n                        showCreateRel={state.showCreateRel}\n                        id={id}\n                        close={closeConfirmModal}\n                      />\n                    )}\n                  </Col>\n                  <Col\n                    xs={24}\n                    sm={24}\n                    md={24}\n                    style={{ textAlign: 'right', marginTop: '10px' }}\n                  >\n                    <PropsDisplay\n                      id={id}\n                      modelName={name}\n                      disableModalControllers={disableModalControllers}\n                    />\n                  </Col>\n                </Row>\n              </Grid>\n            </Panel>\n          </PanelGroup>\n          {showModal && (\n            <CodeGenerator\n              setShowModal={setShowModal}\n              lang={lang}\n              name={name}\n              amount={amount}\n              id={id}\n              props={props}\n              relations={relations}\n              relationsProps={relationsProps}\n              key={`${showModal}-${lang}`}\n            />\n          )}\n        </section>\n      </Flipped>\n    </Flipper>\n  )\n}\n\nexport default connect((state, ownProps) => ({\n  ...ownProps,\n  propsCount: (state.prop[ownProps.model.id] || []).length,\n  props: state.prop[ownProps.model.id],\n  relations: relationsGetter(state, ownProps.model.id),\n  relationsProps: relationsPropsGetter(state, ownProps.model.id),\n  faker: state.faker,\n  auth: state.auth,\n  checkedModels: new Set(state.relations[ownProps.model.id] || []),\n}))(Model)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Panel, PanelGroup } from 'rsuite'\nimport empty from './empty.svg'\nimport Model from './ModelsComponents/Model'\n\nconst Models = ({ models, isTourOpen }) => {\n  const modelsEls =\n    models.length > 0 ? (\n      models.map((model, i) => <Model model={model} key={i} />)\n    ) : (\n      <Panel\n        bordered\n        header=\"Add models to start!\"\n        style={{ textAlign: 'center' }}\n      >\n        <img src={empty} with={'100%'} height={'200px'} alt=\"empty-img\" />\n      </Panel>\n    )\n  return (\n    <section id=\"models-section\">\n      {isTourOpen ? (\n        <Model\n          model={{ id: '', name: 'Demo', createdAt: +new Date() }}\n          isTourOpen={isTourOpen}\n        />\n      ) : (\n        <PanelGroup>{modelsEls}</PanelGroup>\n      )}\n    </section>\n  )\n}\n\nexport default connect((models) => models)(Models)\n","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Checkbox } from 'rsuite'\nimport { connect } from 'react-redux'\nimport emptySave from './emptySave.svg'\nimport { Alert } from 'rsuite'\nconst { Header, Body, Footer, Title } = Modal\n\nconst SaveModel = ({ models, prop }) => {\n  const [state, setState] = useState({\n    showModalSave: false,\n    toSave: [],\n    modelsKey: 'models',\n  })\n  const showModalSave = () =>\n    setState({ ...state, toSave: [], showModalSave: true })\n  const close = () => setState({ ...state, showModalSave: false })\n  const save = () => {\n    const toSave = models.map(({ id, ...rest }) => ({\n      props: prop[id],\n      id,\n      ...rest,\n    }))\n    const toSaveSet = new Set(toSave.map(({ id }) => id))\n    // to preserve the old models and override if the user changed the same one!\n    const saved = (\n      JSON.parse(localStorage.getItem(state.modelsKey)) || []\n    ).filter(({ id }) => !toSaveSet.has(id))\n    const realToSave = [...saved, ...toSave]\n    localStorage.setItem(state.modelsKey, JSON.stringify(realToSave))\n    Alert.success(\n      `Saved models [ ${toSave.map(({ name }) => name).join(' || ')} ]`\n    )\n  }\n  const toSave = (model, checked) => {\n    if (checked) {\n      setState({ ...state, toSave: [...state.toSave, model] })\n    } else {\n      setState({\n        ...state,\n        toSave: [...state.toSave.filter(({ id }) => id !== model.id)],\n      })\n    }\n  }\n  const modelsEl = models.length ? (\n    models.map(({ name, id }) => (\n      <Checkbox name={name} onChange={toSave} key={id} value={{ name, id }}>\n        {name}\n      </Checkbox>\n    ))\n  ) : (\n    <div style={{ textAlign: 'center' }}>\n      <img src={emptySave} height=\"100\" width={'100%'} alt=\"no models img\" />\n      <p>You need to create some models to save them </p>\n    </div>\n  )\n  return (\n    <section style={{ display: 'inline' }}>\n      <IconButton\n        size=\"xs\"\n        id=\"save-model-btn\"\n        icon={<Icon icon=\"save\" />}\n        onClick={showModalSave}\n      >\n        Save Model\n      </IconButton>\n      <Modal\n        show={state.showModalSave}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>You can save a model here, then load it</Title>\n        </Header>\n        <Body>{modelsEl}</Body>\n        <Footer>\n          <Button\n            onClick={save}\n            appearance=\"primary\"\n            disabled={models.length === 0}\n          >\n            Save\n          </Button>\n          <Button onClick={close} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect(({ models, prop }, ownProps) => ({\n  ...ownProps,\n  models,\n  prop,\n}))(SaveModel)\n","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Divider } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { Alert } from 'rsuite'\nimport loadModelsEmpty from './loadModels.svg'\nimport { addModel, justAddProp } from 'redux/actions'\nconst { Header, Body, Footer, Title } = Modal\n\nconst LoadModel = ({ dispatch, models }) => {\n  const [state, setState] = useState({\n    showTheModalOfModels: false,\n    models: [],\n  })\n  const close = () => setState({ ...state, showTheModalOfModels: false })\n  const open = () =>\n    setState({\n      ...state,\n      showTheModalOfModels: true,\n      models: JSON.parse(localStorage.getItem('models')) || [],\n    })\n  const load = ({ id, name, createdAt, amount, ...props }) => {\n    // check if we already loaded the model\n    if ((models.find(({ id: modelId }) => id === modelId) || []).length === 0) {\n      dispatch(addModel({ id, name, createdAt, amount: +amount }))\n      dispatch(justAddProp({ uuid: id, ...props }))\n      Alert.info(`Loaded ${name} model 👍`)\n      close()\n    } else {\n      Alert.warning(`We already loaded ${name} - id[${id}]`)\n    }\n  }\n  return (\n    <section style={{ display: 'inline' }}>\n      <IconButton\n        id=\"load-model-btn\"\n        size=\"xs\"\n        icon={<Icon icon=\"tasks\" />}\n        onClick={open}\n      >\n        Load Model\n      </IconButton>\n      <Modal\n        show={state.showTheModalOfModels}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>Load your saved models!</Title>\n        </Header>\n        <Body>\n          {state.models.length === 0 ? (\n            <div style={{ textAlign: 'center' }}>\n              <img\n                src={loadModelsEmpty}\n                height=\"240\"\n                width={'100%'}\n                alt=\"empty models\"\n              />\n              <p>Your saved models will appear here!</p>\n            </div>\n          ) : (\n            state.models.map((m, i) => (\n              <div key={i}>\n                <h3>\n                  <strong>{m.name}</strong>\n                </h3>\n                <Button\n                  style={{ float: 'right' }}\n                  appearance=\"ghost\"\n                  onClick={() => load(m)}\n                >\n                  Click to Load {m.name}\n                </Button>\n                <pre>{JSON.stringify(m, null, 2)}</pre>\n                <Divider />\n              </div>\n            ))\n          )}\n        </Body>\n        <Footer>\n          <Button onClick={close} appearance=\"subtle\">\n            Close\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect(({ models }, ownProps) => ({\n  ...ownProps,\n  models,\n}))(LoadModel)\n","import React, { useState, useEffect } from 'react'\nimport {\n  Grid,\n  Row,\n  Col,\n  IconButton,\n  Icon,\n  Whisper,\n  Tooltip,\n  Alert,\n  Toggle,\n} from 'rsuite'\nimport Tour from 'reactour'\nimport { connect } from 'react-redux'\nimport { enableAuth, disableAuth } from 'redux/actions'\nimport { AddModelBtn, Models, SaveModel, LoadModel } from './components'\nimport {\n  relationsPropsGetter,\n  generate,\n  relationsGetter,\n  generateAPI,\n} from './util'\n\nconst mapSteps = (obj) => ({\n  ...obj,\n  style: {\n    color:\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? '#f7f7fa'\n        : '#0f131a',\n    backgroundColor:\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? '#0f131a'\n        : '#f7f7fa',\n  },\n})\n\nlet steps = [\n  {\n    selector: '#add-prototype-btn',\n    content: 'Click here to create new model aka prototype',\n  },\n  {\n    selector: '#save-model-btn',\n    content: `Click here to save models after you create them ( they are saved in your localstorage - hope you don't mind :p )`,\n  },\n  {\n    selector: '#load-model-btn',\n    content: 'Click here to load your saved models after you save them',\n  },\n  {\n    selector: '#create-a-api-btn-for-all',\n    content: () => (\n      <>\n        <p>\n          Click here to generate an API with all the models in the model section\n          (this might take some time....).\n        </p>\n        <p>After generation you just need to</p>\n        <ul>\n          <li>unzip the folder</li>\n          <li>`cd pollux-api`</li>\n          <li>`npm i`</li>\n        </ul>\n        <p>then you are done</p>\n      </>\n    ),\n  },\n  {\n    selector: '#enable-jwt-auth',\n    content: () => (\n      <p>Toggle this to enable/disable JWT auth to any generated API</p>\n    ),\n  },\n  {\n    selector: '#models-section',\n    content: 'An empty model',\n  },\n  {\n    selector: '#add-attribute-btn',\n    content: 'Click here to add attributes (props) to this model',\n  },\n  {\n    selector: '#prop-tag-count',\n    content:\n      'This number shows the number of attributes (props) this models have',\n  },\n  {\n    selector: '#generate-data-btn',\n    content: 'Click here to generate this model data with its related models',\n  },\n  {\n    selector: '#create-a-relationship-btn',\n    content: 'Click here to create a 1:m relation with another model',\n  },\n  {\n    selector: '#create-a-api-btn',\n    content: () => (\n      <>\n        <p>\n          Click here to generate a json-server API from this model, after\n          generation you just need to\n        </p>\n        <ul>\n          <li>unzip the folder</li>\n          <li>`cd pollux-api`</li>\n          <li>`npm i`</li>\n          <li>`npm run dev`</li>\n        </ul>\n        <p>then you are done</p>\n      </>\n    ),\n  },\n  {\n    selector: '#create-a-graphql-btn',\n    content: () => (\n      <>\n        <p>\n          Click here to generate a GraphQL API from this model, after generation\n          you just need to\n        </p>\n        <ul>\n          <li>unzip the folder</li>\n          <li>`cd pollux-api`</li>\n          <li>`npm i`</li>\n          <li>`npm run dev`</li>\n        </ul>\n        <p>then you are done</p>\n      </>\n    ),\n  },\n].map(mapSteps)\n\nconst generateAPIForAll = (models, prop, relations, auth) => {\n  if (models.length === 0) {\n    Alert.warning('Plz load/create some models first')\n    return\n  }\n  const data = models.reduce((prev, { name, amount, id }) => {\n    return {\n      ...prev,\n      [name]: generate(\n        prop[id],\n        name,\n        amount,\n        relationsGetter({ relations, models }, id),\n        relationsPropsGetter({ relations, prop }, id),\n        true,\n        id\n      ),\n    }\n  }, {})\n  generateAPI(\n    models.map(({ name }) => name).join(' || '),\n    null,\n    null,\n    null,\n    null,\n    data,\n    auth\n  )\n}\n\nfunction Controller({ models, prop, relations, auth, dispatch }) {\n  const [isTourOpen, setIsTourOpen] = useState(false)\n  useEffect(() => {\n    window\n      .matchMedia('(prefers-color-scheme: dark)')\n      .addEventListener('change', (e) => {\n        setIsTourOpen(false)\n        steps = steps.map(mapSteps)\n      })\n  }, [])\n  return (\n    <Grid fluid>\n      <Row>\n        <Tour\n          steps={steps}\n          isOpen={isTourOpen}\n          onRequestClose={() => setIsTourOpen(false)}\n        />\n        <Col xs={24} sm={24} md={6}>\n          <AddModelBtn />\n\n          <Row style={{ marginTop: '0.5rem' }}>\n            <Col xs={8}>\n              <IconButton\n                size=\"xs\"\n                icon={<Icon icon=\"lightbulb-o\" />}\n                onClick={() => setIsTourOpen(true)}\n              >\n                Take Tour\n              </IconButton>\n            </Col>\n            <Col xs={8}>\n              <SaveModel />\n            </Col>\n            <Col xs={8}>\n              <LoadModel />\n            </Col>\n          </Row>\n          <Row style={{ marginTop: '0.5rem' }}>\n            <Col xs={24}>\n              <Whisper\n                placement=\"right\"\n                trigger=\"hover\"\n                speaker={\n                  <Tooltip>\n                    Click here to generate a json-server API from this model\n                  </Tooltip>\n                }\n              >\n                <IconButton\n                  id=\"create-a-api-btn-for-all\"\n                  size=\"xs\"\n                  icon={<Icon icon=\"twinkle-star\" />}\n                  onClick={() =>\n                    generateAPIForAll(models, prop, relations, auth)\n                  }\n                >\n                  Generate Rest API with all models\n                </IconButton>\n              </Whisper>\n            </Col>\n          </Row>\n\n          <div style={{ marginTop: '0.5rem' }} id=\"enable-jwt-auth\">\n            <Toggle\n              onChange={() => dispatch(auth ? disableAuth() : enableAuth())}\n              checkedChildren=\"Disable JWT Auth\"\n              unCheckedChildren=\"Enable JWT Auth\"\n            />\n          </div>\n        </Col>\n\n        <Col xs={24} sm={24} md={18}>\n          <Models isTourOpen={isTourOpen} />\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default connect(({ models, prop, relations, auth }, ownProps) => ({\n  ...ownProps,\n  models,\n  prop,\n  relations,\n  auth,\n}))(Controller)\n","import React from 'react'\nimport { Controller } from './components'\nimport { Grid, Row, Col } from 'rsuite'\n\nfunction Generate() {\n  // const [state, setState] = useState()\n  return (\n    <Grid fluid>\n      <Row style={{ margin: '1rem' }}>\n        <Col xs={24} sm={24} md={24} style={{ marginTop: '20px' }}>\n          <Controller />\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default Generate\n","// TODO:: I CAN MAP THE WHOLE FAKER LIB TO THIS!!\n// TODO:: AND GENERATE ALL THE FUNCTIONS AS A DRAG AND DROP\nexport const map = new Map([\n  ['UUID', { groupName: 'random', func: 'uuid', propName: 'id' }],\n  ['Email', { groupName: 'internet', func: 'email', propName: 'email' }],\n  ['REGEX', { groupName: 'regex', func: 'regex', propName: 'REGEX' }],\n  [\n    'Password',\n    { groupName: 'internet', func: 'password', propName: 'password' },\n  ],\n  ['Full Name', { groupName: 'name', func: 'fullName', propName: 'name' }],\n  [\n    'Paragraphs',\n    { groupName: 'lorem', func: 'paragraphs', propName: 'paragraphs' },\n  ],\n  [\n    'Paragraph',\n    { groupName: 'lorem', func: 'paragraph', propName: 'paragraph' },\n  ],\n  ['IP', { groupName: 'internet', func: 'ip', propName: 'ip' }],\n  ['Image', { groupName: 'random', func: 'image', propName: 'image' }],\n])\n","import React from 'react'\nimport { useDrag } from 'react-dnd'\nimport { List, Icon } from 'rsuite'\nimport styles from './DraggableCommonProp.module.css'\nimport { map } from 'components/Builder/maps'\n\nconst DraggableCommonProp = ({ type, icon, label, func, children }) => {\n  const [{ isDragging }, dragRef] = useDrag({\n    type,\n    item: {\n      type,\n      data: map.get(type) || { propName: label, groupName: type, func },\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  return (\n    <div ref={dragRef}>\n      <List.Item\n        className={styles.item}\n        style={{\n          cursor: isDragging && 'grabbing',\n          backgroundColor: 'transparent',\n          boxShadow: 'none',\n        }}\n      >\n        <Icon icon={icon || 'circle-o'} /> {label || type}\n        {children}\n      </List.Item>\n    </div>\n  )\n}\n\nexport default DraggableCommonProp\n","import React from 'react'\nimport { Badge, List } from 'rsuite'\nimport DraggableCommonProp from './components/DraggableCommonProp'\n\nconst CommonProps = () => {\n  return (\n    <>\n      <h4>Common Items</h4>\n      <List>\n        <DraggableCommonProp type=\"UUID\" icon=\"id-mapping\" />\n        <DraggableCommonProp type=\"Email\" icon=\"envelope\" />\n        <DraggableCommonProp type=\"REGEX\" icon=\"creative\">\n          <Badge style={{ marginLeft: '1rem' }} content=\"NEW\" />\n        </DraggableCommonProp>\n        <DraggableCommonProp type=\"Password\" icon=\"eye-slash\" />\n        <DraggableCommonProp type=\"Full Name\" icon=\"user\" />\n        <DraggableCommonProp type=\"Paragraphs\" icon=\"file-text\" />\n        <DraggableCommonProp type=\"Paragraph\" icon=\"file-text-o\" />\n        <DraggableCommonProp type=\"IP\" icon=\"circle-o\" />\n        <DraggableCommonProp type=\"Image\" icon=\"image\" />\n      </List>\n    </>\n  )\n}\n\nexport default CommonProps\n","import React, { useMemo, useState } from 'react'\nimport { connect } from 'react-redux'\nimport CommonProps from '../builderComponents/CommonProps/CommonProps'\nimport DraggableCommonProp from '../builderComponents/CommonProps/components/DraggableCommonProp'\nimport { Divider, List, Input } from 'rsuite'\n\nconst BuilderBody = ({ faker }) => {\n  const fakerObj = useMemo(() => faker, [faker])\n  const [keyword, setKeyword] = useState('')\n  return (\n    <>\n      <CommonProps />\n      <Divider />\n      <h4>Other Items</h4>\n      <Input\n        style={{ marginBottom: 10 }}\n        placeholder=\"search in faker functions!\"\n        value={keyword}\n        onChange={setKeyword}\n      />\n      <List>\n        {fakerObj\n          .filter((obj) =>\n            obj.label.toLowerCase().includes(keyword.toLowerCase())\n          )\n          .map(({ groupName, label, value: func }) => (\n            <DraggableCommonProp type={groupName} label={label} func={func} />\n          ))}\n      </List>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { faker: state.faker }\n}\n\nexport default connect(mapStateToProps)(BuilderBody)\n","export const FLAGS = Object.freeze({\n  FLOW_GENERATE: false,\n})\n","import React, { useState, useCallback } from 'react'\nimport { Navbar, Nav, Icon, Drawer, Badge } from 'rsuite'\nimport { NavLink } from 'react-router-dom'\nimport BuilderBody from './Builder/BuilderBody/BuilderBody'\nimport { FLAGS } from 'flags'\nconst { Body } = Navbar\nconst { Item } = Nav\n\nfunction HeaderComp() {\n  const [state, setState] = useState({ show: false })\n  const toggleDrawer = useCallback(\n    (show) => setState({ show: !show }),\n    [setState]\n  )\n  return (\n    <Navbar>\n      <Body>\n        <Nav>\n          <NavLink\n            to=\"/\"\n            className={(navData) => (navData.isActive ? 'active-route' : '')}\n          >\n            <Item\n              renderItem={() => (\n                <span className=\"rs-nav-item-content\">\n                  <Icon icon=\"home\" /> Pollux\n                </span>\n              )}\n            ></Item>\n          </NavLink>\n          <NavLink\n            to=\"/generate\"\n            className={(navData) => (navData.isActive ? 'active-route' : '')}\n          >\n            <Item\n              renderItem={() => (\n                <span className=\"rs-nav-item-content\">\n                  <Icon icon=\"magic2\" />\n                  Generate\n                </span>\n              )}\n            >\n              About\n            </Item>\n          </NavLink>\n          {FLAGS.FLOW_GENERATE && (\n            <NavLink\n              to=\"/flow-generate\"\n              className={(navData) => (navData.isActive ? 'active-route' : '')}\n            >\n              <Item\n                renderItem={() => (\n                  <span className=\"rs-nav-item-content\">\n                    <Icon icon=\"magic2\" />\n                    Flow Generate\n                  </span>\n                )}\n              >\n                About\n              </Item>\n            </NavLink>\n          )}\n        </Nav>\n        <Nav pullRight>\n          <Item\n            onClick={() => toggleDrawer(state.show)}\n            icon={<Icon icon=\"creative\" />}\n          >\n            Builder <Badge content=\"NEW!\"></Badge>\n          </Item>\n\n          <Drawer\n            backdrop={false}\n            show={state.show}\n            size=\"xs\"\n            placement=\"left\"\n            onHide={() => toggleDrawer(true)}\n          >\n            <Drawer.Header>\n              <Drawer.Title>\n                <h4>Builder Items</h4>\n                <p>You can drag and drop them into any model</p>\n              </Drawer.Title>\n            </Drawer.Header>\n            <Drawer.Body>\n              <BuilderBody />\n            </Drawer.Body>\n          </Drawer>\n        </Nav>\n      </Body>\n    </Navbar>\n  )\n}\n\nexport default HeaderComp\n","import React from 'react'\nimport { Col, FlexboxGrid } from 'rsuite'\nimport prototype from './prototype.svg'\n\nimport { normal } from '../colors'\nimport faq from './faq.svg'\nimport dataExtraction from './data-extraction.svg'\nimport {\n  SiJavascript,\n  SiPython,\n  SiPhp,\n  SiRuby,\n  SiGraphql,\n} from 'react-icons/si'\n\nimport styled from 'styled-components'\n\nconst FlexboxGridWithSpacing = styled(FlexboxGrid)`\n  margin: 1rem;\n  align-items: center;\n  justify-content: center;\n`\n\nconst FlexboxGridItemWithSpacing = styled(FlexboxGrid.Item)`\n  padding: 1rem;\n`\n\nconst Image = styled.img`\n  height: 240px;\n  width: 100%;\n`\n\nconst Text = styled.p`\n  font-size: 1.4rem;\n`\n\nconst CenterText = styled.p`\n  text-align: center;\n  font-size: 2rem;\n`\n\nconst TextUnderline = styled.span`\n  text-decoration: underline wavy ${normal};\n  text-underline-offset: 3px;\n`\n\nconst ContentComp = () => {\n  return (\n    <>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={24}>\n          <CenterText>\n            <span role=\"img\" aria-label=\"sun\">\n              🌞\n            </span>\n            Pollux\n            <span role=\"img\" aria-label=\"sun\">\n              🌞\n            </span>\n          </CenterText>\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Image src={faq} loading=\"lazy\" />\n        </FlexboxGridItemWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={2} componentClass={Col} smHidden />\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Text>\n            Need Restful API with bearer authentication? or a GraphQL{' '}\n            <SiGraphql color=\"#dd34a6\" size=\"1rem\" /> API? maybe some testing\n            data in JSON or Ruby <SiRuby color=\"#e51521\" size=\"1rem\" /> or\n            Python <SiPython color=\"#34709f\" size=\"1rem\" /> or PHP{' '}\n            <SiPhp color=\"#474A8A\" size=\"1rem\" /> or JavaScript{' '}\n            <SiJavascript color=\"#e8d44d\" size=\"1rem\" />, all of that and more\n            is possible with pollux,{' '}\n            <TextUnderline>\n              without writing a single line of code.{' '}\n            </TextUnderline>\n          </Text>\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={24}>\n          <CenterText>\n            <span role=\"img\" aria-label=\"alembic\">\n              ⚗️\n            </span>\n            Who does it work\n            <span role=\"img\" aria-label=\"alembic\">\n              ⚗️\n            </span>\n          </CenterText>\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Text>\n            You create a model, then you can drag and drop properties into it,\n            and these properties defines what kind of fake data should be\n            generated\n          </Text>\n        </FlexboxGridItemWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={2} componentClass={Col} smHidden />\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Image src={prototype} loading=\"lazy\" />\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={24}>\n          <CenterText>\n            <span role=\"img\" aria-label=\"alembic\">\n              ✨\n            </span>\n            What makes it unique\n            <span role=\"img\" aria-label=\"alembic\">\n              ✨\n            </span>\n          </CenterText>\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n      <FlexboxGridWithSpacing>\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Image src={dataExtraction} loading=\"lazy\" />\n        </FlexboxGridItemWithSpacing>\n        <FlexboxGridItemWithSpacing colspan={2} componentClass={Col} smHidden />\n        <FlexboxGridItemWithSpacing\n          componentClass={Col}\n          colspan={11}\n          sm={24}\n          xs={24}\n          md={11}\n        >\n          <Text>\n            Everything in pollux from generating `.zip` files to generating\n            500,000 model instances happens in the frontend, using web APIs such\n            as the{' '}\n            <a\n              href=\"https://developer.mozilla.org/en-US/docs/Web/API/Blob\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Blob API\n            </a>{' '}\n            and{' '}\n            <a\n              href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Web Workers API\n            </a>\n            , plus you can{' '}\n            <TextUnderline>\n              pass JavaScript RegExp and it will generate a random string based\n              on that.\n            </TextUnderline>\n          </Text>\n        </FlexboxGridItemWithSpacing>\n      </FlexboxGridWithSpacing>\n    </>\n  )\n}\n\nexport default ContentComp\n","import React from 'react'\nimport { IconButton, Icon } from 'rsuite'\n\nconst FooterComp = () => {\n  return (\n    <section style={{ textAlign: 'center' }}>\n      Made by <b>Rowadz</b>{' '}\n      <a\n        href=\"https://www.linkedin.com/in/mohammed-al-rowad/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"linkedin-square\" />} />\n      </a>\n      {'  '}\n      <a\n        href=\"https://github.com/MohammedAl-Rowad\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"github-alt\" />} />\n      </a>\n      {'  '}\n      <a\n        href=\"https://www.youtube.com/channel/UC1Uw_GN4sodGisimwZNzMoA?view_as=subscriber\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"youtube-play\" />} />\n      </a>\n    </section>\n  )\n}\n\nexport default FooterComp\n","import React from 'react'\nimport { Edge, MarkerType, Node } from 'react-flow-renderer'\n\nexport const nodes: Node[] = [\n  {\n    id: '1',\n    type: 'modelNode',\n    data: {\n      label: (\n        <>\n          Welcome to <strong>React Flow!</strong>\n        </>\n      ),\n    },\n    position: { x: 250, y: 0 },\n  },\n  {\n    id: '2',\n    data: {\n      label: (\n        <>\n          This is a <strong>default node</strong>\n        </>\n      ),\n    },\n    position: { x: 100, y: 100 },\n  },\n  {\n    id: '3',\n    data: {\n      label: (\n        <>\n          This one has a <strong>custom style</strong>\n        </>\n      ),\n    },\n    position: { x: 400, y: 100 },\n    style: {\n      background: '#D6D5E6',\n      color: '#333',\n      border: '1px solid #222138',\n      width: 180,\n    },\n  },\n  {\n    id: '4',\n    position: { x: 250, y: 200 },\n    data: {\n      label: 'Another default node',\n    },\n  },\n  {\n    id: '5',\n    data: {\n      label: 'Node id: 5',\n    },\n    position: { x: 250, y: 325 },\n  },\n  {\n    id: '6',\n    type: 'output',\n    data: {\n      label: (\n        <>\n          An <strong>output node</strong>\n        </>\n      ),\n    },\n    position: { x: 100, y: 480 },\n  },\n  {\n    id: '7',\n    type: 'output',\n    data: { label: 'Another output node' },\n    position: { x: 400, y: 450 },\n  },\n]\n\nexport const edges: Edge<any>[] = [\n  {\n    id: 'e1-2',\n    source: '1',\n    target: '2',\n    label: 'this is an edge label',\n    sourceHandle: 'aa',\n  },\n  { id: 'e1-3', source: '1', target: '3', sourceHandle: 'b' },\n  {\n    style: {\n      color: 'red',\n      background: 'red',\n      stroke: 'red',\n    },\n    labelBgStyle: {\n      fill: 'red',\n      color: 'red',\n    },\n    id: 'e3-4',\n    source: '3',\n    target: '4',\n    animated: true,\n    label: 'animated edge',\n  },\n  {\n    id: 'e4-5',\n    source: '4',\n    target: '5',\n    label: 'edge with arrow head',\n    markerEnd: {\n      type: MarkerType.ArrowClosed,\n    },\n  },\n  {\n    id: 'e5-6',\n    source: '5',\n    target: '6',\n    type: 'smoothstep',\n    style: { stroke: 'red' },\n    label: 'smooth step edge',\n  },\n  {\n    id: 'e5-7',\n    source: '5',\n    target: '7',\n    type: 'step',\n    style: { stroke: '#f6ab6c' },\n    label: 'a step edge',\n    animated: true,\n    labelStyle: { fill: '#f6ab6c', fontWeight: 700 },\n  },\n]\n","import React, { memo } from 'react'\nimport { Handle, Position } from 'react-flow-renderer'\nimport type { NodeProps } from 'react-flow-renderer'\nimport styled from 'styled-components'\n\nconst ModelNodeBody = styled.div`\n  background: #fff;\n  border: 1px solid #1a192b;\n  border-radius: 3px;\n  color: #222;\n  font-size: 12px;\n  padding: 10px;\n  text-align: center;\n  width: 20rem;\n`\n\nexport const ModelNode = memo(({ data, isConnectable }: NodeProps) => {\n  return (\n    <>\n      <Handle\n        type=\"source\"\n        id=\"aa\"\n        position={Position.Left}\n        style={{ background: 'red' }}\n        onConnect={(params) => console.log('handle onConnect', params)}\n        isConnectable={isConnectable}\n      />\n      <ModelNodeBody>\n        Users\n        <ol style={{ textAlign: 'left' }}>\n          <li>id: auto increment</li>\n          <li>username: string(255)</li>\n          <li>email: email</li>\n          <li>password: password</li>\n          <li>about: paragraph</li>\n        </ol>\n      </ModelNodeBody>\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id=\"a\"\n        style={{ top: 10, background: '#555' }}\n        isConnectable={isConnectable}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\n        isConnectable={isConnectable}\n      />\n    </>\n  )\n})\n","import React from 'react'\nimport { Panel } from 'rsuite'\nimport styled from 'styled-components'\n\nconst CustomPanel = styled(Panel)`\n  border: 1px solid #000;\n`\n\nexport const NodesDragDrop = () => {\n  const onDragStart = (\n    event: React.DragEvent<HTMLDivElement>,\n    nodeType: 'input' | 'default' | 'output'\n  ) => {\n    event.dataTransfer.setData('application/reactflow', nodeType)\n    event.dataTransfer.effectAllowed = 'move'\n  }\n\n  return (\n    <aside>\n      <div className=\"description\">\n        You can drag these nodes to the pane on the right.\n      </div>\n\n      <div\n        className=\"dndnode input\"\n        onDragStart={(event) => onDragStart(event, 'input')}\n        draggable\n      >\n        <CustomPanel header=\"Input Node\" />\n      </div>\n    </aside>\n  )\n}\n","import React, { useCallback, useRef, useState } from 'react'\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  ReactFlowProvider,\n  useNodesState,\n  useEdgesState,\n  ReactFlowInstance,\n  Node,\n  XYPosition,\n} from 'react-flow-renderer'\nimport type { NodeTypes } from 'react-flow-renderer'\nimport styled from 'styled-components'\nimport * as data from './data'\nimport { ModelNode } from './ModelNode'\nimport { NodesDragDrop } from './NodesDragDrop'\n\nconst ReactFlowSection = styled.section`\n  height: 35rem;\n  border: 1px solid #fff;\n`\n\nlet id = 0\nconst getId = () => `dndnode_${id++}`\n\nconst nodeTypes: NodeTypes = {\n  modelNode: ModelNode,\n}\n\nconst FlowGenerate = () => {\n  const reactFlowWrapper = useRef<HTMLDivElement>(null)\n  const [reactFlowInstance, setReactFlowInstance] =\n    useState<ReactFlowInstance>()\n  const [nodes, setNodes, onNodesChange] = useNodesState(data.nodes)\n  const [edges, , onEdgesChange] = useEdgesState(data.edges)\n\n  const onDragOver = useCallback((event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n    event.dataTransfer.dropEffect = 'move'\n  }, [])\n\n  const onDrop = useCallback(\n    (event: React.DragEvent<HTMLDivElement>) => {\n      event.preventDefault()\n\n      const reactFlowBounds = reactFlowWrapper.current?.getBoundingClientRect()\n      const type = event.dataTransfer.getData('application/reactflow')\n\n      // check if the dropped element is valid\n      if (typeof type === 'undefined' || !type) {\n        return\n      }\n\n      const position = reactFlowInstance?.project({\n        x: event.clientX - (reactFlowBounds?.left || 0),\n        y: event.clientY - (reactFlowBounds?.top || 0),\n      }) as XYPosition\n      const newNode: Node = {\n        id: getId(),\n        type,\n        position,\n        data: { label: `${type} node` },\n      }\n\n      setNodes((nds) => nds.concat(newNode))\n    },\n    [reactFlowInstance, setNodes]\n  )\n\n  return (\n    <ReactFlowProvider>\n      <ReactFlowSection className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n        <ReactFlow\n          fitView\n          snapToGrid\n          nodes={nodes}\n          edges={edges}\n          onDrop={onDrop}\n          onDragOver={onDragOver}\n          nodeTypes={nodeTypes}\n          onNodesChange={onNodesChange}\n          onInit={setReactFlowInstance}\n          onEdgesChange={onEdgesChange}\n        >\n          <MiniMap />\n          <Controls />\n        </ReactFlow>\n      </ReactFlowSection>\n      <NodesDragDrop />\n    </ReactFlowProvider>\n  )\n}\n\nexport default FlowGenerate\n","import React from 'react'\nimport { FlexboxGrid } from 'rsuite'\nimport styled from 'styled-components'\nimport bugs from './bugs.svg'\n\nconst FlexboxGridItem = styled(FlexboxGrid.Item)`\n  display: flex;\n  margin-top: 3rem;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Image = styled.img`\n  width: 20rem;\n  height: 20rem;\n`\n\ntype ErrorBoundaryProps = {\n  children: React.ReactNode\n}\n\ntype ErrorBoundaryState = {\n  hasError?: boolean\n}\n\nexport class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    console.error(error)\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch() {\n    console.log(\n      '%cPlease open an issue there: https://github.com/MohammedAl-Rowad/pollux',\n      'color: #4E7F97; font-size: 20px'\n    )\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <FlexboxGrid>\n          <FlexboxGridItem colspan={24}>\n            <h4>You did something I didn't test, not your falt.</h4>\n          </FlexboxGridItem>\n          <FlexboxGridItem colspan={24}>\n            <Image src={bugs} loading=\"lazy\" />\n          </FlexboxGridItem>\n          <FlexboxGridItem colspan={24}>\n            <p>\n              Please visit{' '}\n              <a\n                href=\"https://github.com/MohammedAl-Rowad/pollux\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                MohammedAl-Rowad/pollux\n              </a>{' '}\n              and open an issue\n            </p>\n          </FlexboxGridItem>\n        </FlexboxGrid>\n      )\n    }\n\n    return this.props.children\n  }\n}\n","import React from 'react'\n// import 'rsuite/dist/styles/rsuite-dark.css'\nimport './App.css'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport { Header, Content, Footer, Generate, FlowGenerate } from './components'\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'\nimport { ErrorBoundary } from './ErrorBoundary'\nimport { FLAGS } from 'flags'\n\nconsole.log(\n  `%c\n\n'########:::'#######::'##:::::::'##:::::::'##::::'##:'##::::'##:\n ##.... ##:'##.... ##: ##::::::: ##::::::: ##:::: ##:. ##::'##::\n ##:::: ##: ##:::: ##: ##::::::: ##::::::: ##:::: ##::. ##'##:::\n ########:: ##:::: ##: ##::::::: ##::::::: ##:::: ##:::. ###::::\n ##.....::: ##:::: ##: ##::::::: ##::::::: ##:::: ##::: ## ##:::\n ##:::::::: ##:::: ##: ##::::::: ##::::::: ##:::: ##:: ##:. ##::\n ##::::::::. #######:: ########: ########:. #######:: ##:::. ##:\n..::::::::::.......:::........::........:::.......:::..:::::..::\n`,\n  'color: #4E7F97'\n)\n\nconsole.log(\n  '%cRepo: https://github.com/MohammedAl-Rowad/pollux',\n  'color: #4E7F97; font-size: 20px'\n)\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <Router>\n        <DndProvider\n          backend={HTML5Backend}\n          options={{ enableMouseEvents: true }}\n        >\n          <Header />\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <main>\n                  <Content />\n                  <Footer />\n                </main>\n              }\n            />\n            <Route\n              path=\"/generate\"\n              element={\n                <>\n                  <Generate />\n                  <Footer />\n                </>\n              }\n            />\n            {FLAGS.FLOW_GENERATE && (\n              <Route\n                path=\"/flow-generate\"\n                element={\n                  <>\n                    <FlowGenerate />\n                  </>\n                }\n              />\n            )}\n          </Routes>\n        </DndProvider>\n      </Router>\n    </ErrorBoundary>\n  )\n}\n\nexport default App\n","import { ADD_MODEL, DELETE_MODEL, UPDATE_AMOUNT } from '../actionTypes'\n\nconst initialState = []\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case ADD_MODEL: {\n      return [...state, { ...payload, amount: payload.amount || 10 }]\n    }\n    case DELETE_MODEL: {\n      return state.filter(({ id }) => id !== payload)\n    }\n    case UPDATE_AMOUNT: {\n      // payload is num here\n      const { modelId, amount } = payload\n      return state.map((model) => {\n        if (model.id === modelId) {\n          return { ...model, amount }\n        } else {\n          return { ...model }\n        }\n      })\n    }\n    default:\n      return state\n  }\n}\n","import {\n  random,\n  name,\n  address,\n  commerce,\n  company,\n  database,\n  date,\n  finance,\n  hacker,\n  image,\n  internet,\n  lorem,\n  phone,\n} from 'faker'\n\nconst randomCpy = { ...random }\nconst dateCpy = { ...date }\ndelete randomCpy.objectElement\ndelete randomCpy.arrayElement\ndelete dateCpy.between\n\nconst names = { ...name }\nnames.fullName = name.findName\ndelete names.findName\nconst objects = {\n  random: randomCpy,\n  name: names,\n  address,\n  commerce,\n  company,\n  database,\n  date: dateCpy,\n  finance,\n  hacker,\n  image,\n  internet,\n  lorem,\n  phone,\n}\n\nconst initialState = Object.keys(objects)\n  .map((name) =>\n    Object.keys(objects[name]).map((funName) => ({\n      groupName: name,\n      label: (() => {\n        const res = funName.replace(/([A-Z])/g, ' $1')\n        return `${res.charAt(0).toUpperCase()}${res.slice(1)}`\n      })(),\n      value: funName,\n    }))\n  )\n  .reduce((prevArr, currArr) => [...prevArr, ...currArr], [])\n\nexport default function (state = initialState, action) {\n  return state\n}\n","import {\n  ADD_RPOP_NAME,\n  REMOVE_ALL_RPOPS,\n  EDIT_PROP,\n  DELETE_PROP,\n  JUST_ADD_PROP,\n} from '../actionTypes'\nimport { v4 } from 'uuid'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_RPOP_NAME: {\n      const { uuid, propName } = action.payload\n      return {\n        ...state,\n        [uuid]: [...(state[uuid] || []), { propName, id: v4() }],\n      }\n    }\n    case JUST_ADD_PROP: {\n      const { uuid: modelUuid, props } = action.payload\n      return {\n        ...state,\n        [modelUuid]: [...(state[modelUuid] || []), ...props],\n      }\n    }\n    case REMOVE_ALL_RPOPS: {\n      const uuid = action.payload\n      delete state[uuid]\n      return { ...state }\n    }\n    case EDIT_PROP: {\n      const { id: modelUuid, propId, ...propData } = action.payload\n      // we need to save it in its orignal place\n      const idx = state[modelUuid].findIndex(({ id }) => id === propId)\n      const findProp = {\n        ...state[modelUuid].find(({ id }) => id === propId),\n        ...propData,\n      }\n\n      if (!propData.func && !findProp.func) delete findProp.func\n      const without = state[modelUuid].filter(({ id }) => id !== propId)\n      return {\n        ...state,\n        [modelUuid]: [\n          ...without.slice(0, idx),\n          findProp,\n          ...without.slice(idx),\n        ],\n      }\n    }\n    case DELETE_PROP: {\n      const { modelId, propId } = action.payload\n      return {\n        ...state,\n        [modelId]: [...state[modelId].filter(({ id }) => id !== propId)],\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { ADD_RELATION, REMOVE_RELATION } from '../actionTypes'\n\nconst initialState = {}\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case ADD_RELATION: {\n      const { distId, modelId } = payload\n      return {\n        ...state,\n        [modelId]: [...(state[modelId] || []), distId],\n      }\n    }\n    case REMOVE_RELATION: {\n      const { distId, modelId } = payload\n      return {\n        ...state,\n        [modelId]: (state[modelId] || []).filter((id) => distId !== id),\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport models from './models.reducer'\nimport faker from './faker.reducer'\nimport prop from './prop.reducer'\nimport relations from './relation.reducer'\nimport auth from './auth.reducer'\nimport generateProgress from './generateProgress.reducer'\n\nexport default combineReducers({\n  models,\n  faker,\n  prop,\n  relations,\n  auth,\n  generateProgress,\n})\n","import { DISABLE_AUTH, ENABLE_AUTH } from '../actionTypes'\n\nexport default function (_, { type }) {\n  switch (type) {\n    case DISABLE_AUTH: {\n      return false\n    }\n    case ENABLE_AUTH: {\n      return true\n    }\n    default: {\n      return false\n    }\n  }\n}\n","import { SET_PROGRESS } from '../actionTypes'\n\nexport default function (state = {}, { type, payload }) {\n  switch (type) {\n    case SET_PROGRESS: {\n      return { [payload.modelId]: (state[payload.modelId] || 0) + 1 }\n    }\n    default: {\n      return {}\n    }\n  }\n}\n","import { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nexport default createStore(rootReducer, composeWithDevTools())\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Pollux from './App'\n// import * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nif (module.hot) {\n  module.hot.accept()\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Pollux />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/empty.7448158e.svg\";","\n\t\t\t\tvar addMethods = require(\"../../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"startGenerating\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"8bc524c5955bf3864253.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","module.exports = __webpack_public_path__ + \"static/media/emptySave.10032122.svg\";","module.exports = __webpack_public_path__ + \"static/media/loadModels.a2b0ac77.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DraggableCommonProp_item__1Ue75\"};","module.exports = __webpack_public_path__ + \"static/media/prototype.ea2fca44.svg\";","module.exports = __webpack_public_path__ + \"static/media/faq.6e6fcb3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/data-extraction.542aacd4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bugs.75afb9f6.svg\";"],"sourceRoot":""}