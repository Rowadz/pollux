{"version":3,"sources":["components/generate/components/Controller/components/ModelsComponents/cat.svg","redux/actions.js","redux/actionTypes.js","components/generate/components/Controller/components/AddModelBtn.js","components/generate/components/Controller/components/ModelsComponents/ConfirmDel.js","colors.js","components/generate/components/Controller/components/ModelsComponents/AddProp.js","components/generate/components/Controller/components/ModelsComponents/Prop.js","components/generate/components/Controller/components/ModelsComponents/PropsDisplay.js","components/generate/components/Controller/components/ModelsComponents/CreateRel.js","zipFileContent/package.json.js","zipFileContent/readme.md.js","components/generate/components/Controller/util.js","components/generate/components/Controller/components/ModelsComponents/Model.js","components/generate/components/Controller/components/Models.js","components/generate/components/Controller/components/SaveModel.js","components/generate/components/Controller/components/LoadModel.js","components/generate/components/Controller/Controller.js","components/generate/Generate.js","components/Builder/maps.js","components/Builder/builderComponents/CommonProps/components/DraggableCommonProp.js","components/Builder/builderComponents/CommonProps/CommonProps.js","components/Builder/BuilderBody/BuilderBody.js","components/Header.js","components/Content.js","components/Footer.js","App.js","serviceWorker.js","redux/reducers/models.reducer.js","redux/reducers/faker.reducer.js","redux/reducers/prop.reducer.js","redux/reducers/relation.reducer.js","redux/reducers/index.js","redux/store.js","index.js","components/generate/components/Controller/components/empty.svg","components/generate/components/Controller/components/emptySave.svg","components/generate/components/Controller/components/loadModels.svg","components/Builder/builderComponents/CommonProps/components/DraggableCommonProp.module.css","components/prototype.svg","components/prototype2.svg","components/features.svg","components/box.svg"],"names":["module","exports","addModel","model","type","payload","justAddProp","props","editProp","Header","Modal","Body","Footer","Title","connect","dispatch","useState","showNameModal","modelName","state","setState","close","create","id","v4","name","createdAt","Date","inputChange","str","trim","IconButton","color","onClick","appearance","style","width","icon","Icon","show","onHide","maxWidth","className","Input","onPressEnter","onChange","autoFocus","placeholder","size","value","Button","ConfirmDel","showConfirmModal","closeConfirmModal","del","backdrop","fontSize","ownProps","prop","propNamesForThisModel","showPropNameModal","addProp","mode","propNameProp","propId","propName","valid","strOrArrayOfStrings","display","marginBottom","Message","showIcon","description","TagPicker","creatable","menuStyle","find","forEach","disabled","length","checkIfMobile","test","navigator","userAgent","ownProp","inputData","faker","i","modelId","func","List","Item","key","index","Grid","fluid","Row","colSpan","textAlign","Col","xs","sm","md","InputPicker","findRes","val","groupName","data","defaultValue","groupBy","margin","circle","propsEl","hover","map","uuid","src","cat","alt","height","models","relations","eligibleModels","filter","mainModel","checkedModels","Set","showCreateRel","toggleRel","checked","distId","Alert","success","info","removeRelation","toUpperCase","marginTop","Toggle","marginLeft","has","scripts","dev","author","license","dependencies","generate","amount","relationsProps","justReturn","atLeastOneWithoutFunc","len","warning","join","res","generateFakeData","resWithRelations","obj","reduce","prev","downloadData","Array","from","arrayElement","saveAs","Blob","toJSONPritty","JSON","stringify","relationsPropsGetter","relationsGetter","generateAPI","a","zip","JSZip","file","npmCongif","apiReadme","generateAsync","zipContent","error","console","group","log","groupEnd","propsCount","isTourOpen","useDrop","accept","canDrop","collect","monitor","hovered","isOver","drop","delToolTip","Tooltip","addKeyTip","generateTip","dynamicHeder","Tag","Whisper","placement","trigger","speaker","ref","Panel","shaded","backgroundColor","Badge","background","PanelGroup","bordered","header","position","paddingLeft","InputNumber","max","min","updateAmount","float","deleteModel","addPropName","modelsEls","empty","with","showModalSave","toSave","modelsKey","modelsEl","Checkbox","emptySave","rest","toSaveSet","saved","parse","localStorage","getItem","realToSave","setItem","showTheModalOfModels","loadModelsEmpty","m","load","Divider","steps","selector","content","setIsTourOpen","isOpen","onRequestClose","marginRight","generateAPIForAll","Generate","Map","DraggableCommonProp","label","useDrag","item","get","isDragging","dragRef","styles","cursor","boxShadow","CommonProps","fakerObj","useMemo","keyword","setKeyword","toLowerCase","includes","Navbar","Nav","HeaderComp","toggleDrawer","useCallback","to","activeClassName","exact","renderItem","pullRight","Drawer","ContentComp","bodyFill","prototype","href","target","rel","prototype2","box","features","title","FooterComp","App","DndProvider","backend","HTML5Backend","options","enableMouseEvents","path","Content","Boolean","window","location","hostname","match","initialState","randomCpy","random","dateCpy","date","objectElement","between","names","fullName","findName","objects","address","commerce","company","database","finance","hacker","image","internet","lorem","phone","Object","keys","funName","replace","charAt","slice","prevArr","currArr","combineReducers","action","modelUuid","propData","idx","findIndex","findProp","without","createStore","rootReducer","composeWithDevTools","ReactDOM","render","StrictMode","store","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4b82993c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.4333af26.svg\";","import {\n  ADD_MODEL,\n  DELETE_MODEL,\n  ADD_RPOP_NAME,\n  REMOVE_ALL_RPOPS,\n  EDIT_PROP,\n  DELETE_PROP,\n  JUST_ADD_PROP,\n  ADD_RELATION,\n  REMOVE_RELATION,\n  UPDATE_AMOUNT,\n} from './actionTypes'\n\n/**\n *\n * @param {Object} model - the model object\n * @param {string} model.name - the model name\n * @param {string} model.id - the model uuid\n * @param {Date} model.createdAt - the mode timestamp\n */\nexport const addModel = (model) => ({\n  type: ADD_MODEL,\n  payload: model,\n})\n\n/**\n *\n * @param {string} uuid - the prop uuid\n *\n */\nexport const deleteModel = (uuid) => ({\n  type: DELETE_MODEL,\n  payload: uuid,\n})\n\n/**\n *\n * @param {Object} props - the props object\n * @param {string} props.uuid - the model uuid\n * @param {string} props.propName - the props name\n */\nexport const addPropName = (props) => ({\n  type: ADD_RPOP_NAME,\n  payload: props,\n})\n\n/**\n *\n * @param {Array<Object>} props - object\n * @param {Object} props.id - the props id\n * @param {string} props.uuid - the model uuid\n * @param {string} props.propName - the props name\n * @param {string} props.func - the props random func\n * @param {string} props.groupName - the props groupName for the random func\n */\nexport const justAddProp = (props) => ({\n  type: JUST_ADD_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {string} uuid - the prop uuid\n *\n */\nexport const removeAllProps = (uuid) => ({\n  type: REMOVE_ALL_RPOPS,\n  payload: uuid,\n})\n\n/**\n * @param {Object} props - the prop object\n * @param {string} props.propId - the prop uuid\n * @param {string} props.id - the model uuid\n * @param {string} props.newName - the new prop name\n * @param {string} props.groupName - the top lvl obj name for faker\n * @param {string} props.func - the faker function\n */\nexport const editProp = (props) => ({\n  type: EDIT_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.propId - the prop uuid\n * @param {string} props.modelId - the model uuid\n */\nexport const delProp = (props) => ({\n  type: DELETE_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.distId - the model uuid to create relation with\n * @param {string} props.modelId - the model uuid\n */\nexport const addRelation = (props) => ({\n  type: ADD_RELATION,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.distId - the model uuid to remove from the relation\n * @param {string} props.modelId - the model uuid\n */\nexport const removeRelation = (props) => ({\n  type: REMOVE_RELATION,\n  payload: props,\n})\n\n\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.amount - the amount of data to generate\n * @param {string} props.modelId - the model uuid\n */\nexport const updateAmount = (props) => ({\n  type: UPDATE_AMOUNT,\n  payload: props,\n})","export const ADD_MODEL = 'ADD_MODEL'\nexport const DELETE_MODEL = 'DELETE_MODEL'\nexport const ADD_RPOP_NAME = 'ADD_RPOP_NAME'\nexport const JUST_ADD_PROP = 'JUST_ADD_PROP'\nexport const REMOVE_ALL_RPOPS = 'REMOVE_ALL_RPOPS'\nexport const EDIT_PROP = 'EDIT_PROP'\nexport const DELETE_PROP = 'DELETE_PROP'\nexport const ADD_RELATION = 'ADD_RELATION'\nexport const REMOVE_RELATION = 'REMOVE_RELATION'\nexport const UPDATE_AMOUNT = 'UPDATE_AMOUNT'\n","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Input } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { addModel } from 'redux/actions'\nimport { v4 } from 'uuid'\n\nconst { Header, Body, Footer, Title } = Modal\n\nconst AddModelBtn = ({ dispatch }) => {\n  const [state, setState] = useState({ showNameModal: false, modelName: '' })\n  const showNameModal = () => setState({ ...state, showNameModal: true })\n  const close = () => setState({ ...state, showNameModal: false })\n  const create = () => {\n    dispatch(\n      addModel({\n        id: v4(),\n        name: state.modelName,\n        createdAt: +new Date(),\n      })\n    )\n    setState({ ...state, modelName: '', showNameModal: false })\n  }\n  /**\n   * @param {string} str\n   */\n  const inputChange = (str) => setState({ ...state, modelName: str.trim('') })\n\n  const onEnter = () => {\n    inputChange(state.modelName)\n    create()\n  }\n  return (\n    <section>\n      <IconButton\n        id=\"add-prototype-btn\"\n        color=\"cyan\"\n        onClick={showNameModal}\n        appearance=\"ghost\"\n        style={{ width: '100%' }}\n        icon={<Icon icon=\"plus\" />}\n      >\n        Add a model prototype\n      </IconButton>\n      <Modal\n        show={state.showNameModal}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>Choose the model name</Title>\n        </Header>\n        <Body>\n          <p>Click <span className=\"note\">`Enter`</span> to create the model or \n          <span className=\"note\">`esc`</span> to close this model</p>\n          <Input\n            onPressEnter={onEnter}\n            onChange={inputChange}\n            autoFocus={true}\n            style={{ width: '100%' }}\n            placeholder=\"Your model name\"\n            size=\"lg\"\n            value={state.modelName}\n          />\n        </Body>\n        <Footer>\n          <Button onClick={create} appearance=\"primary\">\n            Create\n          </Button>\n          <Button onClick={close} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect()(AddModelBtn)\n","import React from 'react'\nimport { Icon, Button, Modal } from 'rsuite'\nimport { danger } from 'colors'\nconst { Body, Footer, Header, Title } = Modal\n\nconst ConfirmDel = ({ showConfirmModal, closeConfirmModal, name, del, id }) => {\n  return (\n    <Modal\n      backdrop=\"static\"\n      onHide={closeConfirmModal}\n      size=\"xs\"\n      show={showConfirmModal}\n      style={{ maxWidth: '100%' }}\n    >\n      <Header>\n        <Title>Confirm</Title>\n      </Header>\n      <Body>\n        <Icon\n          icon=\"remind\"\n          style={{\n            color: '#ffb300',\n            fontSize: 24,\n          }}\n        />\n        <b>\n          {' '}\n          Are you sure you want to delete this model {'`'}\n          <span style={{ color: danger }}>{name}</span>\n          {'`'}?\n        </b>\n      </Body>\n      <Footer>\n        <Button onClick={() => del(id)} appearance=\"primary\" color=\"red\">\n          Ok\n        </Button>\n        <Button onClick={closeConfirmModal} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default ConfirmDel\n","export const danger = '#E30712'\nexport const normal = '#00a0bd'\n","import React, { useState } from 'react'\nimport { Input, TagPicker, Button, Modal, Message } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { editProp } from 'redux/actions'\n\nconst { Body, Footer, Header, Title } = Modal\n\nconst AddProp = ({\n  showPropNameModal,\n  closeConfirmModal,\n  name,\n  addProp,\n  propNamesForThisModel,\n  id,\n  mode,\n  propNameProp,\n  dispatch,\n  propId,\n}) => {\n  const [state, setState] = useState({\n    propName: mode === 'edit' ? propNameProp : '',\n    valid: true,\n  })\n  const inputChange = (strOrArrayOfStrings) => {\n    if (mode === 'edit') {\n      setState({ propName: strOrArrayOfStrings.trim(''), valid: true })\n    } else {\n      setState({ propName: strOrArrayOfStrings, valid: true })\n    }\n  }\n  const addButtonClick = () => {\n    if (propNamesForThisModel) {\n      const exists = propNamesForThisModel.find(\n        ({ propName }) => propName === state.propName\n      )\n      if (exists) {\n        setState({ ...state, valid: false })\n        return\n      }\n    }\n    if (mode === 'edit')\n      dispatch(editProp({ propName: state.propName, id, propId }))\n    else {\n      state.propName.forEach((name) => addProp(name))\n      setState({ ...state, propName: '' })\n    }\n    closeConfirmModal()\n  }\n  const close = () => {\n    setState({ ...state, valid: true })\n    closeConfirmModal()\n  }\n  return (\n    <Modal\n      backdrop=\"static\"\n      show={showPropNameModal}\n      onHide={close}\n      style={{ maxWidth: '100%' }}\n      size=\"lg\"\n    >\n      <Header>\n        <Title>\n          {mode === 'edit'\n            ? `Edit ${propNameProp} property`\n            : 'Enter the properties names'}\n        </Title>\n      </Header>\n      <Body>\n        <div\n          style={{\n            display: state.valid ? 'none' : 'block',\n            marginBottom: '10px',\n          }}\n        >\n          <Message\n            type=\"error\"\n            showIcon\n            description={`The Property \"${state.propName}\" is already exists in this model (${name})`}\n          />\n        </div>\n        <p>\n          <b>Type the prop name then press enter to add them</b>\n        </p>\n        {mode === 'edit' ? (\n          <Input\n            style={{ width: '100%' }}\n            placeholder=\"Change prop name\"\n            onChange={inputChange}\n          />\n        ) : (\n          <TagPicker\n            creatable\n            placeholder=\"add as many properties you want here\"\n            style={{ width: '100%' }}\n            onChange={inputChange}\n            menuStyle={{ width: 300, display: 'none' }}\n          />\n        )}\n      </Body>\n      <Footer>\n        <Button\n          onClick={addButtonClick}\n          appearance=\"primary\"\n          color=\"cyan\"\n          disabled={!state.propName.length}\n        >\n          Ok\n        </Button>\n        <Button onClick={close} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default connect((state, ownProps) => {\n  const { prop } = state\n  return { ...ownProps, propNamesForThisModel: prop[ownProps.id] }\n})(AddProp)\n","import React, { useState } from 'react'\nimport { InputPicker, List, Grid, Col, Row, Icon, IconButton } from 'rsuite'\nimport AddProp from './AddProp'\nimport { connect } from 'react-redux'\nimport { delProp, editProp } from 'redux/actions'\n\nconst checkIfMobile = () =>\n  /Mobi/.test(navigator.userAgent) || /Mobi|Android/i.test(navigator.userAgent)\n\nconst Prop = ({\n  i,\n  name,\n  id,\n  modelName,\n  modelId,\n  dispatch,\n  inputData,\n  func,\n}) => {\n  const [state, setState] = useState({ showPropNameModal: false, func })\n  const closeModal = () => setState({ ...state, showPropNameModal: false })\n  const openModal = () => setState({ ...state, showPropNameModal: true })\n  const del = () => dispatch(delProp({ propId: id, modelId }))\n  const onFuncSelect = (value) => {\n    const findRes = inputData.find(({ value: val }) => value === val)\n    if (!findRes) return\n    const { groupName } = findRes\n    setState({ ...state, func: value })\n    dispatch(editProp({ id: modelId, propId: id, func: value, groupName }))\n  }\n\n  return (\n    <List.Item key={i} index={i}>\n      <Grid fluid>\n        <Row\n          colSpan={6}\n          style={{ textAlign: checkIfMobile() ? 'center' : 'left' }}\n        >\n          <Col xs={24} sm={24} md={8}>\n            <h4>\n              <Icon icon=\"circle\" /> {name}{' '}\n              {checkIfMobile() ? <Icon icon=\"circle\" /> : ''}\n            </h4>\n          </Col>\n\n          <Col xs={24} sm={24} md={10} style={{ textAlign: 'left' }}>\n            <InputPicker\n              onChange={onFuncSelect}\n              data={inputData}\n              defaultValue={state.func}\n              groupBy=\"groupName\"\n              placeholder=\"Select a function\"\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <AddProp\n            id={modelId}\n            showPropNameModal={state.showPropNameModal}\n            closeConfirmModal={closeModal}\n            propNameProp={name}\n            name={modelName}\n            propId={id}\n            mode={'edit'}\n          />\n          <Col\n            xs={12}\n            sm={12}\n            md={3}\n            style={{ textAlign: checkIfMobile() ? 'left' : 'right' }}\n          >\n            <IconButton\n              style={{ margin: '5px' }}\n              icon={<Icon icon=\"edit\" />}\n              color=\"cyan\"\n              circle\n              onClick={openModal}\n            />\n          </Col>\n\n          <Col xs={12} sm={12} md={1} style={{ textAlign: 'right' }}>\n            <IconButton\n              style={{ margin: '5px' }}\n              icon={<Icon icon=\"minus\" />}\n              color=\"red\"\n              circle\n              onClick={del}\n            />\n          </Col>\n        </Row>\n      </Grid>\n    </List.Item>\n  )\n}\n\nexport default connect((state, ownProp) => ({\n  ...ownProp,\n  inputData: state.faker,\n}))(Prop)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport cat from './cat.svg'\nimport { List } from 'rsuite'\nimport Prop from './Prop'\n\nconst PropsDisplay = ({ id, props, modelName }) => {\n  const propsEl =\n    props && props?.length > 0 ? (\n      <List hover>\n        {props.map(({ propName, id: uuid, func }, i) => (\n          <Prop\n            i={i}\n            key={i}\n            func={func}\n            name={propName}\n            id={uuid}\n            modelId={id}\n            modelName={modelName}\n          />\n        ))}\n      </List>\n    ) : (\n      <section style={{ width: '100%', textAlign: 'center' }}>\n        <h5>Add Properties to this model using the + button</h5>\n        <img src={cat} alt=\"cat waiting\" width={'100px'} height={'100px'} />\n      </section>\n    )\n  return <section>{propsEl}</section>\n}\n\nexport default connect((state, ownProps) => ({\n  ...ownProps,\n  props: state.prop[ownProps.id],\n}))(PropsDisplay)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Modal } from 'rsuite'\nimport { Grid, Row, Col } from 'rsuite'\nimport { Toggle } from 'rsuite'\nimport { addRelation, removeRelation } from 'redux/actions'\nimport { Alert } from 'rsuite'\nimport cat from './cat.svg'\nconst { Body, Footer, Header, Title } = Modal\n\nconst CreateRel = ({\n  showCreateRel,\n  mainModel,\n  close,\n  id,\n  eligibleModels,\n  dispatch,\n  checkedModels,\n}) => {\n  const toggleRel = (checked, distId) => {\n    if (checked) {\n      Alert.success(`created the link with ${mainModel.name} (1:m)`)\n      dispatch(addRelation({ distId, modelId: id }))\n    } else {\n      Alert.info(`removed the link with ${mainModel.name}`)\n      dispatch(removeRelation({ distId, modelId: id }))\n    }\n  }\n  \n  if (!mainModel) return ''\n\n  return (\n    <Modal\n      backdrop=\"static\"\n      onHide={close}\n      show={showCreateRel}\n      style={{ maxWidth: '100%' }}\n      size=\"lg\"\n    >\n      <Header>\n        <Title>\n          Create Relation for{' '}\n          <span style={{ color: '#1b9cb0' }}>\n            {mainModel.name.toUpperCase()}\n          </span>{' '}\n          model\n        </Title>\n      </Header>\n      <Body>\n        <h4>Eligible Models:</h4>\n        <Grid fluid style={{ marginTop: 20 }}>\n          <Row>\n            {eligibleModels.length === 0 ? (\n              <section style={{ width: '100%', textAlign: 'center' }}>\n                <h5>\n                  There is no eligible models, create models to link them!\n                </h5>\n                <img\n                  src={cat}\n                  alt=\"cat waiting\"\n                  width={'100px'}\n                  height={'100px'}\n                />\n              </section>\n            ) : (\n              (eligibleModels || []).map(({ name, id }) => (\n                <Col xs={24} sm={24} md={6} key={id}>\n                  <span style={{ color: '#1b9cb0' }}>{name.toUpperCase()}</span>{' '}\n                  <Toggle\n                    style={{ marginLeft: 5 }}\n                    onChange={(checked) => toggleRel(checked, id)}\n                    checked={checkedModels.has(id)}\n                  />\n                </Col>\n              ))\n            )}\n          </Row>\n        </Grid>\n      </Body>\n      <Footer>\n        <Button appearance=\"primary\" color=\"cyan\" onClick={close}>\n          Ok\n        </Button>\n        <Button appearance=\"subtle\" onClick={close}>\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default connect((state, ownProps) => {\n  const { models, relations } = state\n\n  return {\n    ...ownProps,\n    eligibleModels: (models || []).filter(({ id }) => id !== ownProps.id),\n    mainModel: (models || []).filter(({ id }) => id === ownProps.id)[0],\n    checkedModels: new Set(relations[ownProps.id] || []),\n  }\n})(CreateRel)\n","export default {\n  description:\n    'The file is generated using https://mohammedal-rowad.github.io/pollux/',\n  scripts: {\n    dev: 'json-server --watch db.json',\n  },\n  author: 'Rowadz',\n  license: 'MIT',\n  dependencies: {\n    'json-server': '^0.16.2',\n  },\n}\n","export default name => `# Generated json-server API for ${name} model\nThis json-server api was generated via [pollux](https://mohammedal-rowad.github.io/pollux/)\nand it runs using [json-server](https://github.com/typicode/json-server), please read json-server docs for more info.\n\n# How to run\n- cd into this folder\n- npm install or npm i\n- npm run dev\n- now look at the terminal\n`","import { Alert } from 'rsuite'\nimport * as faker from 'faker'\nimport { saveAs } from 'file-saver'\nimport JSZip from 'jszip'\nimport npmCongif from '../../../../zipFileContent/package.json'\nimport apiReadme from '../../../../zipFileContent/readme.md'\n\n/**\n *\n * @param {Array<any>} props\n * @param {string} name\n * @param {number} amount\n * @param {Array<any>} relations\n * @param {object} relationsProps\n * @param {boolean} justReturn\n */\nexport const generate = (\n  props,\n  name,\n  amount,\n  relations,\n  relationsProps,\n  justReturn\n) => {\n  if (!props) {\n    Alert.warning(`plz add some properties to this model (${name})`)\n    return\n  }\n  const atLeastOneWithoutFunc = props\n    .filter(({ func }) => !func)\n    .map(({ propName }) => propName)\n  const len = atLeastOneWithoutFunc.length\n  if (len > 0) {\n    Alert.warning(\n      `There is ${len} ${\n        len === 1 ? 'property' : 'properties'\n      } without function ${atLeastOneWithoutFunc.join(' || ')}`\n    )\n    return\n  }\n  const res = generateFakeData(props, amount)\n  if (relations) {\n    // const relData = relations.reduce(\n    //   (prevObj, { id, name, amount }) => ({\n    //     ...prevObj,\n    //     [name]: generateFakeData(relationsProps[id], amount),\n    //   }),\n    //   {}\n    // )\n\n    // const resWithRelations = res.map((obj) => ({ ...obj, ...relData }))\n\n    const resWithRelations = res.map((obj) => ({\n      ...obj,\n      ...relations.reduce(\n        (prev, { name, id }) => ({\n          ...prev,\n          [name]: generateFakeData(relationsProps[id], 10),\n        }),\n        {}\n      ),\n    }))\n    if (justReturn) {\n      return resWithRelations\n    }\n    downloadData(resWithRelations, name)\n  } else {\n    if (justReturn) {\n      return res\n    }\n    downloadData(res, name)\n  }\n}\n\n/**\n *\n * @param {Array<any>} props\n * @param {number} amount\n */\nconst generateFakeData = (props, amount) =>\n  Array.from({ length: amount }).map(() => {\n    return props.reduce((prev, { propName, groupName, func }) => {\n      if (\n        groupName === 'image' ||\n        (groupName === 'random' && func === 'image')\n      ) {\n        return {\n          ...prev,\n          [propName]: faker.random.arrayElement([\n            'http://placekitten.com/500/600',\n            'http://placekitten.com/1200/600',\n            'http://placekitten.com/1200/1200',\n          ]),\n        }\n      }\n      return {\n        ...prev,\n        [propName]: faker[groupName][func === 'fullName' ? 'findName' : func](),\n      }\n    }, {})\n  })\n\n/**\n *\n * @param {Array<any>} data\n * @param {string} name\n */\nconst downloadData = (data, name) => {\n  saveAs(new Blob([toJSONPritty(data)], { type: 'application/json' }), name)\n  Alert.success(`Downloaded ${name}.json 👍`)\n}\n\n/**\n *\n * @param {Array<any>} data\n */\nconst toJSONPritty = (data) => JSON.stringify(data, null, 2)\n\n/**\n *\n * @param {objcet} state - redux-state\n * @param {string} modelId - the uuid for the model in redux\n */\nexport const relationsPropsGetter = (state, modelId) =>\n  (state.relations[modelId] || []).reduce(\n    (prev, id) => ({ ...prev, [id]: state.prop[id] }),\n    {}\n  )\n\n/**\n *\n * @param {objcet} state - redux-state\n * @param {string} modelId - the uuid for the model in redux\n */\nexport const relationsGetter = (state, modelId) =>\n  (state.relations[modelId] || []).map((uuid) =>\n    state.models.find(({ id }) => uuid === id)\n  )\n\n/**\n *\n * @param {string} name - the model name\n * @param {Array<any>} props\n * @param {number} amount\n * @param {Array<any>} relations\n * @param {object} relationsProps\n * @param {Array<any> | undefined} data\n */\nexport const generateAPI = async (\n  name,\n  props,\n  amount,\n  relations,\n  relationsProps,\n  data\n) => {\n  try {\n    if (!props && !data) {\n      Alert.warning(`plz add some properties to this model (${name})`)\n      return\n    }\n    const zip = new JSZip()\n    zip.file('package.json', toJSONPritty(npmCongif))\n    zip.file(\n      'db.json',\n      toJSONPritty(\n        data\n          ? data\n          : {\n              [name]: generate(\n                props,\n                name,\n                amount,\n                relations,\n                relationsProps,\n                true\n              ),\n            }\n      )\n    )\n    zip.file('README.md', apiReadme(name))\n    const zipContent = await zip.generateAsync({ type: 'blob' })\n    saveAs(zipContent, 'pollux-api.zip')\n    Alert.success(`Downloaded pollux-api.zip 👍`)\n  } catch (error) {\n    Alert.error(\n      'Something went wrong while generating your API, please checkout the console'\n    )\n    console.group('Error generating the API')\n    console.log('the error object')\n    console.error(error)\n    console.log('you can open an issue with this error in the link below')\n    console.log('https://github.com/MohammedAl-Rowad/pollux')\n    console.groupEnd()\n  }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Icon,\n  IconButton,\n  Panel,\n  PanelGroup,\n  Grid,\n  Row,\n  Col,\n  Whisper,\n  Tooltip,\n  Tag,\n  Badge,\n  InputNumber,\n  Alert,\n} from 'rsuite'\nimport ConfirmDel from './ConfirmDel'\nimport PropsDisplay from './PropsDisplay'\nimport AddProp from './AddProp'\nimport CreateRel from './CreateRel'\nimport { v4 } from 'uuid'\nimport {\n  generate,\n  relationsPropsGetter,\n  relationsGetter,\n  generateAPI,\n} from '../../util'\n\nimport {\n  deleteModel,\n  addPropName,\n  removeAllProps,\n  updateAmount,\n  justAddProp,\n} from 'redux/actions'\nimport { useDrop } from 'react-dnd'\n\nconst Model = ({\n  dispatch,\n  model: { id, name, amount },\n  propsCount,\n  props,\n  relations,\n  relationsProps,\n  isTourOpen,\n  faker,\n}) => {\n  const [state, setState] = useState({\n    showConfirmModal: false,\n    showPropNameModal: false,\n    showCreateRel: false,\n    amount: 10,\n  })\n\n  const [{ canDrop, hovered }, drop] = useDrop({\n    accept: [\n      'UUID',\n      'Email',\n      'Password',\n      'Full Name',\n      'Paragraphs',\n      'Paragraph',\n      'IP',\n      'Image',\n      ...faker.map(({ groupName }) => groupName),\n    ], // TODO:: why hardcoded\n    canDrop() {\n      return true\n    },\n    collect(monitor) {\n      return {\n        canDrop: monitor && monitor.canDrop(),\n        hovered: monitor && monitor.isOver(),\n      }\n    },\n    drop({ data }) {\n      dispatch(justAddProp({ uuid: id, props: [{ ...data, id: v4() }] }))\n      Alert.success(`Added the ${data.propName} props`)\n    },\n  })\n\n  const delToolTip = (\n    <Tooltip>\n      Click here to <b>Delete</b> this model {'`'}\n      {name}\n      {'`'}.\n    </Tooltip>\n  )\n  const addKeyTip = <Tooltip>Click here to add an attribute.</Tooltip>\n  const generateTip = (\n    <Tooltip>\n      Click here to <b>generate</b> a json for this model.\n    </Tooltip>\n  )\n  const closeConfirmModal = () =>\n    setState({\n      ...state,\n      showConfirmModal: false,\n      showPropNameModal: false,\n      showCreateRel: false,\n    })\n  const openConfirmModal = () =>\n    setState({ ...state, showConfirmModal: true, showCreateRel: false })\n  const openPropNameModal = () =>\n    setState({\n      ...state,\n      showConfirmModal: false,\n      showCreateRel: false,\n      showPropNameModal: true,\n    })\n\n  const openCreateRelModal = () =>\n    setState({\n      ...state,\n      showConfirmModal: false,\n      showPropNameModal: false,\n      showCreateRel: true,\n    })\n\n  const del = (id) => {\n    closeConfirmModal()\n    dispatch(removeAllProps(id))\n    dispatch(deleteModel(id))\n  }\n\n  const changeAmount = (val) => {\n    setState({ ...state, amount: +val })\n    dispatch(updateAmount({ modelId: id, amount: +val }))\n  }\n\n  const addProp = (name) => dispatch(addPropName({ propName: name, uuid: id }))\n\n  const dynamicHeder = (\n    <div>\n      Model name {name}\n      {\n        <Tag\n          color=\"cyan\"\n          style={{ marginLeft: '5px' }}\n          id={isTourOpen ? 'prop-tag-count' : null}\n        >\n          {propsCount}\n        </Tag>\n      }\n      <Whisper\n        placement=\"right\"\n        trigger=\"hover\"\n        speaker={\n          <Tooltip>\n            Click here to create a relationship with other models\n          </Tooltip>\n        }\n      >\n        <IconButton\n          id={isTourOpen ? 'create-a-relationship-btn' : null}\n          icon={<Icon icon=\"link\" />}\n          style={{ marginLeft: '5px' }}\n          color=\"violet\"\n          onClick={openCreateRelModal}\n          circle\n        />\n      </Whisper>\n      <Whisper\n        placement=\"right\"\n        trigger=\"hover\"\n        speaker={\n          <Tooltip>\n            Click here to generate a json-server API from this model\n          </Tooltip>\n        }\n      >\n        <IconButton\n          id={isTourOpen ? 'create-a-api-btn' : null}\n          icon={<Icon icon=\"twinkle-star\" />}\n          style={{ marginLeft: '5px' }}\n          color=\"blue\"\n          circle\n          onClick={() =>\n            generateAPI(name, props, amount, relations, relationsProps)\n          }\n        />\n      </Whisper>\n      <div ref={drop}>\n        <Panel\n          shaded\n          style={{\n            backgroundColor: hovered ? '#8BCAD9' : canDrop ? '#5E6D8C' : '',\n            height: 50,\n            marginTop: 10,\n            // color: hovered ? '#000' : '#fff',\n          }}\n        >\n          <Badge style={{ background: '#1b9cb0' }} /> Drop Props Here{' '}\n          <Badge style={{ background: '#1b9cb0' }} />\n        </Panel>\n      </div>\n    </div>\n  )\n  return (\n    <section style={{ marginTop: 20 }}>\n      <PanelGroup bordered>\n        <Panel shaded header={dynamicHeder}>\n          <Grid fluid>\n            <Row>\n              <Col xs={24} sm={24} md={24}>\n                <Whisper placement=\"right\" trigger=\"hover\" speaker={addKeyTip}>\n                  <IconButton\n                    icon={<Icon icon=\"plus\" />}\n                    id={isTourOpen ? 'add-attribute-btn' : null}\n                    color=\"cyan\"\n                    circle\n                    onClick={openPropNameModal}\n                  />\n                </Whisper>\n                <Whisper\n                  placement=\"right\"\n                  trigger=\"hover\"\n                  speaker={generateTip}\n                >\n                  <IconButton\n                    id={isTourOpen ? 'generate-data-btn' : null}\n                    style={{ marginLeft: '5px' }}\n                    icon={<Icon icon=\"magic2\" />}\n                    color=\"orange\"\n                    circle\n                    onClick={() =>\n                      generate(props, name, amount, relations, relationsProps)\n                    }\n                  />\n                </Whisper>\n                <div\n                  style={{\n                    width: 100,\n                    display: 'inline',\n                    position: 'absolute',\n                    paddingLeft: 10,\n                  }}\n                >\n                  <InputNumber\n                    defaultValue={amount}\n                    max={100000}\n                    min={1}\n                    onChange={changeAmount}\n                  />\n                </div>\n                <Whisper placement=\"left\" trigger=\"hover\" speaker={delToolTip}>\n                  <IconButton\n                    icon={<Icon icon=\"minus\" />}\n                    style={{ float: 'right' }}\n                    color=\"red\"\n                    circle\n                    onClick={openConfirmModal}\n                  />\n                </Whisper>\n                <ConfirmDel\n                  id={id}\n                  del={del}\n                  closeConfirmModal={closeConfirmModal}\n                  name={name}\n                  showConfirmModal={state.showConfirmModal}\n                />\n                <AddProp\n                  id={id}\n                  showPropNameModal={state.showPropNameModal}\n                  closeConfirmModal={closeConfirmModal}\n                  name={name}\n                  addProp={addProp}\n                />\n                {isTourOpen ? (\n                  ''\n                ) : (\n                  <CreateRel\n                    showCreateRel={state.showCreateRel}\n                    id={id}\n                    close={closeConfirmModal}\n                  />\n                )}\n              </Col>\n              <Col\n                xs={24}\n                sm={24}\n                md={24}\n                style={{ textAlign: 'right', marginTop: '10px' }}\n              >\n                <PropsDisplay id={id} modelName={name} />\n              </Col>\n            </Row>\n          </Grid>\n        </Panel>\n      </PanelGroup>\n    </section>\n  )\n}\n\nexport default connect((state, ownProps) => ({\n  ...ownProps,\n  propsCount: (state.prop[ownProps.model.id] || []).length,\n  props: state.prop[ownProps.model.id],\n  relations: relationsGetter(state, ownProps.model.id),\n  relationsProps: relationsPropsGetter(state, ownProps.model.id),\n  faker: state.faker,\n}))(Model)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Panel, PanelGroup } from 'rsuite'\nimport empty from './empty.svg'\nimport Model from './ModelsComponents/Model'\n\nconst Models = ({ models, isTourOpen }) => {\n  const modelsEls =\n    models.length > 0 ? (\n      models.map((model, i) => <Model model={model} key={i} />)\n    ) : (\n      <Panel\n        bordered\n        header=\"Add models to start!\"\n        style={{ textAlign: 'center' }}\n      >\n        <img src={empty} with={'100%'} height={'200px'} alt=\"empty-img\" />\n      </Panel>\n    )\n  return (\n    <section id=\"models-section\">\n      {isTourOpen ? (\n        <Model\n          model={{ id: '', name: 'Demo', createdAt: +new Date() }}\n          isTourOpen={isTourOpen}\n        />\n      ) : (\n        <PanelGroup>{modelsEls}</PanelGroup>\n      )}\n    </section>\n  )\n}\n\nexport default connect((models) => models)(Models)\n","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Checkbox } from 'rsuite'\nimport { connect } from 'react-redux'\nimport emptySave from './emptySave.svg'\nimport { Alert } from 'rsuite'\nconst { Header, Body, Footer, Title } = Modal\n\nconst SaveModel = ({ models, prop }) => {\n  const [state, setState] = useState({\n    showModalSave: false,\n    toSave: [],\n    modelsKey: 'models',\n  })\n  const showModalSave = () =>\n    setState({ ...state, toSave: [], showModalSave: true })\n  const close = () => setState({ ...state, showModalSave: false })\n  const save = () => {\n    const toSave = models.map(({ id, ...rest }) => ({\n      props: prop[id],\n      id,\n      ...rest,\n    }))\n    const toSaveSet = new Set(toSave.map(({ id }) => id))\n    // to preserve the old models and override if the user changed the same one!\n    const saved = (\n      JSON.parse(localStorage.getItem(state.modelsKey)) || []\n    ).filter(({ id }) => !toSaveSet.has(id))\n    const realToSave = [...saved, ...toSave]\n    localStorage.setItem(state.modelsKey, JSON.stringify(realToSave))\n    Alert.success(\n      `Saved models [ ${toSave.map(({ name }) => name).join(' || ')} ]`\n    )\n  }\n  const toSave = (model, checked) => {\n    if (checked) {\n      setState({ ...state, toSave: [...state.toSave, model] })\n    } else {\n      setState({\n        ...state,\n        toSave: [...state.toSave.filter(({ id }) => id !== model.id)],\n      })\n    }\n  }\n  const modelsEl = models.length ? (\n    models.map(({ name, id }) => (\n      <Checkbox name={name} onChange={toSave} key={id} value={{ name, id }}>\n        {name}\n      </Checkbox>\n    ))\n  ) : (\n    <div style={{ textAlign: 'center' }}>\n      <img src={emptySave} height=\"100\" width={'100%'} alt=\"no models img\" />\n      <p>You need to create some models to save them </p>\n    </div>\n  )\n  return (\n    <section style={{ display: 'inline' }}>\n      <IconButton\n        color=\"cyan\"\n        id=\"save-model-btn\"\n        onClick={showModalSave}\n        circle\n        icon={<Icon icon=\"save\" />}\n      />\n      <Modal\n        show={state.showModalSave}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>You can save a model here, then load it</Title>\n        </Header>\n        <Body>{modelsEl}</Body>\n        <Footer>\n          <Button\n            onClick={save}\n            appearance=\"primary\"\n            disabled={models.length === 0}\n          >\n            Save\n          </Button>\n          <Button onClick={close} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect(({ models, prop }, ownProps) => ({\n  ...ownProps,\n  models,\n  prop,\n}))(SaveModel)\n","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Divider } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { Alert } from 'rsuite'\nimport loadModelsEmpty from './loadModels.svg'\nimport { addModel, justAddProp } from 'redux/actions'\nconst { Header, Body, Footer, Title } = Modal\n\nconst LoadModel = ({ dispatch, models }) => {\n  const [state, setState] = useState({\n    showTheModalOfModels: false,\n    models: [],\n  })\n  const close = () => setState({ ...state, showTheModalOfModels: false })\n  const open = () =>\n    setState({\n      ...state,\n      showTheModalOfModels: true,\n      models: JSON.parse(localStorage.getItem('models')) || [],\n    })\n  const load = ({ id, name, createdAt, amount, ...props }) => {\n    // check if we already loaded the model\n    if ((models.find(({ id: modelId }) => id === modelId) || []).length === 0) {\n      dispatch(addModel({ id, name, createdAt, amount: +amount }))\n      dispatch(justAddProp({ uuid: id, ...props }))\n      Alert.info(`Loaded ${name} model 👍`)\n    } else {\n      Alert.warning(`We already loaded ${name} - id[${id}]`)\n    }\n  }\n  return (\n    <section style={{ display: 'inline', marginLeft: 10 }}>\n      <IconButton\n        color=\"yellow\"\n        onClick={open}\n        circle\n        id=\"load-model-btn\"\n        icon={<Icon icon=\"tasks\" />}\n      />\n      <Modal\n        show={state.showTheModalOfModels}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>Load your saved models!</Title>\n        </Header>\n        <Body>\n          {state.models.length === 0 ? (\n            <div style={{ textAlign: 'center' }}>\n              <img\n                src={loadModelsEmpty}\n                height=\"240\"\n                width={'100%'}\n                alt=\"empty models\"\n              />\n              <p>Your saved models will appear here!</p>\n            </div>\n          ) : (\n            state.models.map((m, i) => (\n              <div key={i}>\n                <h3>\n                  <strong>{m.name}</strong>\n                </h3>\n                <Button\n                  style={{ float: 'right' }}\n                  appearance=\"ghost\"\n                  onClick={() => load(m)}\n                >\n                  Click to Load {m.name}\n                </Button>\n                <pre>{JSON.stringify(m, null, 2)}</pre>\n                <Divider />\n              </div>\n            ))\n          )}\n        </Body>\n        <Footer>\n          <Button onClick={close} appearance=\"subtle\">\n            Close\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect(({ models }, ownProps) => ({\n  ...ownProps,\n  models,\n}))(LoadModel)\n","import React, { useState } from 'react'\nimport {\n  Grid,\n  Row,\n  Col,\n  IconButton,\n  Icon,\n  Whisper,\n  Tooltip,\n  Alert,\n} from 'rsuite'\nimport Tour from 'reactour'\nimport { connect } from 'react-redux'\nimport { AddModelBtn, Models, SaveModel, LoadModel } from './components'\nimport {\n  relationsPropsGetter,\n  generate,\n  relationsGetter,\n  generateAPI,\n} from './util'\n\nconst steps = [\n  {\n    selector: '#add-prototype-btn',\n    content: 'Click here to create new model aka prototype',\n  },\n  {\n    selector: '#save-model-btn',\n    content: `Click here to save models after you create them ( they are saved in your localstorage - hope you don't mind :p )`,\n  },\n  {\n    selector: '#load-model-btn',\n    content: 'Click here to load your saved models after you save them',\n  },\n  {\n    selector: '#create-a-api-btn-for-all',\n    content: () => (\n      <>\n        <p>\n          Click here to generate an API with all the models in the model section (this might take some time....).\n        </p>\n        <p>After generation you just need to</p>\n        <ul>\n          <li>unzip the folder</li>\n          <li>`cd pollux-api`</li>\n          <li>`npm i`</li>\n        </ul>\n        <p>then you are done</p>\n      </>\n    )\n  },\n  {\n    selector: '#models-section',\n    content: 'An empty model',\n  },\n  {\n    selector: '#add-attribute-btn',\n    content: 'Click here to add attributes (props) to this model',\n  },\n  {\n    selector: '#prop-tag-count',\n    content:\n      'This number shows the number of attributes (props) this models have',\n  },\n  {\n    selector: '#generate-data-btn',\n    content: 'Click here to generate this model data with its related models',\n  },\n  {\n    selector: '#create-a-relationship-btn',\n    content: 'Click here to create a 1:m relation with another model',\n  },\n  {\n    selector: '#create-a-api-btn',\n    content: () => (\n      <>\n        <p>\n          Click here to generate a json-server API from this model, after\n          generation you just need to\n        </p>\n        <ul>\n          <li>unzip the folder</li>\n          <li>`cd pollux-api`</li>\n          <li>`npm i`</li>\n        </ul>\n        <p>then you are done</p>\n      </>\n    ),\n  },\n].map((obj) => ({\n  ...obj,\n  style: {\n    backgroundColor: '#0f131a',\n  },\n}))\n\nconst generateAPIForAll = (models, prop, relations) => {\n  if (models.length === 0) {\n    Alert.warning('Plz load/create some models first')\n    return\n  }\n  const data = models.reduce((prev, { name, amount, id }) => {\n    return {\n      ...prev,\n      [name]: generate(\n        prop[id],\n        name,\n        amount,\n        relationsGetter({ relations, models }, id),\n        relationsPropsGetter({ relations, prop }, id),\n        true\n      ),\n    }\n  }, {})\n  generateAPI(\n    models.map(({ name }) => name).join(' || '),\n    null,\n    null,\n    null,\n    null,\n    data\n  )\n}\n\nfunction Controller({ models, prop, relations }) {\n  const [isTourOpen, setIsTourOpen] = useState(false)\n\n  return (\n    <Grid fluid>\n      <Row>\n        <Tour\n          steps={steps}\n          isOpen={isTourOpen}\n          onRequestClose={() => setIsTourOpen(false)}\n        />\n        <Col xs={24} sm={24} md={6}>\n          <AddModelBtn />\n          <div style={{ marginTop: '10px' }}>\n            <IconButton\n              style={{ marginRight: 10 }}\n              color=\"violet\"\n              onClick={() => setIsTourOpen(true)}\n              circle\n              icon={<Icon icon=\"lightbulb-o\" />}\n            />\n            <SaveModel />\n            <LoadModel />\n            <Whisper\n              placement=\"right\"\n              trigger=\"hover\"\n              speaker={\n                <Tooltip>\n                  Click here to generate a json-server API from this model\n                </Tooltip>\n              }\n            >\n              <IconButton\n                id=\"create-a-api-btn-for-all\"\n                icon={<Icon icon=\"twinkle-star\" />}\n                style={{ marginLeft: '5px' }}\n                color=\"blue\"\n                circle\n                onClick={() => generateAPIForAll(models, prop, relations)}\n              />\n            </Whisper>\n          </div>\n        </Col>\n        <Col xs={24} sm={24} md={18}>\n          <Models isTourOpen={isTourOpen} />\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default connect(({ models, prop, relations }, ownProps) => ({\n  ...ownProps,\n  models,\n  prop,\n  relations,\n}))(Controller)\n","import React from 'react'\nimport { Controller } from './components'\nimport { Grid, Row, Col } from 'rsuite'\n\nfunction Generate() {\n  // const [state, setState] = useState()\n  return (\n    <Grid fluid>\n      <Row style={{ margin: '1rem' }}>\n        <Col xs={24} sm={24} md={24} style={{ marginTop: '20px' }}>\n          <Controller />\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default Generate\n","// TODO:: I CAN MAP THE WHOLE FAKER LIB TO THIS!!\n// TODO:: AND GENERATE ALL THE FUNCTIONS AS A DRAG AND DROP\nexport const map = new Map([\n  ['UUID', { groupName: 'random', func: 'uuid', propName: 'id' }],\n  ['Email', { groupName: 'internet', func: 'email', propName: 'email' }],\n  [\n    'Password',\n    { groupName: 'internet', func: 'password', propName: 'password' },\n  ],\n  ['Full Name', { groupName: 'name', func: 'fullName', propName: 'name' }],\n  [\n    'Paragraphs',\n    { groupName: 'lorem', func: 'paragraphs', propName: 'paragraphs' },\n  ],\n  [\n    'Paragraph',\n    { groupName: 'lorem', func: 'paragraph', propName: 'paragraph' },\n  ],\n  ['IP', { groupName: 'internet', func: 'ip', propName: 'ip' }],\n  ['Image', { groupName: 'random', func: 'image', propName: 'image' }],\n])\n","import React from 'react'\nimport { useDrag } from 'react-dnd'\nimport { List, Icon } from 'rsuite'\nimport styles from './DraggableCommonProp.module.css'\nimport { map } from 'components/Builder/maps'\n\nconst DraggableCommonProp = ({ type, icon, label, func }) => {\n  const [{ isDragging }, dragRef] = useDrag({\n    item: {\n      type,\n      data: map.get(type) || { propName: label, groupName: type, func },\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  return (\n    <div ref={dragRef}>\n      <List.Item\n        className={styles.item}\n        style={{\n          cursor: isDragging && 'grabbing',\n          backgroundColor: 'transparent',\n          boxShadow: 'none',\n        }}\n      >\n        <Icon icon={icon || 'circle-o'} /> {label || type}\n      </List.Item>\n    </div>\n  )\n}\n\nexport default DraggableCommonProp\n","import React from 'react'\nimport { List } from 'rsuite'\nimport DraggableCommonProp from './components/DraggableCommonProp'\n\nconst CommonProps = () => {\n  return (\n    <>\n      <h4>Common Items</h4>\n      <List>\n        <DraggableCommonProp type=\"UUID\" icon=\"id-mapping\" />\n        <DraggableCommonProp type=\"Email\" icon=\"envelope\" />\n        <DraggableCommonProp type=\"Password\" icon=\"eye-slash\" />\n        <DraggableCommonProp type=\"Full Name\" icon=\"user\" />\n        <DraggableCommonProp type=\"Paragraphs\" icon=\"file-text\" />\n        <DraggableCommonProp type=\"Paragraph\" icon=\"file-text-o\" />\n        <DraggableCommonProp type=\"IP\" icon=\"circle-o\" />\n        <DraggableCommonProp type=\"Image\" icon=\"image\" />\n      </List>\n    </>\n  )\n}\n\nexport default CommonProps\n","import React, { useMemo, useState } from 'react'\nimport { connect } from 'react-redux'\nimport CommonProps from '../builderComponents/CommonProps/CommonProps'\nimport DraggableCommonProp from '../builderComponents/CommonProps/components/DraggableCommonProp'\nimport { Divider, List, Input } from 'rsuite'\n\nconst BuilderBody = ({ faker }) => {\n  const fakerObj = useMemo(() => faker, [faker])\n  const [keyword, setKeyword] = useState('')\n  return (\n    <>\n      <CommonProps />\n      <Divider />\n      <h4>Other Items</h4>\n      <Input\n        style={{ marginBottom: 10 }}\n        placeholder=\"search in faker functions!\"\n        value={keyword}\n        onChange={setKeyword}\n      />\n      <List>\n        {fakerObj\n          .filter((obj) =>\n            obj.label.toLowerCase().includes(keyword.toLowerCase())\n          )\n          .map(({ groupName, label, value: func }) => (\n            <DraggableCommonProp type={groupName} label={label} func={func} />\n          ))}\n      </List>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { faker: state.faker }\n}\n\nexport default connect(mapStateToProps)(BuilderBody)\n","import React, { useState, useCallback } from 'react'\nimport { Navbar, Nav, Icon, Drawer, Badge } from 'rsuite'\nimport { NavLink } from 'react-router-dom'\nimport BuilderBody from './Builder/BuilderBody/BuilderBody'\nconst { Body } = Navbar\nconst { Item } = Nav\n\nfunction HeaderComp() {\n  const [state, setState] = useState({ show: false })\n  const toggleDrawer = useCallback((show) => setState({ show: !show }), [\n    setState,\n  ])\n  return (\n    <Navbar>\n      <Body>\n        <Nav>\n          <NavLink to=\"/\" activeClassName=\"active-route\" exact={true}>\n            <Item\n              renderItem={() => (\n                <span className=\"rs-nav-item-content\">\n                  <Icon icon=\"home\" /> Pollux\n                </span>\n              )}\n            ></Item>\n          </NavLink>\n          <NavLink to=\"/generate\" activeClassName=\"active-route\">\n            <Item\n              renderItem={() => (\n                <span className=\"rs-nav-item-content\">\n                  <Icon icon=\"magic2\" />\n                  Generate\n                </span>\n              )}\n            >\n              About\n            </Item>\n          </NavLink>\n        </Nav>\n        <Nav pullRight>\n          <Item\n            onClick={() => toggleDrawer(state.show)}\n            icon={<Icon icon=\"creative\" />}\n          >\n            Builder <Badge content=\"NEW!\"></Badge>\n          </Item>\n\n          <Drawer\n            backdrop={false}\n            show={state.show}\n            size=\"xs\"\n            placement=\"left\"\n            onHide={() => toggleDrawer(true)}\n          >\n            <Drawer.Header>\n              <Drawer.Title>\n                <h4>Builder Items</h4>\n                <p>You can drag and drop them into any model</p>\n              </Drawer.Title>\n            </Drawer.Header>\n            <Drawer.Body>\n              <BuilderBody />\n            </Drawer.Body>\n          </Drawer>\n        </Nav>\n      </Body>\n    </Navbar>\n  )\n}\n\nexport default HeaderComp\n","import React from 'react'\nimport {\n  Grid,\n  Row,\n  Col,\n  Panel,\n  Divider,\n  Icon,\n  Message,\n  IconButton,\n} from 'rsuite'\nimport prototype from './prototype.svg'\nimport prototype2 from './prototype2.svg'\nimport features from './features.svg'\nimport box from './box.svg'\n\nconst ContentComp = () => {\n  return (\n    <section>\n      <Grid fluid className=\"site-layout-content\">\n        <Row>\n          <Col xs={1} sm={1} md={6}></Col>\n          <Col xs={24} sm={24} md={12}>\n            <Panel bodyFill style={{ display: 'inline-block', width: '100%' }}>\n              <img src={prototype} height=\"240\" width={'100%'} alt=\"taken\" />\n              <Panel header={<h1>POLLUX</h1>} style={{ textAlign: 'center' }}>\n                <h4>\n                  <Icon icon=\"certificate\" size=\"2x\" /> The app that generate\n                  fake data and{' '}\n                  <a\n                    href=\"https://github.com/typicode/json-server\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    json-server\n                  </a>{' '}\n                  APIs\n                </h4>\n              </Panel>\n            </Panel>\n          </Col>\n          <Col xs={1} sm={1} md={6}></Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Col xs={1} sm={1} md={6}></Col>\n          <Col xs={24} sm={24} md={12}>\n            <img src={prototype2} height=\"240\" width={'100%'} alt=\"taken\" />\n            <Panel bodyFill style={{ display: 'inline-block', width: '100%' }}>\n              <Panel\n                header={<h1>Prototype</h1>}\n                style={{ textAlign: 'center' }}\n              >\n                <h4>\n                  <Icon icon=\"certificate\" size=\"2x\" /> Define prototypes and\n                  their properties\n                </h4>\n              </Panel>\n            </Panel>\n          </Col>\n          <Col xs={1} sm={1} md={6}></Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Col xs={1} sm={1} md={6}></Col>\n          <Col xs={24} sm={24} md={12}>\n            <img src={box} height=\"240\" width={'100%'} alt=\"taken\" />\n            <Panel bodyFill style={{ display: 'inline-block', width: '100%' }}>\n              <Panel header={<h1>Generate</h1>} style={{ textAlign: 'center' }}>\n                <h4>\n                  <Icon icon=\"certificate\" size=\"2x\" /> Generate fake data and{' '}\n                  <a\n                    href=\"https://github.com/typicode/json-server\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    json-server\n                  </a>{' '}\n                  API's based on your prototypes\n                </h4>\n              </Panel>\n            </Panel>\n          </Col>\n          <Col xs={1} sm={1} md={6}></Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Col xs={1} sm={1} md={6}></Col>\n          <Col xs={24} sm={24} md={12}>\n            <img src={features} height=\"240\" width={'100%'} alt=\"taken\" />\n            <Panel bodyFill style={{ display: 'inline-block', width: '100%' }}>\n              <Panel header={<h1 style={{ textAlign: 'center' }}>Features</h1>}>\n                <Message\n                  showIcon\n                  type=\"info\"\n                  title={\n                    <h6>\n                      Most of{' '}\n                      <a\n                        href=\"https://github.com/marak/Faker.js/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        faker\n                      </a>\n                      's functions\n                    </h6>\n                  }\n                />\n                <Message\n                  showIcon\n                  type=\"info\"\n                  title={\n                    <h6>\n                      <a\n                        href=\"https://github.com/typicode/json-server\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        json-server\n                      </a>{' '}\n                      intergration\n                    </h6>\n                  }\n                />\n                <Message\n                  showIcon\n                  type=\"info\"\n                  title={<h6>one to many relations between models</h6>}\n                />\n                <Message\n                  showIcon\n                  type=\"info\"\n                  title={\n                    <h6>\n                      Drag Drop interface for selecting{' '}\n                      <a\n                        href=\"https://github.com/marak/Faker.js/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        faker\n                      </a>\n                      's functions in an easy way\n                    </h6>\n                  }\n                />\n                <Message\n                  showIcon\n                  type=\"warning\"\n                  title={\n                    <h6>\n                      lost? checkout these videos{' '}\n                      <a\n                        href=\"https://www.youtube.com/watch?v=Vh0M0oNo7Gc&t=9s\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        #1\n                      </a>{' '}\n                      <a\n                        href=\"https://youtu.be/4Kwv98RDoSM\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        #2\n                      </a>{' '}\n                      <a\n                        href=\"https://youtu.be/Vh0M0oNo7Gc\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        #3\n                      </a>{' '}\n                      <a\n                        href=\"https://youtu.be/M8XhhTzK00g\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        #4\n                      </a>{' '}\n                      or click on the{' '}\n                      <IconButton\n                        icon={<Icon icon=\"twinkle-star\" />}\n                        color=\"blue\"\n                        circle\n                      />{' '}\n                      icon\n                    </h6>\n                  }\n                />\n                <Message\n                  showIcon\n                  type=\"warning\"\n                  title={\n                    <h6>\n                      Repo{' '}\n                      <a\n                        href=\"https://github.com/MohammedAl-Rowad/pollux\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        here\n                      </a>\n                    </h6>\n                  }\n                />\n              </Panel>\n            </Panel>\n          </Col>\n          <Col xs={1} sm={1} md={6}></Col>\n        </Row>\n      </Grid>\n    </section>\n  )\n}\n\nexport default ContentComp\n","import React from 'react'\nimport { IconButton, Icon } from 'rsuite'\n\nconst FooterComp = () => {\n  return (\n    <section style={{ textAlign: 'center' }}>\n      Made by <b>Rowad</b>{' '}\n      <a\n        href=\"https://www.linkedin.com/in/mohammed-al-rowad/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"linkedin-square\" />} />\n      </a>\n      {'  '}\n      <a\n        href=\"https://github.com/MohammedAl-Rowad\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"github-alt\" />} />\n      </a>\n      {'  '}\n      <a\n        href=\"https://www.youtube.com/channel/UC1Uw_GN4sodGisimwZNzMoA?view_as=subscriber\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"youtube-play\" />} />\n      </a>\n    </section>\n  )\n}\n\nexport default FooterComp\n","import React from 'react'\n// import 'rsuite/dist/styles/rsuite-dark.css'\nimport './App.css'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport { Header, Content, Footer, Generate } from './components/'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nconsole.log(\n  `%c\n\n'########:::'#######::'##:::::::'##:::::::'##::::'##:'##::::'##:\n ##.... ##:'##.... ##: ##::::::: ##::::::: ##:::: ##:. ##::'##::\n ##:::: ##: ##:::: ##: ##::::::: ##::::::: ##:::: ##::. ##'##:::\n ########:: ##:::: ##: ##::::::: ##::::::: ##:::: ##:::. ###::::\n ##.....::: ##:::: ##: ##::::::: ##::::::: ##:::: ##::: ## ##:::\n ##:::::::: ##:::: ##: ##::::::: ##::::::: ##:::: ##:: ##:. ##::\n ##::::::::. #######:: ########: ########:. #######:: ##:::. ##:\n..::::::::::.......:::........::........:::.......:::..:::::..::\n`,\n  'color: #4E7F97'\n)\n\nconsole.log(\n  '%cRepo: https://github.com/MohammedAl-Rowad/pollux',\n  'color: #4E7F97; font-size: 20px'\n)\n\nfunction App() {\n  return (\n    <Router>\n      <DndProvider backend={HTML5Backend} options={{ enableMouseEvents: true }}>\n        <Header />\n        <Route path=\"/\" exact={true}>\n          <main>\n            <Content />\n            <Footer />\n          </main>\n        </Route>\n        <Route path=\"/generate\">\n          <Generate />\n          <Footer />\n        </Route>\n      </DndProvider>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_MODEL, DELETE_MODEL, UPDATE_AMOUNT } from '../actionTypes'\n\nconst initialState = []\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case ADD_MODEL: {\n      return [...state, { ...payload, amount: payload.amount || 10 }]\n    }\n    case DELETE_MODEL: {\n      return state.filter(({ id }) => id !== payload)\n    }\n    case UPDATE_AMOUNT: {\n      // payload is num here\n      const { modelId, amount } = payload\n      return state.map((model) => {\n        if (model.id === modelId) {\n          return { ...model, amount }\n        } else {\n          return { ...model }\n        }\n      })\n    }\n    default:\n      return state\n  }\n}\n","import {\n  random,\n  name,\n  address,\n  commerce,\n  company,\n  database,\n  date,\n  finance,\n  hacker,\n  image,\n  internet,\n  lorem,\n  phone,\n} from 'faker'\n\nconst randomCpy = { ...random }\nconst dateCpy = { ...date }\ndelete randomCpy.objectElement\ndelete randomCpy.arrayElement\ndelete dateCpy.between\n\nconst names = { ...name }\nnames.fullName = name.findName\ndelete names.findName\nconst objects = {\n  random: randomCpy,\n  name: names,\n  address,\n  commerce,\n  company,\n  database,\n  date: dateCpy,\n  finance,\n  hacker,\n  image,\n  internet,\n  lorem,\n  phone,\n}\n\nconst initialState = Object.keys(objects)\n  .map((name) =>\n    Object.keys(objects[name]).map((funName) => ({\n      groupName: name,\n      label: (() => {\n        const res = funName.replace(/([A-Z])/g, ' $1')\n        return `${res.charAt(0).toUpperCase()}${res.slice(1)}`\n      })(),\n      value: funName,\n    }))\n  )\n  .reduce((prevArr, currArr) => [...prevArr, ...currArr], [])\n\nexport default function (state = initialState, action) {\n  return state\n}\n","import {\n  ADD_RPOP_NAME,\n  REMOVE_ALL_RPOPS,\n  EDIT_PROP,\n  DELETE_PROP,\n  JUST_ADD_PROP,\n} from '../actionTypes'\nimport { v4 } from 'uuid'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_RPOP_NAME: {\n      const { uuid, propName } = action.payload\n      return {\n        ...state,\n        [uuid]: [...(state[uuid] || []), { propName, id: v4() }],\n      }\n    }\n    case JUST_ADD_PROP: {\n      const { uuid: modelUuid, props } = action.payload\n      return {\n        ...state,\n        [modelUuid]: [...(state[modelUuid] || []), ...props],\n      }\n    }\n    case REMOVE_ALL_RPOPS: {\n      const uuid = action.payload\n      delete state[uuid]\n      return { ...state }\n    }\n    case EDIT_PROP: {\n      const { id: modelUuid, propId, ...propData } = action.payload\n      // we need to save it in its orignal place\n      const idx = state[modelUuid].findIndex(({ id }) => id === propId)\n      const findProp = {\n        ...state[modelUuid].find(({ id }) => id === propId),\n        ...propData,\n      }\n\n      if (!propData.func && !findProp.func) delete findProp.func\n      const without = state[modelUuid].filter(({ id }) => id !== propId)\n      return {\n        ...state,\n        [modelUuid]: [\n          ...without.slice(0, idx),\n          findProp,\n          ...without.slice(idx),\n        ],\n      }\n    }\n    case DELETE_PROP: {\n      const { modelId, propId } = action.payload\n      return {\n        ...state,\n        [modelId]: [...state[modelId].filter(({ id }) => id !== propId)],\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { ADD_RELATION, REMOVE_RELATION } from '../actionTypes'\n\nconst initialState = {}\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case ADD_RELATION: {\n      const { distId, modelId } = payload\n      return {\n        ...state,\n        [modelId]: [...(state[modelId] || []), distId],\n      }\n    }\n    case REMOVE_RELATION: {\n      const { distId, modelId } = payload\n      return {\n        ...state,\n        [modelId]: (state[modelId] || []).filter((id) => distId !== id),\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport models from './models.reducer'\nimport faker from './faker.reducer'\nimport prop from './prop.reducer'\nimport relations from './relation.reducer'\n\nexport default combineReducers({ models, faker, prop, relations })\n","import { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nexport default createStore(rootReducer, composeWithDevTools())\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Pollux from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n// console.log(store.getState())\n// store.subscribe(() => console.log(store.getState()))\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Pollux />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/empty.7448158e.svg\";","module.exports = __webpack_public_path__ + \"static/media/emptySave.10032122.svg\";","module.exports = __webpack_public_path__ + \"static/media/loadModels.a2b0ac77.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DraggableCommonProp_item__1Ue75\"};","module.exports = __webpack_public_path__ + \"static/media/prototype.ea2fca44.svg\";","module.exports = __webpack_public_path__ + \"static/media/prototype2.f4e51a29.svg\";","module.exports = __webpack_public_path__ + \"static/media/features.ac13338d.svg\";","module.exports = __webpack_public_path__ + \"static/media/box.d0bcb7b7.svg\";"],"sourceRoot":""}